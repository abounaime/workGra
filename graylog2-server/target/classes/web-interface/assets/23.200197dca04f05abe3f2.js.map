{"version":3,"sources":["webpack:///23.200197dca04f05abe3f2.js","webpack:///./src/components/inputs/InputDropdown.jsx","webpack:///./src/components/inputs/CreateInputControl.jsx","webpack:///./src/components/inputs/InputListItem.jsx","webpack:///./src/components/inputs/InputForm.jsx","webpack:///./src/components/inputs/InputStateBadge.jsx","webpack:///./src/components/inputs/InputStateControl.jsx","webpack:///./src/components/inputs/InputStaticFields.jsx","webpack:///./src/components/inputs/InputThroughput.jsx","webpack:///./src/components/inputs/InputsList.jsx","webpack:///./src/components/inputs/NodeOrGlobalSelect.jsx","webpack:///./src/components/inputs/StaticFieldForm.jsx","webpack:///./src/logic/inputs/InputStateComparator.js","webpack:///./src/pages/NodeInputsPage.jsx","webpack:///delegated ./node_modules/react-addons-linked-state-mixin/index.js from dll-reference __vendor?2324****","webpack:///./src/components/inputs/index.jsx"],"names":["webpackJsonp","1019","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reactAddonsLinkedStateMixin","_reactAddonsLinkedStateMixin2","_reactBootstrap","_bootstrap","_Spinner","_Spinner2","InputDropdown","createClass","displayName","propTypes","inputs","PropTypes","object","title","string","preselectedInputId","onLoadMessage","func","disabled","bool","mixins","getInitialState","selectedInput","this","props","PLACEHOLDER","_formatInput","input","createElement","key","id","type","_sortByTitle","input1","input2","localeCompare","_onLoadMessage","state","_formatStaticInput","Input","style","float","width","marginRight","render","get","Button","bsStyle","onClick","sort","map","valueLink","linkState","placeholder","toArray","1061","_reflux","_reflux2","_common","_ActionsProvider","_ActionsProvider2","_StoreProvider","_StoreProvider2","_inputs","InputTypesActions","getActions","InputsActions","InputTypesStore","getStore","CreateInputControl","connect","undefined","selectedInputDefinition","_formatSelectOptions","_this","options","inputTypes","keys","label","inputTypeA","inputTypeB","toLowerCase","push","_onInputSelect","_this2","setState","triggerPromise","then","inputDefinition","_openModal","event","preventDefault","refs","configurationForm","open","_createInput","data","_this3","create","inputModal","inputTypeName","InputForm","ref","configFields","requested_configuration","helpBlock","typeName","submitAction","Row","className","Col","md","onSubmit","Select","matchProp","onValueChange","href","target","marginLeft","1062","_reactRouterBootstrap","_configurationforms","_PermissionsMixin","_PermissionsMixin2","_Routes","_Routes2","InputListItem","isRequired","currentNode","permissions","array","_deleteInput","window","confirm","delete","_openStaticFieldForm","staticFieldForm","_editInput","_updateInput","update","Spinner","definition","inputDescriptions","titleSuffix","name","InputStateBadge","actions","isPermitted","LinkContainer","to","search","relative","extractorRoute","global","global_input_extractors","local_input_extractors","node_id","InputStateControl","showMetricsMenuItem","filtered_metrics","node","MenuItem","DropdownButton","pullRight","IfPermitted","onSelect","divider","subtitle","LinkToNode","nodeId","inputForm","globalValue","nodeValue","titleValue","includeTitleField","values","attributes","additionalContent","ConfigurationWell","configuration","typeDefinition","StaticFieldForm","InputStaticFields","InputThroughput","EntityListItem","description","createdFromContentPack","content_pack","contentRow","1140","_extends","assign","i","arguments","length","source","prototype","hasOwnProperty","call","_jquery","_jquery2","_handleChange","field","_onSubmit","newData","extend","getValue","ConfigurationForm","NodeOrGlobalSelect","onChange","1141","_InputStateComparator","_InputStateComparator2","InputStatesStore","NodesStore","comparator","_labelClassForState","sortedStates","nodesWithKnownState","reduce","numberOfNodes","count","nodes","_textForState","join","_isLoading","inputStates","inputId","forEach","sorted","compare","bind","popOverText","popover","Popover","fontSize","OverlayTrigger","trigger","placement","overlay","rootClose","Label","bsSize","cursor","text","1142","inputStateFilter","connectFilter","loading","_isInputRunning","inputState","nodeIDs","some","nodeID","_startInput","start","finally","_stopInput","stop","1143","InputStaticFieldsStore","_deleteStaticField","fieldName","destroy","_deleteButton","verticalAlign","_formatStaticFields","staticFields","formattedFields","static_fields","marginBottom","1144","_numeral","_numeral2","_NumberUtils","_NumberUtils2","MetricsStore","MetricsActions","showDetails","componentWillMount","_metricNames","metricName","addGlobal","componentWillUnmount","removeGlobal","_prefix","metric","_getValueFromMetric","rate","mean","_calculateMetrics","metrics","result","previous","isNaN","NaN","_formatCount","format","_formatNetworkStats","writtenBytes1Sec","writtenBytesTotal","readBytes1Sec","readBytesTotal","formatBytes","_formatConnections","openConnections","totalConnections","_formatAllNodeDetails","_formatNodeDetails","emptyMessages","_toggleShowDetails","evt","incomingMessages","1145","_javascriptNaturalSort","_javascriptNaturalSort2","_EntityList","_EntityList2","_InputListItem","_InputListItem2","_CreateInputControl","_CreateInputControl2","SingleNodeActions","InputsStore","SingleNodeStore","InputsList","listenTo","globalInputs","localInputs","componentDidMount","list","_splitInputs","filter","inputA","inputB","_nodeAffix","bsNoItemsStyle","noItemsText","items","1146","_onChangeGlobal","checked","_onChangeNode","short_node_id","hostname","nodeSelect","help","required","1147","modal","_addStaticField","fieldValue","close","BootstrapModalForm","submitButtonText","onSubmitForm","data-validate","autoFocus","1182","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","descriptor","enumerable","configurable","writable","protoProps","staticProps","InputStateComparator","mapping","CREATED","INITIALIZED","INVALID_CONFIGURATION","STARTING","RUNNING","FAILED","STOPPING","STOPPED","TERMINATED","state1","state2","toUpperCase","1396","nodeFilter","params","CurrentUserStore","NodeInputsPage","interval","setInterval","clearInterval","DocumentTitle","PageHeader","SYSTEM","INPUTS","currentUser","961","977","_InputDropdown","_InputForm","_InputsList","_InputStateBadge","_InputStateControl","_InputThroughput","_InputStaticFields","_NodeOrGlobalSelect","_StaticFieldForm"],"mappings":"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","file":"23.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([23],{\n\n/***/ 1019:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactAddonsLinkedStateMixin = __webpack_require__(961);\n\nvar _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _Spinner = __webpack_require__(260);\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputDropdown = _react2.default.createClass({\n  displayName: 'InputDropdown',\n\n  propTypes: {\n    inputs: _react.PropTypes.object,\n    title: _react.PropTypes.string,\n    preselectedInputId: _react.PropTypes.string,\n    onLoadMessage: _react.PropTypes.func,\n    disabled: _react.PropTypes.bool\n  },\n  mixins: [_reactAddonsLinkedStateMixin2.default],\n  getInitialState: function getInitialState() {\n    return {\n      selectedInput: this.props.preselectedInputId || this.PLACEHOLDER\n    };\n  },\n\n  PLACEHOLDER: 'placeholder',\n  _formatInput: function _formatInput(input) {\n    return _react2.default.createElement(\n      'option',\n      { key: input.id, value: input.id },\n      input.title,\n      ' (',\n      input.type,\n      ')'\n    );\n  },\n  _sortByTitle: function _sortByTitle(input1, input2) {\n    return input1.title.localeCompare(input2.title);\n  },\n  _onLoadMessage: function _onLoadMessage() {\n    this.props.onLoadMessage(this.state.selectedInput);\n  },\n  _formatStaticInput: function _formatStaticInput(input) {\n    return _react2.default.createElement(\n      _bootstrap.Input,\n      { type: 'select', style: { float: 'left', width: 400, marginRight: 10 }, disabled: true },\n      _react2.default.createElement(\n        'option',\n        null,\n        input.title + ' (' + input.type + ')'\n      )\n    );\n  },\n  render: function render() {\n    // When an input is pre-selected, show a static dropdown\n    if (this.props.inputs && this.props.preselectedInputId) {\n      return _react2.default.createElement(\n        'div',\n        null,\n        this._formatStaticInput(this.props.inputs.get(this.props.preselectedInputId)),\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info', disabled: this.state.selectedInput === this.PLACEHOLDER,\n            onClick: this._onLoadMessage },\n          this.props.title\n        )\n      );\n    }\n\n    if (this.props.inputs) {\n      var inputs = this.props.inputs.sort(this._sortByTitle).map(this._formatInput);\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _bootstrap.Input,\n          { type: 'select', style: { float: 'left', width: 400, marginRight: 10 },\n            valueLink: this.linkState('selectedInput'), placeholder: this.PLACEHOLDER },\n          _react2.default.createElement(\n            'option',\n            { value: this.PLACEHOLDER },\n            'Select an input'\n          ),\n          inputs.toArray()\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info', disabled: this.props.disabled || this.state.selectedInput === this.PLACEHOLDER,\n            onClick: this._onLoadMessage },\n          this.props.title\n        )\n      );\n    }\n\n    return _react2.default.createElement(_Spinner2.default, null);\n  }\n});\n\nexports.default = InputDropdown;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1061:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _common = __webpack_require__(48);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _inputs = __webpack_require__(977);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputTypesActions = _ActionsProvider2.default.getActions('InputTypes');\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\nvar InputTypesStore = _StoreProvider2.default.getStore('InputTypes');\n\nvar CreateInputControl = _react2.default.createClass({\n  displayName: 'CreateInputControl',\n\n  mixins: [_reflux2.default.connect(InputTypesStore)],\n  getInitialState: function getInitialState() {\n    return {\n      selectedInput: undefined,\n      selectedInputDefinition: undefined\n    };\n  },\n  _formatSelectOptions: function _formatSelectOptions() {\n    var _this = this;\n\n    var options = [];\n\n    if (this.state.inputTypes) {\n      var inputTypesIds = Object.keys(this.state.inputTypes);\n      options = inputTypesIds.map(function (id) {\n        return { value: id, label: _this.state.inputTypes[id] };\n      });\n      options.sort(function (inputTypeA, inputTypeB) {\n        return inputTypeA.label.toLowerCase().localeCompare(inputTypeB.label.toLowerCase());\n      });\n    } else {\n      options.push({ value: 'none', label: 'No inputs available', disabled: true });\n    }\n\n    return options;\n  },\n  _onInputSelect: function _onInputSelect(selectedInput) {\n    var _this2 = this;\n\n    if (selectedInput === '') {\n      this.setState(this.getInitialState());\n    }\n\n    this.setState({ selectedInput: selectedInput });\n    InputTypesActions.get.triggerPromise(selectedInput).then(function (inputDefinition) {\n      return _this2.setState({ selectedInputDefinition: inputDefinition });\n    });\n  },\n  _openModal: function _openModal(event) {\n    event.preventDefault();\n    this.refs.configurationForm.open();\n  },\n  _createInput: function _createInput(data) {\n    var _this3 = this;\n\n    InputsActions.create(data).then(function () {\n      _this3.setState(_this3.getInitialState());\n    });\n  },\n  render: function render() {\n    var inputModal = void 0;\n    if (this.state.selectedInputDefinition) {\n      var inputTypeName = this.state.inputTypes[this.state.selectedInput];\n      inputModal = _react2.default.createElement(_inputs.InputForm, { ref: 'configurationForm',\n        key: 'configuration-form-input',\n        configFields: this.state.selectedInputDefinition.requested_configuration,\n        title: _react2.default.createElement(\n          'span',\n          null,\n          'Launch new ',\n          _react2.default.createElement(\n            'em',\n            null,\n            inputTypeName\n          ),\n          ' input'\n        ),\n        helpBlock: 'Select a name of your new input that describes it.',\n        typeName: this.state.selectedInput,\n        submitAction: this._createInput });\n    }\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content input-new' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'form',\n          { className: 'form-inline', onSubmit: this._openModal },\n          _react2.default.createElement(\n            'div',\n            { className: 'form-group', style: { width: 300 } },\n            _react2.default.createElement(_common.Select, { placeholder: 'Select input', options: this._formatSelectOptions(), matchProp: 'label',\n              onValueChange: this._onInputSelect, value: this.state.selectedInput })\n          ),\n          '\\xA0',\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { bsStyle: 'success', type: 'submit', disabled: !this.state.selectedInput },\n            'Launch new input'\n          ),\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { href: 'https://marketplace.graylog.org/', target: '_blank', bsStyle: 'info', style: { marginLeft: 10 } },\n            _react2.default.createElement('i', { className: 'fa fa-external-link' }),\n            '\\xA0Find more inputs'\n          )\n        ),\n        inputModal\n      )\n    );\n  }\n});\n\nexports.default = CreateInputControl;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1062:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _common = __webpack_require__(48);\n\nvar _configurationforms = __webpack_require__(953);\n\nvar _PermissionsMixin = __webpack_require__(165);\n\nvar _PermissionsMixin2 = _interopRequireDefault(_PermissionsMixin);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _inputs = __webpack_require__(977);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputTypesStore = _StoreProvider2.default.getStore('InputTypes');\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\nvar InputListItem = _react2.default.createClass({\n  displayName: 'InputListItem',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired,\n    currentNode: _react.PropTypes.object.isRequired,\n    permissions: _react.PropTypes.array.isRequired\n  },\n  mixins: [_PermissionsMixin2.default, _reflux2.default.connect(InputTypesStore)],\n  _deleteInput: function _deleteInput() {\n    if (window.confirm('Do you really want to delete input \\'' + this.props.input.title + '\\'?')) {\n      InputsActions.delete(this.props.input);\n    }\n  },\n  _openStaticFieldForm: function _openStaticFieldForm() {\n    this.refs.staticFieldForm.open();\n  },\n  _editInput: function _editInput() {\n    this.refs.configurationForm.open();\n  },\n  _updateInput: function _updateInput(data) {\n    InputsActions.update(this.props.input.id, data);\n  },\n  render: function render() {\n    if (!this.state.inputTypes) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var input = this.props.input;\n    var definition = this.state.inputDescriptions[input.type];\n\n    var titleSuffix = _react2.default.createElement(\n      'span',\n      null,\n      this.props.input.name,\n      '\\xA0',\n      _react2.default.createElement(_inputs.InputStateBadge, { input: this.props.input })\n    );\n\n    var actions = [];\n\n    if (this.isPermitted(this.props.permissions, ['searches:relative'])) {\n      actions.push(_react2.default.createElement(\n        _reactRouterBootstrap.LinkContainer,\n        { key: 'received-messages-' + this.props.input.id,\n          to: _Routes2.default.search('gl2_source_input:' + this.props.input.id, { relative: 0 }) },\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info' },\n          'Show received messages'\n        )\n      ));\n    }\n\n    if (this.isPermitted(this.props.permissions, ['inputs:edit:' + this.props.input.id])) {\n      var extractorRoute = void 0;\n\n      if (this.props.input.global) {\n        extractorRoute = _Routes2.default.global_input_extractors(this.props.input.id);\n      } else {\n        extractorRoute = _Routes2.default.local_input_extractors(this.props.currentNode.node_id, this.props.input.id);\n      }\n\n      actions.push(_react2.default.createElement(\n        _reactRouterBootstrap.LinkContainer,\n        { key: 'manage-extractors-' + this.props.input.id, to: extractorRoute },\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info' },\n          'Manage extractors'\n        )\n      ));\n\n      actions.push(_react2.default.createElement(_inputs.InputStateControl, { key: 'input-state-control-' + this.props.input.id, input: this.props.input }));\n    }\n\n    var showMetricsMenuItem = void 0;\n    if (!this.props.input.global) {\n      showMetricsMenuItem = _react2.default.createElement(\n        _reactRouterBootstrap.LinkContainer,\n        { to: _Routes2.default.filtered_metrics(this.props.input.node, this.props.input.id) },\n        _react2.default.createElement(\n          _reactBootstrap.MenuItem,\n          { key: 'show-metrics-' + this.props.input.id },\n          'Show metrics'\n        )\n      );\n    }\n\n    actions.push(_react2.default.createElement(\n      _reactBootstrap.DropdownButton,\n      { key: 'more-actions-' + this.props.input.id,\n        title: 'More actions',\n        id: 'more-actions-dropdown-' + this.props.input.id,\n        pullRight: true },\n      _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'inputs:edit:' + this.props.input.id },\n        _react2.default.createElement(\n          _reactBootstrap.MenuItem,\n          { key: 'edit-input-' + this.props.input.id,\n            onSelect: this._editInput,\n            disabled: definition === undefined },\n          'Edit input'\n        )\n      ),\n      showMetricsMenuItem,\n      _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'inputs:edit:' + this.props.input.id },\n        _react2.default.createElement(\n          _reactBootstrap.MenuItem,\n          { key: 'add-static-field-' + this.props.input.id, onSelect: this._openStaticFieldForm },\n          'Add static field'\n        )\n      ),\n      _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'inputs:terminate' },\n        _react2.default.createElement(_reactBootstrap.MenuItem, { key: 'divider-' + this.props.input.id, divider: true })\n      ),\n      _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'inputs:terminate' },\n        _react2.default.createElement(\n          _reactBootstrap.MenuItem,\n          { key: 'delete-input-' + this.props.input.id, onSelect: this._deleteInput },\n          'Delete input'\n        )\n      )\n    ));\n\n    var subtitle = void 0;\n\n    if (!this.props.input.global && this.props.input.node) {\n      subtitle = _react2.default.createElement(\n        'span',\n        null,\n        'On node',\n        ' ',\n        _react2.default.createElement(_common.LinkToNode, { nodeId: this.props.input.node })\n      );\n    }\n\n    var inputForm = definition ? _react2.default.createElement(_inputs.InputForm, { ref: 'configurationForm', key: 'edit-form-input-' + input.id,\n      globalValue: input.global, nodeValue: input.node,\n      configFields: definition.requested_configuration,\n      title: 'Editing Input ' + input.title,\n      titleValue: input.title,\n      typeName: input.type, includeTitleField: true,\n      submitAction: this._updateInput, values: input.attributes }) : null;\n\n    var additionalContent = _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 8 },\n        _react2.default.createElement(_configurationforms.ConfigurationWell, { className: 'configuration-well',\n          id: input.id,\n          configuration: input.attributes,\n          typeDefinition: definition || {} }),\n        _react2.default.createElement(_inputs.StaticFieldForm, { ref: 'staticFieldForm', input: this.props.input }),\n        _react2.default.createElement(_inputs.InputStaticFields, { input: this.props.input })\n      ),\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 4 },\n        _react2.default.createElement(_inputs.InputThroughput, { input: input })\n      ),\n      inputForm\n    );\n\n    return _react2.default.createElement(_common.EntityListItem, { key: 'entry-list-' + this.props.input.id,\n      title: this.props.input.title,\n      titleSuffix: titleSuffix,\n      description: subtitle,\n      createdFromContentPack: !!this.props.input.content_pack,\n      actions: actions,\n      contentRow: additionalContent });\n  }\n});\n\nexports.default = InputListItem;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1140:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _jquery = __webpack_require__(12);\n\nvar _jquery2 = _interopRequireDefault(_jquery);\n\nvar _inputs = __webpack_require__(977);\n\nvar _configurationforms = __webpack_require__(953);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputForm = _react2.default.createClass({\n  displayName: 'InputForm',\n\n  propTypes: {\n    globalValue: _react2.default.PropTypes.bool,\n    nodeValue: _react2.default.PropTypes.string,\n    titleValue: _react2.default.PropTypes.string,\n    submitAction: _react2.default.PropTypes.func.isRequired,\n    values: _react2.default.PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      global: this.props.globalValue !== undefined ? this.props.globalValue : false,\n      node: this.props.nodeValue !== undefined ? this.props.nodeValue : undefined\n    };\n  },\n  _handleChange: function _handleChange(field, value) {\n    var state = {};\n    state[field] = value;\n    this.setState(state);\n  },\n  _onSubmit: function _onSubmit(data) {\n    var newData = _jquery2.default.extend(data, { global: this.state.global, node: this.state.node });\n    this.props.submitAction(newData);\n  },\n  open: function open() {\n    this.refs.configurationForm.open();\n  },\n  render: function render() {\n    var values = this.props.values ? this.props.values : this.refs.configurationForm ? this.refs.configurationForm.getValue().configuration : {};\n    var titleValue = this.props.titleValue ? this.props.titleValue : this.refs.configurationForm ? this.refs.configurationForm.getValue().titleValue : '';\n    return _react2.default.createElement(\n      _configurationforms.ConfigurationForm,\n      _extends({}, this.props, { ref: 'configurationForm', values: values, titleValue: titleValue,\n        submitAction: this._onSubmit }),\n      _react2.default.createElement(_inputs.NodeOrGlobalSelect, { onChange: this._handleChange, global: this.state.global, node: this.state.node })\n    );\n  }\n});\n\nexports.default = InputForm;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1141:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _InputStateComparator = __webpack_require__(1182);\n\nvar _InputStateComparator2 = _interopRequireDefault(_InputStateComparator);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputStatesStore = _StoreProvider2.default.getStore('InputStates');\nvar NodesStore = _StoreProvider2.default.getStore('Nodes');\n\nvar InputStateBadge = _react2.default.createClass({\n  displayName: 'InputStateBadge',\n\n  propTypes: {\n    input: _react2.default.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(InputStatesStore), _reflux2.default.connect(NodesStore)],\n  comparator: new _InputStateComparator2.default(),\n  _labelClassForState: function _labelClassForState(sortedStates) {\n    var nodesWithKnownState = sortedStates.reduce(function (numberOfNodes, state) {\n      return numberOfNodes + state.count;\n    }, 0);\n\n    if (this.props.input.global && nodesWithKnownState !== Object.keys(this.state.nodes).length) {\n      return 'warning';\n    }\n\n    var state = sortedStates[0].state;\n    switch (state) {\n      case 'RUNNING':\n        return 'success';\n      case 'FAILED':\n        return 'danger';\n      case 'STARTING':\n        return 'info';\n      default:\n        return 'warning';\n    }\n  },\n  _textForState: function _textForState(sortedStates) {\n    if (this.props.input.global) {\n      return sortedStates.map(function (state) {\n        return state.count + ' ' + state.state;\n      }).join(', ');\n    }\n    return sortedStates[0].state;\n  },\n  _isLoading: function _isLoading() {\n    return !(this.state.inputStates && this.state.nodes);\n  },\n  render: function render() {\n    var _this = this;\n\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var input = this.props.input;\n    var inputId = input.id;\n\n    var inputStates = {};\n    if (this.state.inputStates[inputId]) {\n      Object.keys(this.state.inputStates[inputId]).forEach(function (node) {\n        var state = _this.state.inputStates[inputId][node].state;\n        if (!inputStates[state]) {\n          inputStates[state] = [];\n        }\n        inputStates[state].push(node);\n      });\n    }\n\n    var sorted = Object.keys(inputStates).sort(this.comparator.compare.bind(this.comparator)).map(function (state) {\n      return { state: state, count: inputStates[state].length };\n    });\n\n    if (sorted.length > 0) {\n      var popOverText = sorted.map(function (state) {\n        return inputStates[state.state].map(function (node) {\n          return _react2.default.createElement(\n            'span',\n            null,\n            _react2.default.createElement(_common.LinkToNode, { nodeId: node }),\n            ': ',\n            state.state,\n            _react2.default.createElement('br', null)\n          );\n        });\n      });\n      var popover = _react2.default.createElement(\n        _reactBootstrap.Popover,\n        { id: 'inputstate-badge-details', title: 'Input States for ' + input.title, style: { fontSize: 12 } },\n        popOverText\n      );\n      return _react2.default.createElement(\n        _reactBootstrap.OverlayTrigger,\n        { trigger: 'click', placement: 'bottom', overlay: popover, rootClose: true },\n        _react2.default.createElement(\n          _reactBootstrap.Label,\n          { bsStyle: this._labelClassForState(sorted), title: 'Click to show details',\n            bsSize: 'xsmall', style: { cursor: 'pointer' } },\n          this._textForState(sorted)\n        )\n      );\n    }\n    var text = input.global || input.node === undefined ? '0 RUNNING' : 'NOT RUNNING';\n    return _react2.default.createElement(\n      _reactBootstrap.Label,\n      { bsStyle: 'danger', bsSize: 'xsmall' },\n      text\n    );\n  }\n});\n\nexports.default = InputStateBadge;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1142:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputStatesStore = _StoreProvider2.default.getStore('InputStates');\n\nfunction inputStateFilter(state) {\n  return state.inputStates ? state.inputStates[this.props.input.id] : undefined;\n}\n\nvar InputStateControl = _react2.default.createClass({\n  displayName: 'InputStateControl',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connectFilter(InputStatesStore, 'inputState', inputStateFilter)],\n\n  getInitialState: function getInitialState() {\n    return {\n      loading: false\n    };\n  },\n  _isInputRunning: function _isInputRunning() {\n    var _this = this;\n\n    if (!this.state.inputState) {\n      return false;\n    }\n\n    var nodeIDs = Object.keys(this.state.inputState);\n    if (nodeIDs.length === 0) {\n      return false;\n    }\n\n    return nodeIDs.some(function (nodeID) {\n      var nodeState = _this.state.inputState[nodeID];\n      return nodeState.state === 'RUNNING';\n    });\n  },\n  _startInput: function _startInput() {\n    var _this2 = this;\n\n    this.setState({ loading: true });\n    InputStatesStore.start(this.props.input).finally(function () {\n      return _this2.setState({ loading: false });\n    });\n  },\n  _stopInput: function _stopInput() {\n    var _this3 = this;\n\n    this.setState({ loading: true });\n    InputStatesStore.stop(this.props.input).finally(function () {\n      return _this3.setState({ loading: false });\n    });\n  },\n  render: function render() {\n    if (this._isInputRunning()) {\n      return _react2.default.createElement(\n        _reactBootstrap.Button,\n        { bsStyle: 'primary', onClick: this._stopInput, disabled: this.state.loading },\n        this.state.loading ? 'Stopping...' : 'Stop input'\n      );\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Button,\n      { bsStyle: 'success', onClick: this._startInput, disabled: this.state.loading },\n      this.state.loading ? 'Starting...' : 'Start input'\n    );\n  }\n});\n\nexports.default = InputStateControl;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1143:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputStaticFieldsStore = _StoreProvider2.default.getStore('InputStaticFields');\n\nvar InputStaticFields = _react2.default.createClass({\n  displayName: 'InputStaticFields',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired\n  },\n  _deleteStaticField: function _deleteStaticField(fieldName) {\n    var _this = this;\n\n    return function () {\n      if (window.confirm('Are you sure you want to remove static field \\'' + fieldName + '\\' from \\'' + _this.props.input.title + '\\'?')) {\n        InputStaticFieldsStore.destroy(_this.props.input, fieldName);\n      }\n    };\n  },\n  _deleteButton: function _deleteButton(fieldName) {\n    return _react2.default.createElement(\n      _reactBootstrap.Button,\n      { bsStyle: 'link', bsSize: 'xsmall', style: { verticalAlign: 'baseline' }, onClick: this._deleteStaticField(fieldName) },\n      _react2.default.createElement('i', { className: 'fa fa-remove' })\n    );\n  },\n  _formatStaticFields: function _formatStaticFields(staticFields) {\n    var _this2 = this;\n\n    var formattedFields = [];\n    var staticFieldNames = Object.keys(staticFields);\n\n    staticFieldNames.forEach(function (fieldName) {\n      formattedFields.push(_react2.default.createElement(\n        'li',\n        { key: fieldName + '-field' },\n        _react2.default.createElement(\n          'strong',\n          null,\n          fieldName,\n          ':'\n        ),\n        ' ',\n        staticFields[fieldName],\n        ' ',\n        _this2._deleteButton(fieldName)\n      ));\n    });\n\n    return formattedFields;\n  },\n  render: function render() {\n    var staticFieldNames = Object.keys(this.props.input.static_fields);\n    if (staticFieldNames.length === 0) {\n      return _react2.default.createElement('div', null);\n    }\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'static-fields' },\n      _react2.default.createElement(\n        'h3',\n        { style: { marginBottom: 5 } },\n        'Static fields'\n      ),\n      _react2.default.createElement(\n        'ul',\n        null,\n        this._formatStaticFields(this.props.input.static_fields)\n      )\n    );\n  }\n});\n\nexports.default = InputStaticFields;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1144:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _numeral = __webpack_require__(115);\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _NumberUtils = __webpack_require__(117);\n\nvar _NumberUtils2 = _interopRequireDefault(_NumberUtils);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MetricsStore = _StoreProvider2.default.getStore('Metrics');\n\nvar MetricsActions = _ActionsProvider2.default.getActions('Metrics');\n\nvar InputThroughput = _react2.default.createClass({\n  displayName: 'InputThroughput',\n\n  propTypes: {\n    input: _react2.default.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(MetricsStore)],\n  getInitialState: function getInitialState() {\n    return {\n      showDetails: false\n    };\n  },\n  componentWillMount: function componentWillMount() {\n    this._metricNames().forEach(function (metricName) {\n      return MetricsActions.addGlobal(metricName);\n    });\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    this._metricNames().forEach(function (metricName) {\n      return MetricsActions.removeGlobal(metricName);\n    });\n  },\n  _metricNames: function _metricNames() {\n    return [this._prefix('incomingMessages'), this._prefix('emptyMessages'), this._prefix('open_connections'), this._prefix('total_connections'), this._prefix('written_bytes_1sec'), this._prefix('written_bytes_total'), this._prefix('read_bytes_1sec'), this._prefix('read_bytes_total')];\n  },\n  _prefix: function _prefix(metric) {\n    var input = this.props.input;\n    return input.type + '.' + input.id + '.' + metric;\n  },\n  _getValueFromMetric: function _getValueFromMetric(metric) {\n    if (metric === null || metric === undefined) {\n      return undefined;\n    }\n\n    switch (metric.type) {\n      case 'meter':\n        return metric.metric.rate.mean;\n      case 'gauge':\n        return metric.metric.value;\n      case 'counter':\n        return metric.metric.count;\n      default:\n        return undefined;\n    }\n  },\n  _calculateMetrics: function _calculateMetrics(metrics) {\n    var _this = this;\n\n    var result = {};\n    this._metricNames().forEach(function (metricName) {\n      result[metricName] = Object.keys(metrics).reduce(function (previous, nodeId) {\n        if (!metrics[nodeId][metricName]) {\n          return previous;\n        }\n        var value = _this._getValueFromMetric(metrics[nodeId][metricName]);\n        if (value !== undefined) {\n          return isNaN(previous) ? value : previous + value;\n        }\n        return previous;\n      }, NaN);\n    });\n\n    return result;\n  },\n  _formatCount: function _formatCount(count) {\n    return (0, _numeral2.default)(count).format('0,0');\n  },\n  _formatNetworkStats: function _formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal) {\n    var network = _react2.default.createElement(\n      'span',\n      { className: 'input-io' },\n      _react2.default.createElement(\n        'span',\n        null,\n        'Network IO: '\n      ),\n      _react2.default.createElement(\n        'span',\n        { className: 'persec' },\n        _react2.default.createElement('i', { className: 'fa fa-caret-down channel-direction channel-direction-down' }),\n        _react2.default.createElement(\n          'span',\n          { className: 'rx value' },\n          _NumberUtils2.default.formatBytes(readBytes1Sec),\n          ' '\n        ),\n        _react2.default.createElement('i', { className: 'fa fa-caret-up channel-direction channel-direction-up' }),\n        _react2.default.createElement(\n          'span',\n          { className: 'tx value' },\n          _NumberUtils2.default.formatBytes(writtenBytes1Sec)\n        )\n      ),\n      _react2.default.createElement(\n        'span',\n        { className: 'total' },\n        _react2.default.createElement(\n          'span',\n          null,\n          ' (total: '\n        ),\n        _react2.default.createElement('i', { className: 'fa fa-caret-down channel-direction channel-direction-down' }),\n        _react2.default.createElement(\n          'span',\n          { className: 'rx value' },\n          _NumberUtils2.default.formatBytes(readBytesTotal),\n          ' '\n        ),\n        _react2.default.createElement('i', { className: 'fa fa-caret-up channel-direction channel-direction-up' }),\n        _react2.default.createElement(\n          'span',\n          { className: 'tx value' },\n          _NumberUtils2.default.formatBytes(writtenBytesTotal)\n        ),\n        _react2.default.createElement(\n          'span',\n          null,\n          ' )'\n        )\n      ),\n      _react2.default.createElement('br', null)\n    );\n\n    return network;\n  },\n  _formatConnections: function _formatConnections(openConnections, totalConnections) {\n    return _react2.default.createElement(\n      'span',\n      null,\n      'Active connections: ',\n      _react2.default.createElement(\n        'span',\n        { className: 'active' },\n        this._formatCount(openConnections),\n        ' '\n      ),\n      '(',\n      _react2.default.createElement(\n        'span',\n        { className: 'total' },\n        this._formatCount(totalConnections)\n      ),\n      ' total)',\n      _react2.default.createElement('br', null)\n    );\n  },\n  _formatAllNodeDetails: function _formatAllNodeDetails(metrics) {\n    var _this2 = this;\n\n    return _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement('hr', { key: 'separator' }),\n      Object.keys(metrics).map(function (nodeId) {\n        return _this2._formatNodeDetails(nodeId, metrics[nodeId]);\n      })\n    );\n  },\n  _formatNodeDetails: function _formatNodeDetails(nodeId, metrics) {\n    var openConnections = this._getValueFromMetric(metrics[this._prefix('open_connections')]);\n    var totalConnections = this._getValueFromMetric(metrics[this._prefix('total_connections')]);\n    var emptyMessages = this._getValueFromMetric(metrics[this._prefix('emptyMessages')]);\n    var writtenBytes1Sec = this._getValueFromMetric(metrics[this._prefix('written_bytes_1sec')]);\n    var writtenBytesTotal = this._getValueFromMetric(metrics[this._prefix('written_bytes_total')]);\n    var readBytes1Sec = this._getValueFromMetric(metrics[this._prefix('read_bytes_1sec')]);\n    var readBytesTotal = this._getValueFromMetric(metrics[this._prefix('read_bytes_total')]);\n\n    return _react2.default.createElement(\n      'span',\n      { key: this.props.input.id + nodeId },\n      _react2.default.createElement(_common.LinkToNode, { nodeId: nodeId }),\n      _react2.default.createElement('br', null),\n      !isNaN(writtenBytes1Sec) && this._formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal),\n      !isNaN(openConnections) && this._formatConnections(openConnections, totalConnections),\n      !isNaN(emptyMessages) && _react2.default.createElement(\n        'span',\n        null,\n        'Empty messages discarded: ',\n        this._formatCount(emptyMessages),\n        _react2.default.createElement('br', null)\n      ),\n      isNaN(writtenBytes1Sec) && isNaN(openConnections) && _react2.default.createElement(\n        'span',\n        null,\n        'No metrics available for this node'\n      ),\n      _react2.default.createElement('br', null)\n    );\n  },\n  _toggleShowDetails: function _toggleShowDetails(evt) {\n    evt.preventDefault();\n    this.setState({ showDetails: !this.state.showDetails });\n  },\n  render: function render() {\n    if (!this.state.metrics) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n    var metrics = this._calculateMetrics(this.state.metrics);\n    var incomingMessages = metrics[this._prefix('incomingMessages')];\n    var emptyMessages = metrics[this._prefix('emptyMessages')];\n    var openConnections = metrics[this._prefix('open_connections')];\n    var totalConnections = metrics[this._prefix('total_connections')];\n    var writtenBytes1Sec = metrics[this._prefix('written_bytes_1sec')];\n    var writtenBytesTotal = metrics[this._prefix('written_bytes_total')];\n    var readBytes1Sec = metrics[this._prefix('read_bytes_1sec')];\n    var readBytesTotal = metrics[this._prefix('read_bytes_total')];\n    return _react2.default.createElement(\n      'div',\n      { className: 'graylog-input-metrics' },\n      _react2.default.createElement(\n        'h3',\n        null,\n        'Throughput / Metrics'\n      ),\n      _react2.default.createElement(\n        'span',\n        null,\n        isNaN(incomingMessages) && isNaN(writtenBytes1Sec) && isNaN(openConnections) && _react2.default.createElement(\n          'i',\n          null,\n          'No metrics available for this input'\n        ),\n        !isNaN(incomingMessages) && _react2.default.createElement(\n          'span',\n          null,\n          '1 minute average rate: ',\n          this._formatCount(incomingMessages),\n          ' msg/s',\n          _react2.default.createElement('br', null)\n        ),\n        !isNaN(writtenBytes1Sec) && this._formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal),\n        !isNaN(openConnections) && this._formatConnections(openConnections, totalConnections),\n        !isNaN(emptyMessages) && _react2.default.createElement(\n          'span',\n          null,\n          'Empty messages discarded: ',\n          this._formatCount(emptyMessages),\n          _react2.default.createElement('br', null)\n        ),\n        !isNaN(writtenBytes1Sec) && this.props.input.global && _react2.default.createElement(\n          'a',\n          { href: '', onClick: this._toggleShowDetails },\n          this.state.showDetails ? 'Hide' : 'Show',\n          ' details'\n        ),\n        !isNaN(writtenBytes1Sec) && this.state.showDetails && this._formatAllNodeDetails(this.state.metrics)\n      )\n    );\n  }\n});\n\nexports.default = InputThroughput;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1145:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _javascriptNaturalSort = __webpack_require__(951);\n\nvar _javascriptNaturalSort2 = _interopRequireDefault(_javascriptNaturalSort);\n\nvar _EntityList = __webpack_require__(270);\n\nvar _EntityList2 = _interopRequireDefault(_EntityList);\n\nvar _InputListItem = __webpack_require__(1062);\n\nvar _InputListItem2 = _interopRequireDefault(_InputListItem);\n\nvar _common = __webpack_require__(48);\n\nvar _CreateInputControl = __webpack_require__(1061);\n\nvar _CreateInputControl2 = _interopRequireDefault(_CreateInputControl);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\nvar SingleNodeActions = _ActionsProvider2.default.getActions('SingleNode');\nvar InputTypesActions = _ActionsProvider2.default.getActions('InputTypes');\n\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\nvar SingleNodeStore = _StoreProvider2.default.getStore('SingleNode');\n\nvar InputsList = _react2.default.createClass({\n  displayName: 'InputsList',\n\n  propTypes: {\n    permissions: _react.PropTypes.array.isRequired,\n    node: _react.PropTypes.object\n  },\n  mixins: [_reflux2.default.connect(SingleNodeStore), _reflux2.default.listenTo(InputsStore, '_splitInputs')],\n  getInitialState: function getInitialState() {\n    return {\n      globalInputs: undefined,\n      localInputs: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    InputTypesActions.list();\n    InputsActions.list();\n    SingleNodeActions.get();\n  },\n  _splitInputs: function _splitInputs(state) {\n    var _this = this;\n\n    var inputs = state.inputs;\n    var globalInputs = inputs.filter(function (input) {\n      return input.global === true;\n    }).sort(function (inputA, inputB) {\n      return (0, _javascriptNaturalSort2.default)(inputA.title, inputB.title);\n    });\n    var localInputs = inputs.filter(function (input) {\n      return input.global === false;\n    }).sort(function (inputA, inputB) {\n      return (0, _javascriptNaturalSort2.default)(inputA.title, inputB.title);\n    });\n\n    if (this.props.node) {\n      localInputs = localInputs.filter(function (input) {\n        return input.node === _this.props.node.node_id;\n      });\n    }\n\n    this.setState({ globalInputs: globalInputs, localInputs: localInputs });\n  },\n  _isLoading: function _isLoading() {\n    return !(this.state.localInputs && this.state.globalInputs && this.state.node);\n  },\n  _formatInput: function _formatInput(input) {\n    return _react2.default.createElement(_InputListItem2.default, { key: input.id, input: input, currentNode: this.state.node, permissions: this.props.permissions });\n  },\n  _nodeAffix: function _nodeAffix() {\n    return this.props.node ? ' on this node' : '';\n  },\n  render: function render() {\n    var _this2 = this;\n\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      !this.props.node && _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'inputs:create' },\n        _react2.default.createElement(_CreateInputControl2.default, null)\n      ),\n      _react2.default.createElement(\n        _reactBootstrap.Row,\n        { id: 'global-inputs', className: 'content input-list' },\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 12 },\n          _react2.default.createElement(\n            'h2',\n            null,\n            'Global inputs \\xA0',\n            _react2.default.createElement(\n              'small',\n              null,\n              this.state.globalInputs.length,\n              ' configured',\n              this._nodeAffix()\n            )\n          ),\n          _react2.default.createElement(_EntityList2.default, { bsNoItemsStyle: 'info', noItemsText: 'There are no global inputs.',\n            items: this.state.globalInputs.map(function (input) {\n              return _this2._formatInput(input);\n            }) })\n        )\n      ),\n      _react2.default.createElement(\n        _reactBootstrap.Row,\n        { id: 'local-inputs', className: 'content input-list' },\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 12 },\n          _react2.default.createElement(\n            'h2',\n            null,\n            'Local inputs \\xA0',\n            _react2.default.createElement(\n              'small',\n              null,\n              this.state.localInputs.length,\n              ' configured',\n              this._nodeAffix()\n            )\n          ),\n          _react2.default.createElement(_EntityList2.default, { bsNoItemsStyle: 'info', noItemsText: 'There are no local inputs' + this._nodeAffix() + '.',\n            items: this.state.localInputs.map(function (input) {\n              return _this2._formatInput(input);\n            }) })\n        )\n      )\n    );\n  }\n});\n\nexports.default = InputsList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1146:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NodesStore = _StoreProvider2.default.getStore('Nodes');\n\nvar NodeOrGlobalSelect = _react2.default.createClass({\n  displayName: 'NodeOrGlobalSelect',\n\n  propTypes: {\n    global: _react2.default.PropTypes.bool,\n    onChange: _react2.default.PropTypes.func.isRequired,\n    node: _react2.default.PropTypes.string\n  },\n  mixins: [_reflux2.default.connect(NodesStore)],\n  getInitialState: function getInitialState() {\n    return {\n      global: this.props.global !== undefined ? this.props.global : false,\n      node: this.props.node\n    };\n  },\n  _onChangeGlobal: function _onChangeGlobal(evt) {\n    var global = evt.target.checked;\n    this.setState({ global: global });\n    if (global) {\n      this.setState({ node: 'placeholder' });\n      this.props.onChange('node', undefined);\n    } else {\n      this.props.onChange('node', this.state.node);\n    }\n    this.props.onChange('global', global);\n  },\n  _onChangeNode: function _onChangeNode(evt) {\n    this.setState({ node: evt.target.value });\n    this.props.onChange('node', evt.target.value);\n  },\n  render: function render() {\n    var _this = this;\n\n    if (!this.state.nodes) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var options = Object.keys(this.state.nodes).map(function (nodeId) {\n      return _react2.default.createElement(\n        'option',\n        { key: nodeId, value: nodeId },\n        _this.state.nodes[nodeId].short_node_id,\n        ' / ',\n        _this.state.nodes[nodeId].hostname\n      );\n    });\n\n    var nodeSelect = !this.state.global ? _react2.default.createElement(\n      _bootstrap.Input,\n      { type: 'select', label: 'Node', placeholder: 'placeholder', value: this.state.node,\n        help: 'On which node should this input start', onChange: this._onChangeNode, required: true },\n      _react2.default.createElement(\n        'option',\n        { key: 'placeholder', value: '' },\n        'Select Node'\n      ),\n      options\n    ) : null;\n\n    return _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(_bootstrap.Input, { type: 'checkbox', label: 'Global', help: 'Should this input start on all nodes',\n        checked: this.state.global, onChange: this._onChangeGlobal }),\n      nodeSelect\n    );\n  }\n});\n\nexports.default = NodeOrGlobalSelect;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1147:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputStaticFieldsStore = _StoreProvider2.default.getStore('InputStaticFields');\n\nvar StaticFieldForm = _react2.default.createClass({\n  displayName: 'StaticFieldForm',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired\n  },\n  open: function open() {\n    this.refs.modal.open();\n  },\n  _addStaticField: function _addStaticField() {\n    var _this = this;\n\n    var fieldName = this.refs.fieldName.getValue();\n    var fieldValue = this.refs.fieldValue.getValue();\n\n    InputStaticFieldsStore.create(this.props.input, fieldName, fieldValue).then(function () {\n      return _this.refs.modal.close();\n    });\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      _bootstrap.BootstrapModalForm,\n      { ref: 'modal', title: 'Add static field', submitButtonText: 'Add field',\n        onSubmitForm: this._addStaticField },\n      _react2.default.createElement(\n        'p',\n        null,\n        'Define a static field that is added to every message that comes in via this input. The field is not overwritten If the message already has that key. Key must only contain alphanumeric characters or underscores and not be a reserved field.'\n      ),\n      _react2.default.createElement(_bootstrap.Input, { ref: 'fieldName', type: 'text', id: 'field-name', label: 'Field name', className: 'validatable',\n        'data-validate': 'alphanum_underscore', required: true, autoFocus: true }),\n      _react2.default.createElement(_bootstrap.Input, { ref: 'fieldValue', type: 'text', id: 'field-value', label: 'Field value', required: true })\n    );\n  }\n});\n\nexports.default = StaticFieldForm;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1182:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar InputStateComparator = function () {\n  function InputStateComparator() {\n    _classCallCheck(this, InputStateComparator);\n\n    this.mapping = {\n      CREATED: 0,\n      INITIALIZED: 1,\n      INVALID_CONFIGURATION: 2,\n      STARTING: 3,\n      RUNNING: 4,\n      FAILED: 2,\n      STOPPING: 1,\n      STOPPED: 0,\n      TERMINATED: 0\n    };\n  }\n\n  _createClass(InputStateComparator, [{\n    key: \"compare\",\n    value: function compare(state1, state2) {\n      return this.mapping[state1.toUpperCase()] - this.mapping[state2.toUpperCase()];\n    }\n  }]);\n\n  return InputStateComparator;\n}();\n\nexports.default = InputStateComparator;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 1396:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _inputs = __webpack_require__(977);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NodesStore = _StoreProvider2.default.getStore('Nodes');\nvar CurrentUserStore = _StoreProvider2.default.getStore('CurrentUser');\nvar InputStatesStore = _StoreProvider2.default.getStore('InputStates');\n\nfunction nodeFilter(state) {\n  return state.nodes ? state.nodes[this.props.params.nodeId] : state.nodes;\n}\n\nvar NodeInputsPage = _react2.default.createClass({\n  displayName: 'NodeInputsPage',\n\n  propTypes: {\n    params: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(CurrentUserStore), _reflux2.default.connectFilter(NodesStore, 'node', nodeFilter)],\n  componentDidMount: function componentDidMount() {\n    this.interval = setInterval(InputStatesStore.list, 2000);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.node;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var title = _react2.default.createElement(\n      'span',\n      null,\n      'Inputs of node ',\n      this.state.node.short_node_id,\n      ' / ',\n      this.state.node.hostname\n    );\n\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Inputs of node ' + this.state.node.short_node_id + ' / ' + this.state.node.hostname },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: title },\n          _react2.default.createElement(\n            'span',\n            null,\n            'Graylog nodes accept data via inputs. On this page you can see which inputs are running on this specific node.'\n          ),\n          _react2.default.createElement(\n            'span',\n            null,\n            'You can launch and terminate inputs on your cluster ',\n            _react2.default.createElement(\n              _reactRouterBootstrap.LinkContainer,\n              { to: _Routes2.default.SYSTEM.INPUTS },\n              _react2.default.createElement(\n                'a',\n                null,\n                'here'\n              )\n            ),\n            '.'\n          )\n        ),\n        _react2.default.createElement(_inputs.InputsList, { permissions: this.state.currentUser.permissions, node: this.state.node })\n      )\n    );\n  }\n});\n\nexports.default = NodeInputsPage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 961:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(10))(336);\n\n/***/ }),\n\n/***/ 977:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _CreateInputControl = __webpack_require__(1061);\n\nObject.defineProperty(exports, 'CreateInputControl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CreateInputControl).default;\n  }\n});\n\nvar _InputDropdown = __webpack_require__(1019);\n\nObject.defineProperty(exports, 'InputDropdown', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputDropdown).default;\n  }\n});\n\nvar _InputForm = __webpack_require__(1140);\n\nObject.defineProperty(exports, 'InputForm', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputForm).default;\n  }\n});\n\nvar _InputListItem = __webpack_require__(1062);\n\nObject.defineProperty(exports, 'InputListItem', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputListItem).default;\n  }\n});\n\nvar _InputsList = __webpack_require__(1145);\n\nObject.defineProperty(exports, 'InputsList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputsList).default;\n  }\n});\n\nvar _InputStateBadge = __webpack_require__(1141);\n\nObject.defineProperty(exports, 'InputStateBadge', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputStateBadge).default;\n  }\n});\n\nvar _InputStateControl = __webpack_require__(1142);\n\nObject.defineProperty(exports, 'InputStateControl', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputStateControl).default;\n  }\n});\n\nvar _InputThroughput = __webpack_require__(1144);\n\nObject.defineProperty(exports, 'InputThroughput', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputThroughput).default;\n  }\n});\n\nvar _InputStaticFields = __webpack_require__(1143);\n\nObject.defineProperty(exports, 'InputStaticFields', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_InputStaticFields).default;\n  }\n});\n\nvar _NodeOrGlobalSelect = __webpack_require__(1146);\n\nObject.defineProperty(exports, 'NodeOrGlobalSelect', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NodeOrGlobalSelect).default;\n  }\n});\n\nvar _StaticFieldForm = __webpack_require__(1147);\n\nObject.defineProperty(exports, 'StaticFieldForm', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_StaticFieldForm).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 23.200197dca04f05abe3f2.js","import React, { PropTypes } from 'react';\nimport LinkedStateMixin from 'react-addons-linked-state-mixin';\nimport { Button } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport Spinner from 'components/common/Spinner';\n\nconst InputDropdown = React.createClass({\n  propTypes: {\n    inputs: PropTypes.object,\n    title: PropTypes.string,\n    preselectedInputId: PropTypes.string,\n    onLoadMessage: PropTypes.func,\n    disabled: PropTypes.bool,\n  },\n  mixins: [LinkedStateMixin],\n  getInitialState() {\n    return {\n      selectedInput: this.props.preselectedInputId || this.PLACEHOLDER,\n    };\n  },\n  PLACEHOLDER: 'placeholder',\n  _formatInput(input) {\n    return <option key={input.id} value={input.id}>{input.title} ({input.type})</option>;\n  },\n  _sortByTitle(input1, input2) {\n    return input1.title.localeCompare(input2.title);\n  },\n  _onLoadMessage() {\n    this.props.onLoadMessage(this.state.selectedInput);\n  },\n  _formatStaticInput(input) {\n    return (\n      <Input type=\"select\" style={{ float: 'left', width: 400, marginRight: 10 }} disabled>\n        <option>{`${input.title} (${input.type})`}</option>\n      </Input>\n    );\n  },\n  render() {\n    // When an input is pre-selected, show a static dropdown\n    if (this.props.inputs && this.props.preselectedInputId) {\n      return (\n        <div>\n          {this._formatStaticInput(this.props.inputs.get(this.props.preselectedInputId))}\n\n          <Button bsStyle=\"info\" disabled={this.state.selectedInput === this.PLACEHOLDER}\n             onClick={this._onLoadMessage}>{this.props.title}</Button>\n        </div>\n      );\n    }\n\n    if (this.props.inputs) {\n      const inputs = this.props.inputs.sort(this._sortByTitle).map(this._formatInput);\n      return (\n        <div>\n          <Input type=\"select\" style={{ float: 'left', width: 400, marginRight: 10 }}\n                 valueLink={this.linkState('selectedInput')} placeholder={this.PLACEHOLDER}>\n            <option value={this.PLACEHOLDER}>Select an input</option>\n            {inputs.toArray()}\n          </Input>\n\n          <Button bsStyle=\"info\" disabled={this.props.disabled || this.state.selectedInput === this.PLACEHOLDER}\n             onClick={this._onLoadMessage}>{this.props.title}</Button>\n        </div>\n      );\n    }\n\n    return <Spinner />;\n  },\n});\n\nexport default InputDropdown;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputDropdown.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button, Row, Col } from 'react-bootstrap';\n\nimport { Select } from 'components/common';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputTypesActions = ActionsProvider.getActions('InputTypes');\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputTypesStore = StoreProvider.getStore('InputTypes');\n\nimport { InputForm } from 'components/inputs';\n\nconst CreateInputControl = React.createClass({\n  mixins: [Reflux.connect(InputTypesStore)],\n  getInitialState() {\n    return {\n      selectedInput: undefined,\n      selectedInputDefinition: undefined,\n    };\n  },\n  _formatSelectOptions() {\n    let options = [];\n\n    if (this.state.inputTypes) {\n      const inputTypesIds = Object.keys(this.state.inputTypes);\n      options = inputTypesIds.map((id) => {\n        return { value: id, label: this.state.inputTypes[id] };\n      });\n      options.sort((inputTypeA, inputTypeB) => inputTypeA.label.toLowerCase().localeCompare(inputTypeB.label.toLowerCase()));\n    } else {\n      options.push({ value: 'none', label: 'No inputs available', disabled: true });\n    }\n\n    return options;\n  },\n  _onInputSelect(selectedInput) {\n    if (selectedInput === '') {\n      this.setState(this.getInitialState());\n    }\n\n    this.setState({ selectedInput: selectedInput });\n    InputTypesActions.get.triggerPromise(selectedInput).then(inputDefinition => this.setState({ selectedInputDefinition: inputDefinition }));\n  },\n  _openModal(event) {\n    event.preventDefault();\n    this.refs.configurationForm.open();\n  },\n  _createInput(data) {\n    InputsActions.create(data).then(() => {\n      this.setState(this.getInitialState());\n    });\n  },\n  render() {\n    let inputModal;\n    if (this.state.selectedInputDefinition) {\n      const inputTypeName = this.state.inputTypes[this.state.selectedInput];\n      inputModal = (\n        <InputForm ref=\"configurationForm\"\n                   key=\"configuration-form-input\"\n                   configFields={this.state.selectedInputDefinition.requested_configuration}\n                   title={<span>Launch new <em>{inputTypeName}</em> input</span>}\n                   helpBlock={'Select a name of your new input that describes it.'}\n                   typeName={this.state.selectedInput}\n                   submitAction={this._createInput} />\n      );\n    }\n    return (\n      <Row className=\"content input-new\">\n        <Col md={12}>\n          <form className=\"form-inline\" onSubmit={this._openModal}>\n            <div className=\"form-group\" style={{ width: 300 }}>\n              <Select placeholder=\"Select input\" options={this._formatSelectOptions()} matchProp=\"label\"\n                      onValueChange={this._onInputSelect} value={this.state.selectedInput} />\n            </div>\n            &nbsp;\n            <Button bsStyle=\"success\" type=\"submit\" disabled={!this.state.selectedInput}>Launch new input</Button>\n            <Button href=\"https://marketplace.graylog.org/\" target=\"_blank\" bsStyle=\"info\" style={{ marginLeft: 10 }}>\n              <i className=\"fa fa-external-link\" />&nbsp;Find more inputs\n            </Button>\n          </form>\n          {inputModal}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default CreateInputControl;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/CreateInputControl.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Button, DropdownButton, MenuItem, Col } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport { EntityListItem, IfPermitted, LinkToNode, Spinner } from 'components/common';\nimport { ConfigurationWell } from 'components/configurationforms';\n\nimport PermissionsMixin from 'util/PermissionsMixin';\nimport Routes from 'routing/Routes';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputTypesStore = StoreProvider.getStore('InputTypes');\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport { InputForm, InputStateBadge, InputStateControl, InputStaticFields, InputThroughput, StaticFieldForm } from 'components/inputs';\n\nconst InputListItem = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n    currentNode: PropTypes.object.isRequired,\n    permissions: PropTypes.array.isRequired,\n  },\n  mixins: [PermissionsMixin, Reflux.connect(InputTypesStore)],\n  _deleteInput() {\n    if (window.confirm(`Do you really want to delete input '${this.props.input.title}'?`)) {\n      InputsActions.delete(this.props.input);\n    }\n  },\n\n  _openStaticFieldForm() {\n    this.refs.staticFieldForm.open();\n  },\n  _editInput() {\n    this.refs.configurationForm.open();\n  },\n  _updateInput(data) {\n    InputsActions.update(this.props.input.id, data);\n  },\n  render() {\n    if (!this.state.inputTypes) {\n      return <Spinner />;\n    }\n\n    const input = this.props.input;\n    const definition = this.state.inputDescriptions[input.type];\n\n    const titleSuffix = (\n      <span>\n        {this.props.input.name}\n        &nbsp;\n        <InputStateBadge input={this.props.input} />\n      </span>\n    );\n\n    const actions = [];\n\n    if (this.isPermitted(this.props.permissions, ['searches:relative'])) {\n      actions.push(\n        <LinkContainer key={`received-messages-${this.props.input.id}`}\n                       to={Routes.search(`gl2_source_input:${this.props.input.id}`, { relative: 0 })}>\n          <Button bsStyle=\"info\">Show received messages</Button>\n        </LinkContainer>,\n      );\n    }\n\n    if (this.isPermitted(this.props.permissions, [`inputs:edit:${this.props.input.id}`])) {\n      let extractorRoute;\n\n      if (this.props.input.global) {\n        extractorRoute = Routes.global_input_extractors(this.props.input.id);\n      } else {\n        extractorRoute = Routes.local_input_extractors(this.props.currentNode.node_id, this.props.input.id);\n      }\n\n      actions.push(\n        <LinkContainer key={`manage-extractors-${this.props.input.id}`} to={extractorRoute}>\n          <Button bsStyle=\"info\">Manage extractors</Button>\n        </LinkContainer>,\n      );\n\n      actions.push(<InputStateControl key={`input-state-control-${this.props.input.id}`} input={this.props.input} />);\n    }\n\n    let showMetricsMenuItem;\n    if (!this.props.input.global) {\n      showMetricsMenuItem = (\n        <LinkContainer to={Routes.filtered_metrics(this.props.input.node, this.props.input.id)}>\n          <MenuItem key={`show-metrics-${this.props.input.id}`}>Show metrics</MenuItem>\n        </LinkContainer>\n      );\n    }\n\n    actions.push(\n      <DropdownButton key={`more-actions-${this.props.input.id}`}\n                      title=\"More actions\"\n                      id={`more-actions-dropdown-${this.props.input.id}`}\n                      pullRight>\n        <IfPermitted permissions={`inputs:edit:${this.props.input.id}`}>\n          <MenuItem key={`edit-input-${this.props.input.id}`}\n                    onSelect={this._editInput}\n                    disabled={definition === undefined}>\n            Edit input\n          </MenuItem>\n        </IfPermitted>\n\n        {showMetricsMenuItem}\n\n        <IfPermitted permissions={`inputs:edit:${this.props.input.id}`}>\n          <MenuItem key={`add-static-field-${this.props.input.id}`} onSelect={this._openStaticFieldForm}>Add static field</MenuItem>\n        </IfPermitted>\n\n        <IfPermitted permissions=\"inputs:terminate\">\n          <MenuItem key={`divider-${this.props.input.id}`} divider />\n        </IfPermitted>\n        <IfPermitted permissions=\"inputs:terminate\">\n          <MenuItem key={`delete-input-${this.props.input.id}`} onSelect={this._deleteInput}>Delete input</MenuItem>\n        </IfPermitted>\n      </DropdownButton>,\n    );\n\n    let subtitle;\n\n    if (!this.props.input.global && this.props.input.node) {\n      subtitle = (\n        <span>\n          On node{' '}<LinkToNode nodeId={this.props.input.node} />\n        </span>\n      );\n    }\n\n    const inputForm = definition ?\n      (<InputForm ref=\"configurationForm\" key={`edit-form-input-${input.id}`}\n                   globalValue={input.global} nodeValue={input.node}\n                   configFields={definition.requested_configuration}\n                   title={`Editing Input ${input.title}`}\n                   titleValue={input.title}\n                   typeName={input.type} includeTitleField\n                   submitAction={this._updateInput} values={input.attributes} />) : null;\n\n    const additionalContent = (\n      <div>\n        <Col md={8}>\n          <ConfigurationWell className=\"configuration-well\"\n                             id={input.id}\n                             configuration={input.attributes}\n                             typeDefinition={definition || {}} />\n          <StaticFieldForm ref=\"staticFieldForm\" input={this.props.input} />\n          <InputStaticFields input={this.props.input} />\n        </Col>\n        <Col md={4}>\n          <InputThroughput input={input} />\n        </Col>\n        {inputForm}\n      </div>\n    );\n\n    return (\n      <EntityListItem key={`entry-list-${this.props.input.id}`}\n                      title={this.props.input.title}\n                      titleSuffix={titleSuffix}\n                      description={subtitle}\n                      createdFromContentPack={!!this.props.input.content_pack}\n                      actions={actions}\n                      contentRow={additionalContent} />\n    );\n  },\n});\n\nexport default InputListItem;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputListItem.jsx","import React from 'react';\nimport jQuery from 'jquery';\n\nimport { NodeOrGlobalSelect } from 'components/inputs';\nimport { ConfigurationForm } from 'components/configurationforms';\n\nconst InputForm = React.createClass({\n  propTypes: {\n    globalValue: React.PropTypes.bool,\n    nodeValue: React.PropTypes.string,\n    titleValue: React.PropTypes.string,\n    submitAction: React.PropTypes.func.isRequired,\n    values: React.PropTypes.object,\n  },\n  getInitialState() {\n    return {\n      global: this.props.globalValue !== undefined ? this.props.globalValue : false,\n      node: this.props.nodeValue !== undefined ? this.props.nodeValue : undefined,\n    };\n  },\n  _handleChange(field, value) {\n    const state = {};\n    state[field] = value;\n    this.setState(state);\n  },\n  _onSubmit(data) {\n    const newData = jQuery.extend(data, { global: this.state.global, node: this.state.node });\n    this.props.submitAction(newData);\n  },\n  open() {\n    this.refs.configurationForm.open();\n  },\n  render() {\n    const values = this.props.values ? this.props.values :\n      (this.refs.configurationForm ? this.refs.configurationForm.getValue().configuration : {});\n    const titleValue = this.props.titleValue ? this.props.titleValue :\n      (this.refs.configurationForm ? this.refs.configurationForm.getValue().titleValue : '');\n    return (\n      <ConfigurationForm {...this.props} ref=\"configurationForm\" values={values} titleValue={titleValue}\n                         submitAction={this._onSubmit}>\n        <NodeOrGlobalSelect onChange={this._handleChange} global={this.state.global} node={this.state.node} />\n      </ConfigurationForm>\n    );\n  },\n});\n\nexport default InputForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputForm.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Label, OverlayTrigger, Popover } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputStatesStore = StoreProvider.getStore('InputStates');\nconst NodesStore = StoreProvider.getStore('Nodes');\n\nimport { LinkToNode, Spinner } from 'components/common';\n\nimport InputStateComparator from 'logic/inputs/InputStateComparator';\n\nconst InputStateBadge = React.createClass({\n  propTypes: {\n    input: React.PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(InputStatesStore), Reflux.connect(NodesStore)],\n  comparator: new InputStateComparator(),\n  _labelClassForState(sortedStates) {\n    const nodesWithKnownState = sortedStates.reduce((numberOfNodes, state) => {\n      return numberOfNodes + state.count;\n    }, 0);\n\n    if (this.props.input.global && nodesWithKnownState !== Object.keys(this.state.nodes).length) {\n      return 'warning';\n    }\n\n    const state = sortedStates[0].state;\n    switch (state) {\n      case 'RUNNING':\n        return 'success';\n      case 'FAILED':\n        return 'danger';\n      case 'STARTING':\n        return 'info';\n      default:\n        return 'warning';\n    }\n  },\n  _textForState(sortedStates) {\n    if (this.props.input.global) {\n      return sortedStates.map(state => `${state.count} ${state.state}`).join(', ');\n    }\n    return sortedStates[0].state;\n  },\n  _isLoading() {\n    return !(this.state.inputStates && this.state.nodes);\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    const input = this.props.input;\n    const inputId = input.id;\n\n    const inputStates = {};\n    if (this.state.inputStates[inputId]) {\n      Object.keys(this.state.inputStates[inputId]).forEach((node) => {\n        const state = this.state.inputStates[inputId][node].state;\n        if (!inputStates[state]) {\n          inputStates[state] = [];\n        }\n        inputStates[state].push(node);\n      });\n    }\n\n    const sorted = Object.keys(inputStates).sort(this.comparator.compare.bind(this.comparator)).map((state) => {\n      return { state: state, count: inputStates[state].length };\n    });\n\n    if (sorted.length > 0) {\n      const popOverText = sorted.map((state) => {\n        return inputStates[state.state].map((node) => {\n          return <span><LinkToNode nodeId={node} />: {state.state}<br /></span>;\n        });\n      });\n      const popover = (\n        <Popover id=\"inputstate-badge-details\" title={`Input States for ${input.title}`} style={{ fontSize: 12 }}>\n          {popOverText}\n        </Popover>\n      );\n      return (\n        <OverlayTrigger trigger=\"click\" placement=\"bottom\" overlay={popover} rootClose>\n          <Label bsStyle={this._labelClassForState(sorted)} title=\"Click to show details\"\n                 bsSize=\"xsmall\" style={{ cursor: 'pointer' }}>{this._textForState(sorted)}</Label>\n        </OverlayTrigger>\n      );\n    }\n    const text = input.global || input.node === undefined ? '0 RUNNING' : 'NOT RUNNING';\n    return (\n      <Label bsStyle=\"danger\" bsSize=\"xsmall\">{text}</Label>\n    );\n  },\n});\n\nexport default InputStateBadge;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputStateBadge.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Button } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputStatesStore = StoreProvider.getStore('InputStates');\n\nfunction inputStateFilter(state) {\n  return state.inputStates ? state.inputStates[this.props.input.id] : undefined;\n}\n\nconst InputStateControl = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connectFilter(InputStatesStore, 'inputState', inputStateFilter)],\n\n  getInitialState() {\n    return {\n      loading: false,\n    };\n  },\n\n  _isInputRunning() {\n    if (!this.state.inputState) {\n      return false;\n    }\n\n    const nodeIDs = Object.keys(this.state.inputState);\n    if (nodeIDs.length === 0) {\n      return false;\n    }\n\n    return nodeIDs.some((nodeID) => {\n      const nodeState = this.state.inputState[nodeID];\n      return nodeState.state === 'RUNNING';\n    });\n  },\n\n  _startInput() {\n    this.setState({ loading: true });\n    InputStatesStore.start(this.props.input)\n      .finally(() => this.setState({ loading: false }));\n  },\n\n  _stopInput() {\n    this.setState({ loading: true });\n    InputStatesStore.stop(this.props.input)\n      .finally(() => this.setState({ loading: false }));\n  },\n\n  render() {\n    if (this._isInputRunning()) {\n      return (\n        <Button bsStyle=\"primary\" onClick={this._stopInput} disabled={this.state.loading}>\n          {this.state.loading ? 'Stopping...' : 'Stop input'}\n        </Button>\n      );\n    }\n\n    return (\n      <Button bsStyle=\"success\" onClick={this._startInput} disabled={this.state.loading}>\n        {this.state.loading ? 'Starting...' : 'Start input'}\n      </Button>\n    );\n  },\n});\n\nexport default InputStateControl;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputStateControl.jsx","import React, { PropTypes } from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputStaticFieldsStore = StoreProvider.getStore('InputStaticFields');\n\nconst InputStaticFields = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n  },\n  _deleteStaticField(fieldName) {\n    return () => {\n      if (window.confirm(`Are you sure you want to remove static field '${fieldName}' from '${this.props.input.title}'?`)) {\n        InputStaticFieldsStore.destroy(this.props.input, fieldName);\n      }\n    };\n  },\n  _deleteButton(fieldName) {\n    return (\n      <Button bsStyle=\"link\" bsSize=\"xsmall\" style={{ verticalAlign: 'baseline' }} onClick={this._deleteStaticField(fieldName)}>\n        <i className=\"fa fa-remove\" />\n      </Button>\n    );\n  },\n  _formatStaticFields(staticFields) {\n    const formattedFields = [];\n    const staticFieldNames = Object.keys(staticFields);\n\n    staticFieldNames.forEach((fieldName) => {\n      formattedFields.push(\n        <li key={`${fieldName}-field`}>\n          <strong>{fieldName}:</strong> {staticFields[fieldName]} {this._deleteButton(fieldName)}\n        </li>,\n      );\n    });\n\n    return formattedFields;\n  },\n  render() {\n    const staticFieldNames = Object.keys(this.props.input.static_fields);\n    if (staticFieldNames.length === 0) {\n      return <div />;\n    }\n\n    return (\n      <div className=\"static-fields\">\n        <h3 style={{ marginBottom: 5 }}>Static fields</h3>\n        <ul>\n          {this._formatStaticFields(this.props.input.static_fields)}\n        </ul>\n      </div>\n    );\n  },\n});\n\nexport default InputStaticFields;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputStaticFields.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport numeral from 'numeral';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst MetricsStore = StoreProvider.getStore('Metrics');\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst MetricsActions = ActionsProvider.getActions('Metrics');\n\nimport NumberUtils from 'util/NumberUtils';\nimport { LinkToNode, Spinner } from 'components/common';\n\nconst InputThroughput = React.createClass({\n  propTypes: {\n    input: React.PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(MetricsStore)],\n  getInitialState() {\n    return {\n      showDetails: false,\n    };\n  },\n  componentWillMount() {\n    this._metricNames().forEach(metricName => MetricsActions.addGlobal(metricName));\n  },\n  componentWillUnmount() {\n    this._metricNames().forEach(metricName => MetricsActions.removeGlobal(metricName));\n  },\n  _metricNames() {\n    return [\n      this._prefix('incomingMessages'),\n      this._prefix('emptyMessages'),\n      this._prefix('open_connections'),\n      this._prefix('total_connections'),\n      this._prefix('written_bytes_1sec'),\n      this._prefix('written_bytes_total'),\n      this._prefix('read_bytes_1sec'),\n      this._prefix('read_bytes_total'),\n    ];\n  },\n  _prefix(metric) {\n    const input = this.props.input;\n    return `${input.type}.${input.id}.${metric}`;\n  },\n  _getValueFromMetric(metric) {\n    if (metric === null || metric === undefined) {\n      return undefined;\n    }\n\n    switch (metric.type) {\n      case 'meter':\n        return metric.metric.rate.mean;\n      case 'gauge':\n        return metric.metric.value;\n      case 'counter':\n        return metric.metric.count;\n      default:\n        return undefined;\n    }\n  },\n  _calculateMetrics(metrics) {\n    const result = {};\n    this._metricNames().forEach((metricName) => {\n      result[metricName] = Object.keys(metrics).reduce((previous, nodeId) => {\n        if (!metrics[nodeId][metricName]) {\n          return previous;\n        }\n        const value = this._getValueFromMetric(metrics[nodeId][metricName]);\n        if (value !== undefined) {\n          return isNaN(previous) ? value : previous + value;\n        }\n        return previous;\n      }, NaN);\n    });\n\n    return result;\n  },\n  _formatCount(count) {\n    return numeral(count).format('0,0');\n  },\n  _formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal) {\n    const network = (\n      <span className=\"input-io\">\n        <span>Network IO: </span>\n        <span className=\"persec\">\n          <i className=\"fa fa-caret-down channel-direction channel-direction-down\" />\n          <span className=\"rx value\">{NumberUtils.formatBytes(readBytes1Sec)} </span>\n\n          <i className=\"fa fa-caret-up channel-direction channel-direction-up\" />\n          <span className=\"tx value\">{NumberUtils.formatBytes(writtenBytes1Sec)}</span>\n        </span>\n\n        <span className=\"total\">\n          <span> (total: </span>\n          <i className=\"fa fa-caret-down channel-direction channel-direction-down\" />\n          <span className=\"rx value\">{NumberUtils.formatBytes(readBytesTotal)} </span>\n\n          <i className=\"fa fa-caret-up channel-direction channel-direction-up\" />\n          <span className=\"tx value\">{NumberUtils.formatBytes(writtenBytesTotal)}</span>\n          <span> )</span>\n        </span>\n        <br />\n      </span>\n    );\n\n    return network;\n  },\n  _formatConnections(openConnections, totalConnections) {\n    return (\n      <span>\n        Active connections: <span className=\"active\">{this._formatCount(openConnections)} </span>\n        (<span className=\"total\">{this._formatCount(totalConnections)}</span> total)\n        <br />\n      </span>\n    );\n  },\n  _formatAllNodeDetails(metrics) {\n    return (\n      <span>\n        <hr key=\"separator\" />\n        {Object.keys(metrics).map(nodeId => this._formatNodeDetails(nodeId, metrics[nodeId]))}\n      </span>\n    );\n  },\n  _formatNodeDetails(nodeId, metrics) {\n    const openConnections = this._getValueFromMetric(metrics[this._prefix('open_connections')]);\n    const totalConnections = this._getValueFromMetric(metrics[this._prefix('total_connections')]);\n    const emptyMessages = this._getValueFromMetric(metrics[this._prefix('emptyMessages')]);\n    const writtenBytes1Sec = this._getValueFromMetric(metrics[this._prefix('written_bytes_1sec')]);\n    const writtenBytesTotal = this._getValueFromMetric(metrics[this._prefix('written_bytes_total')]);\n    const readBytes1Sec = this._getValueFromMetric(metrics[this._prefix('read_bytes_1sec')]);\n    const readBytesTotal = this._getValueFromMetric(metrics[this._prefix('read_bytes_total')]);\n\n\n    return (\n      <span key={this.props.input.id + nodeId}>\n        <LinkToNode nodeId={nodeId} />\n        <br />\n        {!isNaN(writtenBytes1Sec) && this._formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal)}\n        {!isNaN(openConnections) && this._formatConnections(openConnections, totalConnections)}\n        {!isNaN(emptyMessages) && <span>Empty messages discarded: {this._formatCount(emptyMessages)}<br /></span>}\n        {isNaN(writtenBytes1Sec) && isNaN(openConnections) && <span>No metrics available for this node</span>}\n        <br />\n      </span>\n    );\n  },\n  _toggleShowDetails(evt) {\n    evt.preventDefault();\n    this.setState({ showDetails: !this.state.showDetails });\n  },\n  render() {\n    if (!this.state.metrics) {\n      return <Spinner />;\n    }\n    const metrics = this._calculateMetrics(this.state.metrics);\n    const incomingMessages = metrics[this._prefix('incomingMessages')];\n    const emptyMessages = metrics[this._prefix('emptyMessages')];\n    const openConnections = metrics[this._prefix('open_connections')];\n    const totalConnections = metrics[this._prefix('total_connections')];\n    const writtenBytes1Sec = metrics[this._prefix('written_bytes_1sec')];\n    const writtenBytesTotal = metrics[this._prefix('written_bytes_total')];\n    const readBytes1Sec = metrics[this._prefix('read_bytes_1sec')];\n    const readBytesTotal = metrics[this._prefix('read_bytes_total')];\n    return (\n      <div className=\"graylog-input-metrics\">\n        <h3>Throughput / Metrics</h3>\n        <span>\n          {isNaN(incomingMessages) && isNaN(writtenBytes1Sec) && isNaN(openConnections) && <i>No metrics available for this input</i>}\n          {!isNaN(incomingMessages) && <span>1 minute average rate: {this._formatCount(incomingMessages)} msg/s<br /></span>}\n          {!isNaN(writtenBytes1Sec) && this._formatNetworkStats(writtenBytes1Sec, writtenBytesTotal, readBytes1Sec, readBytesTotal)}\n          {!isNaN(openConnections) && this._formatConnections(openConnections, totalConnections)}\n          {!isNaN(emptyMessages) && <span>Empty messages discarded: {this._formatCount(emptyMessages)}<br /></span>}\n          {!isNaN(writtenBytes1Sec) && this.props.input.global && <a href=\"\" onClick={this._toggleShowDetails}>{this.state.showDetails ? 'Hide' : 'Show'} details</a>}\n          {!isNaN(writtenBytes1Sec) && this.state.showDetails && this._formatAllNodeDetails(this.state.metrics)}\n        </span>\n      </div>\n    );\n  },\n});\n\nexport default InputThroughput;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputThroughput.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Row, Col } from 'react-bootstrap';\nimport naturalSort from 'javascript-natural-sort';\n\nimport EntityList from 'components/common/EntityList';\nimport InputListItem from './InputListItem';\nimport { IfPermitted, Spinner } from 'components/common';\nimport CreateInputControl from './CreateInputControl';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\nconst SingleNodeActions = ActionsProvider.getActions('SingleNode');\nconst InputTypesActions = ActionsProvider.getActions('InputTypes');\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputsStore = StoreProvider.getStore('Inputs');\nconst SingleNodeStore = StoreProvider.getStore('SingleNode');\n\nconst InputsList = React.createClass({\n  propTypes: {\n    permissions: PropTypes.array.isRequired,\n    node: PropTypes.object,\n  },\n  mixins: [Reflux.connect(SingleNodeStore), Reflux.listenTo(InputsStore, '_splitInputs')],\n  getInitialState() {\n    return {\n      globalInputs: undefined,\n      localInputs: undefined,\n    };\n  },\n  componentDidMount() {\n    InputTypesActions.list();\n    InputsActions.list();\n    SingleNodeActions.get();\n  },\n  _splitInputs(state) {\n    const inputs = state.inputs;\n    const globalInputs = inputs\n      .filter(input => input.global === true)\n      .sort((inputA, inputB) => naturalSort(inputA.title, inputB.title));\n    let localInputs = inputs\n      .filter(input => input.global === false)\n      .sort((inputA, inputB) => naturalSort(inputA.title, inputB.title));\n\n    if (this.props.node) {\n      localInputs = localInputs.filter(input => input.node === this.props.node.node_id);\n    }\n\n    this.setState({ globalInputs: globalInputs, localInputs: localInputs });\n  },\n  _isLoading() {\n    return !(this.state.localInputs && this.state.globalInputs && this.state.node);\n  },\n  _formatInput(input) {\n    return <InputListItem key={input.id} input={input} currentNode={this.state.node} permissions={this.props.permissions} />;\n  },\n  _nodeAffix() {\n    return (this.props.node ? ' on this node' : '');\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    return (\n      <div>\n        {!this.props.node &&\n        <IfPermitted permissions=\"inputs:create\">\n          <CreateInputControl />\n        </IfPermitted>\n        }\n\n        <Row id=\"global-inputs\" className=\"content input-list\">\n          <Col md={12}>\n            <h2>\n              Global inputs\n              &nbsp;\n              <small>{this.state.globalInputs.length} configured{this._nodeAffix()}</small>\n            </h2>\n            <EntityList bsNoItemsStyle=\"info\" noItemsText=\"There are no global inputs.\"\n                        items={this.state.globalInputs.map(input => this._formatInput(input))} />\n          </Col>\n        </Row>\n        <Row id=\"local-inputs\" className=\"content input-list\">\n          <Col md={12}>\n            <h2>\n              Local inputs\n              &nbsp;\n              <small>{this.state.localInputs.length} configured{this._nodeAffix()}</small>\n            </h2>\n            <EntityList bsNoItemsStyle=\"info\" noItemsText={`There are no local inputs${this._nodeAffix()}.`}\n                        items={this.state.localInputs.map(input => this._formatInput(input))} />\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n});\n\nexport default InputsList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputsList.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Input } from 'components/bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst NodesStore = StoreProvider.getStore('Nodes');\n\nimport { Spinner } from 'components/common';\n\nconst NodeOrGlobalSelect = React.createClass({\n  propTypes: {\n    global: React.PropTypes.bool,\n    onChange: React.PropTypes.func.isRequired,\n    node: React.PropTypes.string,\n  },\n  mixins: [Reflux.connect(NodesStore)],\n  getInitialState() {\n    return {\n      global: this.props.global !== undefined ? this.props.global : false,\n      node: this.props.node,\n    };\n  },\n  _onChangeGlobal(evt) {\n    const global = evt.target.checked;\n    this.setState({ global: global });\n    if (global) {\n      this.setState({ node: 'placeholder' });\n      this.props.onChange('node', undefined);\n    } else {\n      this.props.onChange('node', this.state.node);\n    }\n    this.props.onChange('global', global);\n  },\n  _onChangeNode(evt) {\n    this.setState({ node: evt.target.value });\n    this.props.onChange('node', evt.target.value);\n  },\n  render() {\n    if (!this.state.nodes) {\n      return <Spinner />;\n    }\n\n    const options = Object.keys(this.state.nodes)\n      .map((nodeId) => {\n        return <option key={nodeId} value={nodeId}>{this.state.nodes[nodeId].short_node_id} / {this.state.nodes[nodeId].hostname}</option>;\n      });\n\n    const nodeSelect = !this.state.global ? (\n      <Input type=\"select\" label=\"Node\" placeholder=\"placeholder\" value={this.state.node}\n             help=\"On which node should this input start\" onChange={this._onChangeNode} required>\n        <option key=\"placeholder\" value=\"\">Select Node</option>\n        {options}\n      </Input>\n    ) : null;\n\n    return (\n      <span>\n        <Input type=\"checkbox\" label=\"Global\" help=\"Should this input start on all nodes\"\n               checked={this.state.global} onChange={this._onChangeGlobal} />\n        {nodeSelect}\n      </span>\n    );\n  },\n});\n\nexport default NodeOrGlobalSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/NodeOrGlobalSelect.jsx","import React, { PropTypes } from 'react';\n\nimport { BootstrapModalForm, Input } from 'components/bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputStaticFieldsStore = StoreProvider.getStore('InputStaticFields');\n\nconst StaticFieldForm = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n  },\n  open() {\n    this.refs.modal.open();\n  },\n  _addStaticField() {\n    const fieldName = this.refs.fieldName.getValue();\n    const fieldValue = this.refs.fieldValue.getValue();\n\n    InputStaticFieldsStore.create(this.props.input, fieldName, fieldValue).then(() => this.refs.modal.close());\n  },\n  render() {\n    return (\n      <BootstrapModalForm ref=\"modal\" title=\"Add static field\" submitButtonText=\"Add field\"\n                          onSubmitForm={this._addStaticField}>\n        <p>Define a static field that is added to every message that comes in via this input. The field is not\n          overwritten If the message already has that key. Key must only contain alphanumeric characters or\n          underscores and not be a reserved field.</p>\n        <Input ref=\"fieldName\" type=\"text\" id=\"field-name\" label=\"Field name\" className=\"validatable\"\n               data-validate=\"alphanum_underscore\" required autoFocus />\n        <Input ref=\"fieldValue\" type=\"text\" id=\"field-value\" label=\"Field value\" required />\n      </BootstrapModalForm>\n    );\n  },\n});\n\nexport default StaticFieldForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/StaticFieldForm.jsx","class InputStateComparator {\n  constructor() {\n    this.mapping = {\n      CREATED: 0,\n      INITIALIZED: 1,\n      INVALID_CONFIGURATION: 2,\n      STARTING: 3,\n      RUNNING: 4,\n      FAILED: 2,\n      STOPPING: 1,\n      STOPPED: 0,\n      TERMINATED: 0,\n    };\n  }\n\n  compare(state1, state2) {\n    return this.mapping[state1.toUpperCase()] - this.mapping[state2.toUpperCase()];\n  }\n}\n\nexport default InputStateComparator;\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/inputs/InputStateComparator.js","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst NodesStore = StoreProvider.getStore('Nodes');\nconst CurrentUserStore = StoreProvider.getStore('CurrentUser');\nconst InputStatesStore = StoreProvider.getStore('InputStates');\n\nimport { DocumentTitle, PageHeader, Spinner } from 'components/common';\nimport { InputsList } from 'components/inputs';\n\nimport Routes from 'routing/Routes';\n\nfunction nodeFilter(state) {\n  return state.nodes ? state.nodes[this.props.params.nodeId] : state.nodes;\n}\n\nconst NodeInputsPage = React.createClass({\n  propTypes: {\n    params: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(CurrentUserStore), Reflux.connectFilter(NodesStore, 'node', nodeFilter)],\n  componentDidMount() {\n    this.interval = setInterval(InputStatesStore.list, 2000);\n  },\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  _isLoading() {\n    return !this.state.node;\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    const title = <span>Inputs of node {this.state.node.short_node_id} / {this.state.node.hostname}</span>;\n\n    return (\n      <DocumentTitle title={`Inputs of node ${this.state.node.short_node_id} / ${this.state.node.hostname}`}>\n        <div>\n          <PageHeader title={title}>\n            <span>Graylog nodes accept data via inputs. On this page you can see which inputs are running on this specific node.</span>\n\n            <span>\n              You can launch and terminate inputs on your cluster <LinkContainer to={Routes.SYSTEM.INPUTS}><a>here</a></LinkContainer>.\n            </span>\n          </PageHeader>\n          <InputsList permissions={this.state.currentUser.permissions} node={this.state.node} />\n        </div>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default NodeInputsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/NodeInputsPage.jsx","module.exports = (__webpack_require__(10))(336);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-addons-linked-state-mixin/index.js from dll-reference __vendor\n// module id = 961\n// module chunks = 4 5 6 17 20 23 24 26 29","export { default as CreateInputControl } from './CreateInputControl';\nexport { default as InputDropdown } from './InputDropdown';\nexport { default as InputForm } from './InputForm';\nexport { default as InputListItem } from './InputListItem';\nexport { default as InputsList } from './InputsList';\nexport { default as InputStateBadge } from './InputStateBadge';\nexport { default as InputStateControl } from './InputStateControl';\nexport { default as InputThroughput } from './InputThroughput';\nexport { default as InputStaticFields } from './InputStaticFields';\nexport { default as NodeOrGlobalSelect } from './NodeOrGlobalSelect';\nexport { default as StaticFieldForm } from './StaticFieldForm';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/index.jsx"],"sourceRoot":""}