{"version":3,"sources":["webpack:///26.200197dca04f05abe3f2.js","webpack:///./src/components/inputs/InputDropdown.jsx?0f76*","webpack:///./src/components/streamrules/HumanReadableStreamRule.jsx?89b6","webpack:///./src/components/streamrules/StreamRuleForm.jsx?c055","webpack:///./src/components/messageloaders/LoaderTabs.jsx","webpack:///./src/components/messageloaders/RawMessageLoader.jsx","webpack:///./src/components/messageloaders/RecentMessageLoader.jsx","webpack:///./src/components/streamrules/StreamRule.jsx?8c71","webpack:///./src/components/streamrules/StreamRuleList.jsx?73b7","webpack:///./src/components/streamrules/StreamRulesEditor.jsx","webpack:///./src/components/streams/MatchingTypeSwitcher.jsx","webpack:///./src/pages/StreamEditPage.jsx","webpack:///delegated ./node_modules/react-addons-linked-state-mixin/index.js from dll-reference __vendor?2324******","webpack:///./src/components/extractors/MessageLoader.jsx?b37c*"],"names":["webpackJsonp","1019","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reactAddonsLinkedStateMixin","_reactAddonsLinkedStateMixin2","_reactBootstrap","_bootstrap","_Spinner","_Spinner2","InputDropdown","createClass","displayName","propTypes","inputs","PropTypes","object","title","string","preselectedInputId","onLoadMessage","func","disabled","bool","mixins","getInitialState","selectedInput","this","props","PLACEHOLDER","_formatInput","input","createElement","key","id","type","_sortByTitle","input1","input2","localeCompare","_onLoadMessage","state","_formatStaticInput","Input","style","float","width","marginRight","render","get","Button","bsStyle","onClick","sort","map","valueLink","linkState","placeholder","toArray","1095","HumanReadableStreamRule","streamRule","isRequired","streamRuleTypes","array","EMPTY_TAG","FIELD_PRESENCE_RULE_TYPE","ALWAYS_MATCH_RULE_TYPE","_getTypeForInteger","filter","streamRuleType","String","_formatRuleValue","_formatRuleField","field","negation","inverted","longDesc","long_desc","1096","_BootstrapModalForm","_BootstrapModalForm2","_common","_support","_DocsHelper","_DocsHelper2","_Version","_Version2","_HumanReadableStreamRule","_HumanReadableStreamRule2","StreamRuleForm","onSubmit","getDefaultProps","description","_resetValues","setState","_onSubmit","refs","modal","close","_formatStreamRuleType","short_desc","open","fieldBox","TypeAheadFieldInput","ref","required","label","autoFocus","valueBox","name","onSubmitForm","submitButtonText","formProps","Col","md","checkedLink","className","href","getMajorAndMinorVersion","target","DocumentationLink","page","PAGES","STREAMS","text","1148","_reflux","_reflux2","_immutable","_immutable2","_StoreProvider","_StoreProvider2","_ActionsProvider","_ActionsProvider2","_MessageShow","_MessageShow2","_MessageLoader","_MessageLoader2","_RawMessageLoader","_RawMessageLoader2","_RecentMessageLoader","_RecentMessageLoader2","InputsStore","getStore","StreamsStore","InputsActions","getActions","LoaderTabs","tabs","oneOfType","oneOf","arrayOf","messageId","index","onMessageLoaded","selectedInputId","customFieldActions","node","disableMessagePreview","listenTo","activeTab","undefined","message","componentDidMount","loadData","messageLoader","submit","TAB_KEYS","recent","raw","_formatInputs","inputsAsMap","Map","_this","list","listStreams","then","response","streams","forEach","stream","_isTabVisible","tabKey","indexOf","_getActiveTab","_changeActiveTab","selectedTab","_formatMessageLoaders","messageLoaders","push","Tab","eventKey","marginBottom","marginTop","hidden","hideText","displayMessage","disableTestAgainstStream","disableSurroundingSearch","disableFieldActions","Tabs","activeKey","onSelect","animation","1149","_configurationforms","MessagesActions","CodecTypesActions","CodecTypesStore","RawMessageLoader","inputIdSelector","connect","loading","remoteAddress","codec","codecConfiguration","inputId","DEFAULT_REMOTE_ADDRESS","_loadMessage","event","preventDefault","_state","promise","loadRawMessage","triggerPromise","loadedMessage","finally","_bindValue","newState","_formatSelectOptions","_this2","codecTypes","codecTypesIds","keys","length","codecA","codecB","toLowerCase","_formatInputSelectOptions","_this3","inputIds","inputA","inputB","_onCodecSelect","selectedCodec","_onInputSelect","_onCodecConfigurationChange","newConfiguration","assign","_formatConfigField","configField","typeName","elementKey","TextField","onChange","NumberField","BooleanField","DropdownField","_isSubmitDisabled","_this4","codecConfigurationOptions","requested_configuration","keyA","keyB","is_optional","help","Select","options","matchProp","onValueChange","Row","rows","1150","_InputDropdown","_InputDropdown2","_UserNotification","_UserNotification2","UniversalSearchStore","RecentMessageLoader","error","search","range","total_results","messages","helpMessage","1174","_PermissionsMixin","_PermissionsMixin2","_StreamRuleForm","_StreamRuleForm2","StreamRulesStore","StreamRule","matchData","onDelete","permissions","_onEdit","streamRuleForm","_onDelete","window","confirm","remove","success","streamRuleId","data","update","_formatActionItems","_getMatchDataClassNames","rules","actionItems","isPermitted","1175","_StreamRule","_StreamRule2","StreamRuleList","_formatStreamRules","streamRules","Spinner","1301","_reactRouterBootstrap","_Routes","_Routes2","_LoaderTabs","_LoaderTabs2","_MatchingTypeSwitcher","_MatchingTypeSwitcher2","_StreamRuleList","_StreamRuleList2","StreamRulesEditor","currentUser","streamId","componentWillUnmount","unregister","testMatch","fields","resultData","types","_onStreamRuleFormSubmit","create","_onAddStreamRule","newStreamRuleForm","_getListClassName","matches","_explainMatchResult","color","styles","display","Alert","LinkContainer","to","marginLeft","1302","_classCallCheck","instance","Constructor","TypeError","_possibleConstructorReturn","self","call","ReferenceError","_inherits","subClass","superClass","prototype","constructor","enumerable","writable","configurable","setPrototypeOf","__proto__","_createClass","defineProperties","i","descriptor","protoProps","staticProps","MatchingTypeSwitcher","_Component","getPrototypeOf","apply","arguments","checked","matching_type","handleTypeChangeToAnd","bind","handleTypeChangeToOr","handleTypeChange","newValue","Component","1408","_StreamRulesEditor","_StreamRulesEditor2","CurrentUserStore","StreamEditPage","params","location","_isLoading","content","query","message_id","is_default","DocumentTitle","PageHeader","961","989","MessageLoader","toggleMessageForm","_focusMessageLoaderForm","focus","loadMessage","submitButton","click","explanatoryText","loadMessageForm"],"mappings":"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","file":"26.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([26],{\n\n/***/ 1019:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactAddonsLinkedStateMixin = __webpack_require__(961);\n\nvar _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _Spinner = __webpack_require__(260);\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputDropdown = _react2.default.createClass({\n  displayName: 'InputDropdown',\n\n  propTypes: {\n    inputs: _react.PropTypes.object,\n    title: _react.PropTypes.string,\n    preselectedInputId: _react.PropTypes.string,\n    onLoadMessage: _react.PropTypes.func,\n    disabled: _react.PropTypes.bool\n  },\n  mixins: [_reactAddonsLinkedStateMixin2.default],\n  getInitialState: function getInitialState() {\n    return {\n      selectedInput: this.props.preselectedInputId || this.PLACEHOLDER\n    };\n  },\n\n  PLACEHOLDER: 'placeholder',\n  _formatInput: function _formatInput(input) {\n    return _react2.default.createElement(\n      'option',\n      { key: input.id, value: input.id },\n      input.title,\n      ' (',\n      input.type,\n      ')'\n    );\n  },\n  _sortByTitle: function _sortByTitle(input1, input2) {\n    return input1.title.localeCompare(input2.title);\n  },\n  _onLoadMessage: function _onLoadMessage() {\n    this.props.onLoadMessage(this.state.selectedInput);\n  },\n  _formatStaticInput: function _formatStaticInput(input) {\n    return _react2.default.createElement(\n      _bootstrap.Input,\n      { type: 'select', style: { float: 'left', width: 400, marginRight: 10 }, disabled: true },\n      _react2.default.createElement(\n        'option',\n        null,\n        input.title + ' (' + input.type + ')'\n      )\n    );\n  },\n  render: function render() {\n    // When an input is pre-selected, show a static dropdown\n    if (this.props.inputs && this.props.preselectedInputId) {\n      return _react2.default.createElement(\n        'div',\n        null,\n        this._formatStaticInput(this.props.inputs.get(this.props.preselectedInputId)),\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info', disabled: this.state.selectedInput === this.PLACEHOLDER,\n            onClick: this._onLoadMessage },\n          this.props.title\n        )\n      );\n    }\n\n    if (this.props.inputs) {\n      var inputs = this.props.inputs.sort(this._sortByTitle).map(this._formatInput);\n      return _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _bootstrap.Input,\n          { type: 'select', style: { float: 'left', width: 400, marginRight: 10 },\n            valueLink: this.linkState('selectedInput'), placeholder: this.PLACEHOLDER },\n          _react2.default.createElement(\n            'option',\n            { value: this.PLACEHOLDER },\n            'Select an input'\n          ),\n          inputs.toArray()\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info', disabled: this.props.disabled || this.state.selectedInput === this.PLACEHOLDER,\n            onClick: this._onLoadMessage },\n          this.props.title\n        )\n      );\n    }\n\n    return _react2.default.createElement(_Spinner2.default, null);\n  }\n});\n\nexports.default = InputDropdown;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1095:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar HumanReadableStreamRule = _react2.default.createClass({\n  displayName: 'HumanReadableStreamRule',\n\n  propTypes: {\n    streamRule: _react2.default.PropTypes.object.isRequired,\n    streamRuleTypes: _react2.default.PropTypes.array.isRequired\n  },\n  EMPTY_TAG: '<empty>',\n  FIELD_PRESENCE_RULE_TYPE: 5,\n  ALWAYS_MATCH_RULE_TYPE: 7,\n  _getTypeForInteger: function _getTypeForInteger(type, streamRuleTypes) {\n    if (streamRuleTypes) {\n      return streamRuleTypes.filter(function (streamRuleType) {\n        return String(streamRuleType.id) === String(type);\n      })[0];\n    }\n    return undefined;\n  },\n  _formatRuleValue: function _formatRuleValue(streamRule) {\n    if (String(streamRule.type) !== String(this.FIELD_PRESENCE_RULE_TYPE)) {\n      if (streamRule.value) {\n        return streamRule.value;\n      }\n      return this.EMPTY_TAG;\n    }\n\n    return null;\n  },\n  _formatRuleField: function _formatRuleField(streamRule) {\n    if (streamRule.field) {\n      return streamRule.field;\n    }\n    return this.EMPTY_TAG;\n  },\n  render: function render() {\n    var streamRule = this.props.streamRule;\n    var streamRuleType = this._getTypeForInteger(streamRule.type, this.props.streamRuleTypes);\n    var negation = streamRule.inverted ? 'not ' : null;\n    var longDesc = streamRuleType ? streamRuleType.long_desc : null;\n    if (String(streamRule.type) === String(this.ALWAYS_MATCH_RULE_TYPE)) {\n      return _react2.default.createElement(\n        'span',\n        null,\n        'Rule always matches'\n      );\n    }\n    return _react2.default.createElement(\n      'span',\n      null,\n      'Field ',\n      _react2.default.createElement(\n        'em',\n        null,\n        this._formatRuleField(streamRule)\n      ),\n      ' must ',\n      negation,\n      longDesc,\n      ' ',\n      _react2.default.createElement(\n        'em',\n        null,\n        this._formatRuleValue(streamRule)\n      )\n    );\n  }\n});\n\nexports.default = HumanReadableStreamRule;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1096:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactAddonsLinkedStateMixin = __webpack_require__(961);\n\nvar _reactAddonsLinkedStateMixin2 = _interopRequireDefault(_reactAddonsLinkedStateMixin);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _BootstrapModalForm = __webpack_require__(261);\n\nvar _BootstrapModalForm2 = _interopRequireDefault(_BootstrapModalForm);\n\nvar _common = __webpack_require__(48);\n\nvar _support = __webpack_require__(960);\n\nvar _DocsHelper = __webpack_require__(952);\n\nvar _DocsHelper2 = _interopRequireDefault(_DocsHelper);\n\nvar _Version = __webpack_require__(1098);\n\nvar _Version2 = _interopRequireDefault(_Version);\n\nvar _HumanReadableStreamRule = __webpack_require__(1095);\n\nvar _HumanReadableStreamRule2 = _interopRequireDefault(_HumanReadableStreamRule);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StreamRuleForm = _react2.default.createClass({\n  displayName: 'StreamRuleForm',\n\n  propTypes: {\n    onSubmit: _react2.default.PropTypes.func.isRequired,\n    streamRule: _react2.default.PropTypes.object,\n    streamRuleTypes: _react2.default.PropTypes.array.isRequired,\n    title: _react2.default.PropTypes.string.isRequired\n  },\n  mixins: [_reactAddonsLinkedStateMixin2.default],\n  getDefaultProps: function getDefaultProps() {\n    return {\n      streamRule: { field: '', type: 1, value: '', inverted: false, description: '' }\n    };\n  },\n  getInitialState: function getInitialState() {\n    return this.props.streamRule;\n  },\n\n  FIELD_PRESENCE_RULE_TYPE: 5,\n  ALWAYS_MATCH_RULE_TYPE: 7,\n  _resetValues: function _resetValues() {\n    this.setState(this.props.streamRule);\n  },\n  _onSubmit: function _onSubmit() {\n    if (this.state.type === this.ALWAYS_MATCH_RULE_TYPE) {\n      this.state.field = '';\n    }\n    if (this.state.type === this.FIELD_PRESENCE_RULE_TYPE || this.state.type === this.ALWAYS_MATCH_RULE_TYPE) {\n      this.state.value = '';\n    }\n    this.props.onSubmit(this.props.streamRule.id, this.state);\n    this.refs.modal.close();\n  },\n  _formatStreamRuleType: function _formatStreamRuleType(streamRuleType) {\n    return _react2.default.createElement(\n      'option',\n      { key: 'streamRuleType' + streamRuleType.id,\n        value: streamRuleType.id },\n      streamRuleType.short_desc\n    );\n  },\n  open: function open() {\n    this._resetValues();\n    this.refs.modal.open();\n  },\n  close: function close() {\n    this.refs.modal.close();\n  },\n  render: function render() {\n    var streamRuleTypes = this.props.streamRuleTypes.map(this._formatStreamRuleType);\n    var fieldBox = String(this.state.type) !== String(this.ALWAYS_MATCH_RULE_TYPE) ? _react2.default.createElement(_common.TypeAheadFieldInput, { ref: 'fieldInput', type: 'text', required: true, label: 'Field', valueLink: this.linkState('field'), autoFocus: true }) : '';\n    var valueBox = String(this.state.type) !== String(this.FIELD_PRESENCE_RULE_TYPE) && String(this.state.type) !== String(this.ALWAYS_MATCH_RULE_TYPE) ? _react2.default.createElement(_bootstrap.Input, { id: 'Value', type: 'text', required: true, label: 'Value', name: 'Value', valueLink: this.linkState('value') }) : '';\n    return _react2.default.createElement(\n      _BootstrapModalForm2.default,\n      { ref: 'modal',\n        title: this.props.title,\n        onSubmitForm: this._onSubmit,\n        submitButtonText: 'Save',\n        formProps: { id: 'StreamRuleForm' } },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 8 },\n          fieldBox,\n          _react2.default.createElement(\n            _bootstrap.Input,\n            { id: 'Type', type: 'select', required: true, label: 'Type', name: 'Type', valueLink: this.linkState('type') },\n            streamRuleTypes\n          ),\n          valueBox,\n          _react2.default.createElement(_bootstrap.Input, { id: 'Inverted', type: 'checkbox', label: 'Inverted', name: 'Inverted', checkedLink: this.linkState('inverted') }),\n          _react2.default.createElement(_bootstrap.Input, { id: 'Description', type: 'textarea', label: 'Description (optional)', name: 'Description', valueLink: this.linkState('description') }),\n          _react2.default.createElement(\n            'p',\n            null,\n            _react2.default.createElement(\n              'strong',\n              null,\n              'Result:'\n            ),\n            ' ',\n            _react2.default.createElement(_HumanReadableStreamRule2.default, { streamRule: this.state, streamRuleTypes: this.props.streamRuleTypes })\n          )\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 4 },\n          _react2.default.createElement(\n            'div',\n            { className: 'well well-sm matcher-github' },\n            'The server will try to convert to strings or numbers based on the matcher type as good as it can.',\n            _react2.default.createElement('br', null),\n            _react2.default.createElement('br', null),\n            _react2.default.createElement('i', { className: 'fa fa-github' }),\n            _react2.default.createElement(\n              'a',\n              { href: 'https://github.com/Graylog2/graylog2-server/tree/' + _Version2.default.getMajorAndMinorVersion() + '/graylog2-server/src/main/java/org/graylog2/streams/matchers',\n                target: '_blank' },\n              ' Take a look at the matcher code on GitHub'\n            ),\n            _react2.default.createElement('br', null),\n            _react2.default.createElement('br', null),\n            'Regular expressions use Java syntax. ',\n            _react2.default.createElement(_support.DocumentationLink, { page: _DocsHelper2.default.PAGES.STREAMS,\n              title: 'More information',\n              text: _react2.default.createElement('i', { className: 'fa fa-lightbulb-o' }) })\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = StreamRuleForm;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1148:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _immutable = __webpack_require__(55);\n\nvar _immutable2 = _interopRequireDefault(_immutable);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _MessageShow = __webpack_require__(1103);\n\nvar _MessageShow2 = _interopRequireDefault(_MessageShow);\n\nvar _MessageLoader = __webpack_require__(989);\n\nvar _MessageLoader2 = _interopRequireDefault(_MessageLoader);\n\nvar _RawMessageLoader = __webpack_require__(1149);\n\nvar _RawMessageLoader2 = _interopRequireDefault(_RawMessageLoader);\n\nvar _RecentMessageLoader = __webpack_require__(1150);\n\nvar _RecentMessageLoader2 = _interopRequireDefault(_RecentMessageLoader);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\nvar LoaderTabs = _react2.default.createClass({\n  displayName: 'LoaderTabs',\n\n  propTypes: {\n    tabs: _react2.default.PropTypes.oneOfType([_react2.default.PropTypes.oneOf(['recent', 'messageId', 'raw']), _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.oneOf(['recent', 'messageId', 'raw']))]),\n    messageId: _react.PropTypes.string,\n    index: _react.PropTypes.string,\n    onMessageLoaded: _react.PropTypes.func,\n    selectedInputId: _react.PropTypes.string,\n    customFieldActions: _react.PropTypes.node,\n    disableMessagePreview: _react.PropTypes.bool\n  },\n\n  mixins: [_reflux2.default.listenTo(InputsStore, '_formatInputs')],\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      tabs: ['recent', 'messageId']\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      activeTab: undefined,\n      message: undefined,\n      inputs: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this.loadData();\n    if (this.props.messageId && this.props.index) {\n      this.refs.messageLoader.submit(this.props.messageId, this.props.index);\n    }\n  },\n  onMessageLoaded: function onMessageLoaded(message) {\n    this.setState({ message: message });\n    if (this.props.onMessageLoaded) {\n      this.props.onMessageLoaded(message);\n    }\n  },\n\n\n  TAB_KEYS: {\n    recent: 1,\n    messageId: 2,\n    raw: 3\n  },\n\n  _formatInputs: function _formatInputs(state) {\n    var inputs = InputsStore.inputsAsMap(state.inputs);\n    this.setState({ inputs: _immutable2.default.Map(inputs) });\n  },\n  loadData: function loadData() {\n    var _this = this;\n\n    InputsActions.list();\n    StreamsStore.listStreams().then(function (response) {\n      var streams = {};\n      response.forEach(function (stream) {\n        streams[stream.id] = stream;\n      });\n      _this.setState({ streams: _immutable2.default.Map(streams) });\n    });\n  },\n  _isTabVisible: function _isTabVisible(tabKey) {\n    return this.props.tabs === tabKey || this.props.tabs.indexOf(tabKey) !== -1;\n  },\n  _getActiveTab: function _getActiveTab() {\n    if (this.state.activeTab) {\n      return this.state.activeTab;\n    }\n\n    if (this._isTabVisible('messageId') && this.props.messageId && this.props.index) {\n      return this.TAB_KEYS.messageId;\n    }\n\n    if (this._isTabVisible('recent')) {\n      return this.TAB_KEYS.recent;\n    }\n    if (this._isTabVisible('messageId')) {\n      return this.TAB_KEYS.messageId;\n    }\n    return this.TAB_KEYS.raw;\n  },\n  _changeActiveTab: function _changeActiveTab(selectedTab) {\n    if (this.state.activeTab !== selectedTab) {\n      this.setState({ activeTab: selectedTab, message: undefined });\n    }\n  },\n  _formatMessageLoaders: function _formatMessageLoaders() {\n    var messageLoaders = [];\n\n    if (this._isTabVisible('recent')) {\n      messageLoaders.push(_react2.default.createElement(\n        _reactBootstrap.Tab,\n        { key: 'recent', eventKey: this.TAB_KEYS.recent, title: 'Recent Message', style: { marginBottom: 10 } },\n        _react2.default.createElement(_RecentMessageLoader2.default, { inputs: this.state.inputs,\n          selectedInputId: this.props.selectedInputId,\n          onMessageLoaded: this.onMessageLoaded })\n      ));\n    }\n\n    if (this._isTabVisible('messageId')) {\n      messageLoaders.push(_react2.default.createElement(\n        _reactBootstrap.Tab,\n        { key: 'messageId', eventKey: this.TAB_KEYS.messageId, title: 'Message ID', style: { marginBottom: 10 } },\n        _react2.default.createElement(\n          'div',\n          { style: { marginTop: 5, marginBottom: 15 } },\n          'Please provide the id and index of the message that you want to load in this form:'\n        ),\n        _react2.default.createElement(_MessageLoader2.default, { ref: 'messageLoader', onMessageLoaded: this.onMessageLoaded, hidden: false, hideText: true })\n      ));\n    }\n\n    if (this._isTabVisible('raw')) {\n      messageLoaders.push(_react2.default.createElement(\n        _reactBootstrap.Tab,\n        { key: 'raw', eventKey: this.TAB_KEYS.raw, title: 'Raw Message', style: { marginBottom: 10 } },\n        _react2.default.createElement(\n          'div',\n          { style: { marginTop: 5, marginBottom: 15 } },\n          'Load a message from text, as if it was sent by a log source.'\n        ),\n        _react2.default.createElement(_RawMessageLoader2.default, { onMessageLoaded: this.onMessageLoaded })\n      ));\n    }\n\n    return messageLoaders;\n  },\n  render: function render() {\n    var displayMessage = void 0;\n    if (this.state.message && this.state.inputs && !this.props.disableMessagePreview) {\n      displayMessage = _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(_MessageShow2.default, { message: this.state.message, inputs: this.state.inputs,\n          streams: this.state.streams,\n          disableTestAgainstStream: true,\n          disableSurroundingSearch: true,\n          disableFieldActions: !this.props.customFieldActions,\n          customFieldActions: this.props.customFieldActions })\n      );\n    }\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Tabs,\n        { id: 'loaderTabs', activeKey: this._getActiveTab(), onSelect: this._changeActiveTab, animation: false },\n        this._formatMessageLoaders()\n      ),\n      displayMessage\n    );\n  }\n});\n\nexports.default = LoaderTabs;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1149:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _common = __webpack_require__(48);\n\nvar _configurationforms = __webpack_require__(953);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MessagesActions = _ActionsProvider2.default.getActions('Messages');\nvar CodecTypesActions = _ActionsProvider2.default.getActions('CodecTypes');\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\n// eslint-disable-next-line no-unused-vars\nvar MessagesStore = _StoreProvider2.default.getStore('Messages');\nvar CodecTypesStore = _StoreProvider2.default.getStore('CodecTypes');\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\n\nvar RawMessageLoader = _react2.default.createClass({\n  displayName: 'RawMessageLoader',\n\n  propTypes: {\n    onMessageLoaded: _react2.default.PropTypes.func.isRequired,\n    inputIdSelector: _react2.default.PropTypes.bool\n  },\n\n  mixins: [_reflux2.default.connect(CodecTypesStore), _reflux2.default.connect(InputsStore)],\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      inputIdSelector: false\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      loading: false,\n      message: '',\n      remoteAddress: '',\n      codec: '',\n      codecConfiguration: {},\n      inputId: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    CodecTypesActions.list();\n    if (this.props.inputIdSelector) {\n      InputsActions.list();\n    }\n  },\n\n\n  DEFAULT_REMOTE_ADDRESS: '127.0.0.1',\n\n  _loadMessage: function _loadMessage(event) {\n    var _this = this;\n\n    event.preventDefault();\n\n    var _state = this.state,\n        message = _state.message,\n        remoteAddress = _state.remoteAddress,\n        codec = _state.codec,\n        codecConfiguration = _state.codecConfiguration,\n        inputId = _state.inputId;\n\n    this.setState({ loading: true });\n    var promise = MessagesActions.loadRawMessage.triggerPromise(message, remoteAddress || this.DEFAULT_REMOTE_ADDRESS, codec, codecConfiguration);\n    promise.then(function (loadedMessage) {\n      _this.props.onMessageLoaded(loadedMessage, {\n        message: message,\n        remoteAddress: remoteAddress,\n        codec: codec,\n        codecConfiguration: codecConfiguration,\n        inputId: inputId\n      });\n    });\n    promise.finally(function () {\n      return _this.setState({ loading: false });\n    });\n  },\n  _bindValue: function _bindValue(event) {\n    var newState = {};\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  },\n  _formatSelectOptions: function _formatSelectOptions() {\n    var _this2 = this;\n\n    if (!this.state.codecTypes) {\n      return [{ value: 'none', label: 'Loading codec types...', disabled: true }];\n    }\n\n    var codecTypesIds = Object.keys(this.state.codecTypes);\n    if (codecTypesIds.length === 0) {\n      return [{ value: 'none', label: 'No codecs available' }];\n    }\n\n    return codecTypesIds.filter(function (id) {\n      return id !== 'random-http-msg';\n    }) // Skip Random HTTP codec, as nobody wants to enter a raw random message.\n    .map(function (id) {\n      var name = _this2.state.codecTypes[id].name;\n      // Add id as label on codecs not having a descriptor name\n      return { value: id, label: name === '' ? id : name };\n    }).sort(function (codecA, codecB) {\n      return codecA.label.toLowerCase().localeCompare(codecB.label.toLowerCase());\n    });\n  },\n  _formatInputSelectOptions: function _formatInputSelectOptions() {\n    var _this3 = this;\n\n    if (!this.state.inputs) {\n      return [{ value: 'none', label: 'Loading inputs...', disabled: true }];\n    }\n\n    var inputIds = Object.keys(this.state.inputs);\n    if (inputIds.length === 0) {\n      return [{ value: 'none', label: 'No inputs available' }];\n    }\n\n    return inputIds.map(function (id) {\n      var inputId = _this3.state.inputs[id].id;\n      var label = inputId + ' / ' + _this3.state.inputs[id].title + ' / ' + _this3.state.inputs[id].name;\n      return { value: inputId, label: label };\n    }).sort(function (inputA, inputB) {\n      return inputA.label.toLowerCase().localeCompare(inputB.label.toLowerCase());\n    });\n  },\n  _onCodecSelect: function _onCodecSelect(selectedCodec) {\n    this._bindValue({ target: { name: 'codec', value: selectedCodec } });\n    this.setState({ codecConfiguration: {} });\n  },\n  _onInputSelect: function _onInputSelect(selectedInput) {\n    this.setState({ inputId: selectedInput });\n  },\n  _onCodecConfigurationChange: function _onCodecConfigurationChange(field, value) {\n    var newConfiguration = Object.assign(this.state.codecConfiguration);\n    newConfiguration[field] = value;\n    this._bindValue({ target: { name: 'codecConfiguration', value: newConfiguration } });\n  },\n  _formatConfigField: function _formatConfigField(key, configField) {\n    var value = this.state.codecConfiguration[key];\n    var typeName = 'RawMessageLoader';\n    var elementKey = typeName + '-' + key;\n\n    switch (configField.type) {\n      case 'text':\n        return _react2.default.createElement(_configurationforms.TextField, { key: elementKey, typeName: typeName, title: key, field: configField,\n          value: value, onChange: this._onCodecConfigurationChange });\n      case 'number':\n        return _react2.default.createElement(_configurationforms.NumberField, { key: elementKey, typeName: typeName, title: key, field: configField,\n          value: value, onChange: this._onCodecConfigurationChange });\n      case 'boolean':\n        return _react2.default.createElement(_configurationforms.BooleanField, { key: elementKey, typeName: typeName, title: key, field: configField,\n          value: value, onChange: this._onCodecConfigurationChange });\n      case 'dropdown':\n        return _react2.default.createElement(_configurationforms.DropdownField, { key: elementKey, typeName: typeName, title: key, field: configField,\n          value: value, onChange: this._onCodecConfigurationChange });\n      default:\n        return null;\n    }\n  },\n  _isSubmitDisabled: function _isSubmitDisabled() {\n    return !this.state.message || !this.state.codec || this.state.loading;\n  },\n  render: function render() {\n    var _this4 = this;\n\n    var codecConfigurationOptions = void 0;\n    if (this.state.codecTypes && this.state.codec) {\n      var codecConfiguration = this.state.codecTypes[this.state.codec].requested_configuration;\n      codecConfigurationOptions = Object.keys(codecConfiguration).sort(function (keyA, keyB) {\n        return codecConfiguration[keyA].is_optional - codecConfiguration[keyB].is_optional;\n      }).map(function (key) {\n        return _this4._formatConfigField(key, codecConfiguration[key]);\n      });\n    }\n\n    var inputIdSelector = void 0;\n    if (this.props.inputIdSelector) {\n      inputIdSelector = _react2.default.createElement(\n        _bootstrap.Input,\n        { id: 'input', name: 'input', label: _react2.default.createElement(\n            'span',\n            null,\n            'Message input ',\n            _react2.default.createElement(\n              'small',\n              null,\n              '(optional)'\n            )\n          ),\n          help: 'Select the message input ID that should be assigned to the parsed message.' },\n        _react2.default.createElement(_common.Select, { id: 'input', placeholder: 'Select input', options: this._formatInputSelectOptions(),\n          matchProp: 'label', onValueChange: this._onInputSelect, value: this.state.inputId })\n      );\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 7 },\n        _react2.default.createElement(\n          'form',\n          { onSubmit: this._loadMessage },\n          _react2.default.createElement(\n            'fieldset',\n            null,\n            _react2.default.createElement(_bootstrap.Input, { id: 'message', name: 'message', type: 'textarea', label: 'Raw message',\n              value: this.state.message, onChange: this._bindValue, rows: 3, required: true }),\n            _react2.default.createElement(_bootstrap.Input, { id: 'remoteAddress', name: 'remoteAddress', type: 'text',\n              label: _react2.default.createElement(\n                'span',\n                null,\n                'Source IP address ',\n                _react2.default.createElement(\n                  'small',\n                  null,\n                  '(optional)'\n                )\n              ),\n              help: 'Remote IP address to use as message source. Graylog will use ' + this.DEFAULT_REMOTE_ADDRESS + ' by default.',\n              value: this.state.remoteAddress, onChange: this._bindValue })\n          ),\n          inputIdSelector,\n          _react2.default.createElement(\n            'fieldset',\n            null,\n            _react2.default.createElement(\n              'legend',\n              null,\n              'Codec configuration'\n            ),\n            _react2.default.createElement(\n              _bootstrap.Input,\n              { id: 'codec', name: 'codec', label: 'Message codec',\n                help: 'Select the codec that should be used to decode the message.', required: true },\n              _react2.default.createElement(_common.Select, { id: 'codec', placeholder: 'Select codec', options: this._formatSelectOptions(),\n                matchProp: 'label', onValueChange: this._onCodecSelect, value: this.state.codec })\n            ),\n            codecConfigurationOptions\n          ),\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { type: 'submit', bsStyle: 'info', disabled: this._isSubmitDisabled() },\n            this.state.loading ? 'Loading message...' : 'Load message'\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = RawMessageLoader;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1150:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _InputDropdown = __webpack_require__(1019);\n\nvar _InputDropdown2 = _interopRequireDefault(_InputDropdown);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UniversalSearchStore = _StoreProvider2.default.getStore('UniversalSearch');\n\nvar RecentMessageLoader = _react2.default.createClass({\n  displayName: 'RecentMessageLoader',\n\n  propTypes: {\n    inputs: _react.PropTypes.object,\n    onMessageLoaded: _react.PropTypes.func.isRequired,\n    selectedInputId: _react.PropTypes.string\n  },\n  getInitialState: function getInitialState() {\n    return {\n      loading: false\n    };\n  },\n  onClick: function onClick(inputId) {\n    var _this = this;\n\n    var input = this.props.inputs.get(inputId);\n    if (!input) {\n      _UserNotification2.default.error('Invalid input selected: ' + inputId, 'Could not load message from invalid Input ' + inputId);\n    }\n    this.setState({ loading: true });\n    var promise = UniversalSearchStore.search('relative', 'gl2_source_input:' + inputId + ' OR gl2_source_radio_input:' + inputId, { range: 3600 }, undefined, 1, undefined, undefined, undefined, false);\n    promise.then(function (response) {\n      if (response.total_results > 0) {\n        _this.props.onMessageLoaded(response.messages[0]);\n      } else {\n        _UserNotification2.default.error('Input did not return a recent message.');\n        _this.props.onMessageLoaded(undefined);\n      }\n    });\n    promise.finally(function () {\n      return _this.setState({ loading: false });\n    });\n  },\n  render: function render() {\n    var helpMessage = void 0;\n    if (this.props.selectedInputId) {\n      helpMessage = 'Click on \"Load Message\" to load the most recent message received by this input within the last hour.';\n    } else {\n      helpMessage = 'Select an Input from the list below and click \"Load Message\" to load the most recent message received by this input within the last hour.';\n    }\n    return _react2.default.createElement(\n      'div',\n      { style: { marginTop: 5 } },\n      helpMessage,\n      _react2.default.createElement(_InputDropdown2.default, { inputs: this.props.inputs, preselectedInputId: this.props.selectedInputId,\n        onLoadMessage: this.onClick, title: this.state.loading ? 'Loading message...' : 'Load Message',\n        disabled: this.state.loading })\n    );\n  }\n});\n\nexports.default = RecentMessageLoader;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1174:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _PermissionsMixin = __webpack_require__(165);\n\nvar _PermissionsMixin2 = _interopRequireDefault(_PermissionsMixin);\n\nvar _StreamRuleForm = __webpack_require__(1096);\n\nvar _StreamRuleForm2 = _interopRequireDefault(_StreamRuleForm);\n\nvar _HumanReadableStreamRule = __webpack_require__(1095);\n\nvar _HumanReadableStreamRule2 = _interopRequireDefault(_HumanReadableStreamRule);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StreamRulesStore = _StoreProvider2.default.getStore('StreamRules');\n\nvar StreamRule = _react2.default.createClass({\n  displayName: 'StreamRule',\n\n  propTypes: {\n    matchData: _react2.default.PropTypes.array,\n    onDelete: _react2.default.PropTypes.func,\n    onSubmit: _react2.default.PropTypes.func,\n    permissions: _react2.default.PropTypes.array.isRequired,\n    stream: _react2.default.PropTypes.object.isRequired,\n    streamRule: _react2.default.PropTypes.object.isRequired,\n    streamRuleTypes: _react2.default.PropTypes.array.isRequired\n  },\n  mixins: [_PermissionsMixin2.default],\n  _onEdit: function _onEdit(event) {\n    event.preventDefault();\n    this.refs.streamRuleForm.open();\n  },\n  _onDelete: function _onDelete(event) {\n    var _this = this;\n\n    event.preventDefault();\n    if (window.confirm('Do you really want to delete this stream rule?')) {\n      StreamRulesStore.remove(this.props.stream.id, this.props.streamRule.id, function () {\n        if (_this.props.onDelete) {\n          _this.props.onDelete(_this.props.streamRule.id);\n        }\n        _UserNotification2.default.success('Stream rule has been successfully deleted.', 'Success');\n      });\n    }\n  },\n  _onSubmit: function _onSubmit(streamRuleId, data) {\n    var _this2 = this;\n\n    StreamRulesStore.update(this.props.stream.id, streamRuleId, data, function () {\n      if (_this2.props.onSubmit) {\n        _this2.props.onSubmit(streamRuleId, data);\n      }\n      _UserNotification2.default.success('Stream rule has been successfully updated.', 'Success');\n    });\n  },\n  _formatActionItems: function _formatActionItems() {\n    return _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(\n        'a',\n        { href: '#', onClick: this._onDelete, style: { marginRight: 5 } },\n        _react2.default.createElement('i', { className: 'fa fa-trash-o' })\n      ),\n      _react2.default.createElement(\n        'a',\n        { href: '#', onClick: this._onEdit, style: { marginRight: 5 } },\n        _react2.default.createElement('i', { className: 'fa fa-edit' })\n      )\n    );\n  },\n  _getMatchDataClassNames: function _getMatchDataClassNames() {\n    return this.props.matchData.rules[this.props.streamRule.id] ? 'alert-success' : 'alert-danger';\n  },\n  render: function render() {\n    var streamRule = this.props.streamRule;\n    var streamRuleTypes = this.props.streamRuleTypes;\n    var actionItems = this.isPermitted(this.props.permissions, ['streams:edit:' + this.props.stream.id]) ? this._formatActionItems() : null;\n    var className = this.props.matchData ? this._getMatchDataClassNames() : null;\n    var description = this.props.streamRule.description ? _react2.default.createElement(\n      'small',\n      null,\n      ' ',\n      '(',\n      this.props.streamRule.description,\n      ')'\n    ) : null;\n    return _react2.default.createElement(\n      'li',\n      { className: className },\n      actionItems,\n      _react2.default.createElement(_HumanReadableStreamRule2.default, { streamRule: streamRule, streamRuleTypes: streamRuleTypes }),\n      _react2.default.createElement(_StreamRuleForm2.default, { ref: 'streamRuleForm', streamRule: streamRule, streamRuleTypes: streamRuleTypes,\n        title: 'Edit Stream Rule', onSubmit: this._onSubmit }),\n      description\n    );\n  }\n});\n\nexports.default = StreamRule;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1175:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _StreamRule = __webpack_require__(1174);\n\nvar _StreamRule2 = _interopRequireDefault(_StreamRule);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StreamRuleList = _react2.default.createClass({\n  displayName: 'StreamRuleList',\n\n  propTypes: {\n    matchData: _react2.default.PropTypes.object,\n    onSubmit: _react2.default.PropTypes.func,\n    onDelete: _react2.default.PropTypes.func,\n    permissions: _react2.default.PropTypes.array.isRequired,\n    stream: _react2.default.PropTypes.object.isRequired,\n    streamRuleTypes: _react2.default.PropTypes.array.isRequired\n  },\n\n  _formatStreamRules: function _formatStreamRules(streamRules) {\n    var _this = this;\n\n    if (streamRules && streamRules.length > 0) {\n      return streamRules.map(function (streamRule) {\n        return _react2.default.createElement(_StreamRule2.default, { key: streamRule.id, permissions: _this.props.permissions, matchData: _this.props.matchData,\n          onSubmit: _this.props.onSubmit, onDelete: _this.props.onDelete,\n          stream: _this.props.stream, streamRule: streamRule, streamRuleTypes: _this.props.streamRuleTypes });\n      });\n    }\n    return _react2.default.createElement(\n      'li',\n      null,\n      'No rules defined.'\n    );\n  },\n  render: function render() {\n    if (this.props.stream) {\n      var streamRules = this._formatStreamRules(this.props.stream.rules);\n      return _react2.default.createElement(\n        'ul',\n        { className: 'streamrules-list' },\n        streamRules\n      );\n    }\n    return _react2.default.createElement(_common.Spinner, null);\n  }\n});\n\nexports.default = StreamRuleList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1301:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _LoaderTabs = __webpack_require__(1148);\n\nvar _LoaderTabs2 = _interopRequireDefault(_LoaderTabs);\n\nvar _MatchingTypeSwitcher = __webpack_require__(1302);\n\nvar _MatchingTypeSwitcher2 = _interopRequireDefault(_MatchingTypeSwitcher);\n\nvar _StreamRuleList = __webpack_require__(1175);\n\nvar _StreamRuleList2 = _interopRequireDefault(_StreamRuleList);\n\nvar _StreamRuleForm = __webpack_require__(1096);\n\nvar _StreamRuleForm2 = _interopRequireDefault(_StreamRuleForm);\n\nvar _Spinner = __webpack_require__(260);\n\nvar _Spinner2 = _interopRequireDefault(_Spinner);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\nvar StreamRulesStore = _StoreProvider2.default.getStore('StreamRules');\n\nvar StreamRulesEditor = _react2.default.createClass({\n  displayName: 'StreamRulesEditor',\n  propTypes: function propTypes() {\n    return {\n      currentUser: _react.PropTypes.object.isRequired,\n      streamId: _react.PropTypes.string.isRequired,\n      messageId: _react.PropTypes.string,\n      index: _react.PropTypes.string\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {};\n  },\n  componentDidMount: function componentDidMount() {\n    this.loadData();\n    StreamsStore.onChange(this.loadData);\n    StreamRulesStore.onChange(this.loadData);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    StreamsStore.unregister(this.loadData);\n    StreamRulesStore.unregister(this.loadData);\n  },\n  onMessageLoaded: function onMessageLoaded(message) {\n    var _this = this;\n\n    this.setState({ message: message });\n    if (message !== undefined) {\n      StreamsStore.testMatch(this.props.streamId, { message: message.fields }, function (resultData) {\n        _this.setState({ matchData: resultData });\n      });\n    } else {\n      this.setState({ matchData: undefined });\n    }\n  },\n  loadData: function loadData() {\n    var _this2 = this;\n\n    StreamRulesStore.types().then(function (types) {\n      _this2.setState({ streamRuleTypes: types });\n    });\n\n    StreamsStore.get(this.props.streamId, function (stream) {\n      _this2.setState({ stream: stream });\n    });\n\n    if (this.state.message) {\n      this.onMessageLoaded(this.state.message);\n    }\n  },\n  _onStreamRuleFormSubmit: function _onStreamRuleFormSubmit(streamRuleId, data) {\n    StreamRulesStore.create(this.props.streamId, data, function () {});\n  },\n  _onAddStreamRule: function _onAddStreamRule(event) {\n    event.preventDefault();\n    this.refs.newStreamRuleForm.open();\n  },\n  _getListClassName: function _getListClassName(matchData) {\n    return matchData.matches ? 'success' : 'danger';\n  },\n  _explainMatchResult: function _explainMatchResult() {\n    if (this.state.matchData) {\n      if (this.state.matchData.matches) {\n        return _react2.default.createElement(\n          'span',\n          null,\n          _react2.default.createElement('i', { className: 'fa fa-check', style: { color: 'green' } }),\n          ' This message would be routed to this stream.'\n        );\n      }\n      return _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement('i', { className: 'fa fa-remove', style: { color: 'red' } }),\n        ' This message would not be routed to this stream.'\n      );\n    }\n    return 'Please load a message to check if it would match against these rules and therefore be routed into this stream.';\n  },\n  render: function render() {\n    var styles = this.state.matchData ? this._getListClassName(this.state.matchData) : 'info';\n    if (this.state.stream && this.state.streamRuleTypes) {\n      return _react2.default.createElement(\n        'div',\n        { className: 'row content' },\n        _react2.default.createElement(\n          'div',\n          { className: 'col-md-12 streamrule-sample-message' },\n          _react2.default.createElement(\n            'h2',\n            null,\n            '1. Load a message to test rules'\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'stream-loader' },\n            _react2.default.createElement(_LoaderTabs2.default, { messageId: this.props.messageId, index: this.props.index, onMessageLoaded: this.onMessageLoaded })\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'spinner', style: { display: 'none' } },\n            _react2.default.createElement(\n              'h2',\n              null,\n              _react2.default.createElement('i', {\n                className: 'fa fa-spinner fa-spin' }),\n              ' \\xA0Loading message'\n            )\n          ),\n          _react2.default.createElement(\n            'div',\n            { className: 'sample-message-display', style: { display: 'none', marginTop: '5px' } },\n            _react2.default.createElement(\n              'strong',\n              null,\n              'Next step:'\n            ),\n            'Add/delete/modify stream rules in step 2 and see if the example message would have been routed into the stream or not. Use the button on the right to add a stream rule.'\n          ),\n          _react2.default.createElement('hr', null),\n          _react2.default.createElement(\n            'div',\n            { className: 'buttons pull-right' },\n            _react2.default.createElement(\n              'button',\n              { className: 'btn btn-success show-stream-rule', onClick: this._onAddStreamRule },\n              'Add stream rule'\n            ),\n            _react2.default.createElement(_StreamRuleForm2.default, { ref: 'newStreamRuleForm', title: 'New Stream Rule',\n              streamRuleTypes: this.state.streamRuleTypes, onSubmit: this._onStreamRuleFormSubmit })\n          ),\n          _react2.default.createElement(\n            'h2',\n            null,\n            '2. Manage stream rules'\n          ),\n          this._explainMatchResult(),\n          _react2.default.createElement(_MatchingTypeSwitcher2.default, { stream: this.state.stream, onChange: this.loadData }),\n          _react2.default.createElement(\n            _reactBootstrap.Alert,\n            { ref: 'well', bsStyle: styles },\n            _react2.default.createElement(_StreamRuleList2.default, { stream: this.state.stream, streamRuleTypes: this.state.streamRuleTypes,\n              permissions: this.props.currentUser.permissions, matchData: this.state.matchData })\n          ),\n          _react2.default.createElement(\n            'p',\n            { style: { marginTop: '10px' } },\n            _react2.default.createElement(\n              _reactRouterBootstrap.LinkContainer,\n              { to: _Routes2.default.STREAMS },\n              _react2.default.createElement(\n                _reactBootstrap.Button,\n                { bsStyle: 'success' },\n                'I\\'m done!'\n              )\n            )\n          )\n        )\n      );\n    }\n    return _react2.default.createElement(\n      'div',\n      { className: 'row content' },\n      _react2.default.createElement(\n        'div',\n        { style: { marginLeft: 10 } },\n        _react2.default.createElement(_Spinner2.default, null)\n      )\n    );\n  }\n});\n\nexports.default = StreamRulesEditor;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1302:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nfunction _possibleConstructorReturn(self, call) { if (!self) { throw new ReferenceError(\"this hasn't been initialised - super() hasn't been called\"); } return call && (typeof call === \"object\" || typeof call === \"function\") ? call : self; }\n\nfunction _inherits(subClass, superClass) { if (typeof superClass !== \"function\" && superClass !== null) { throw new TypeError(\"Super expression must either be null or a function, not \" + typeof superClass); } subClass.prototype = Object.create(superClass && superClass.prototype, { constructor: { value: subClass, enumerable: false, writable: true, configurable: true } }); if (superClass) Object.setPrototypeOf ? Object.setPrototypeOf(subClass, superClass) : subClass.__proto__ = superClass; }\n\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\n\nvar MatchingTypeSwitcher = function (_Component) {\n  _inherits(MatchingTypeSwitcher, _Component);\n\n  function MatchingTypeSwitcher() {\n    _classCallCheck(this, MatchingTypeSwitcher);\n\n    return _possibleConstructorReturn(this, (MatchingTypeSwitcher.__proto__ || Object.getPrototypeOf(MatchingTypeSwitcher)).apply(this, arguments));\n  }\n\n  _createClass(MatchingTypeSwitcher, [{\n    key: 'render',\n    value: function render() {\n      return _react2.default.createElement(\n        'div',\n        { className: 'streamrule-connector-type-form' },\n        _react2.default.createElement(\n          'div',\n          null,\n          _react2.default.createElement(_bootstrap.Input, { type: 'radio', label: 'A message must match all of the following rules',\n            checked: this.props.stream.matching_type === 'AND', onChange: this.handleTypeChangeToAnd.bind(this) }),\n          _react2.default.createElement(_bootstrap.Input, { type: 'radio', label: 'A message must match at least one of the following rules',\n            checked: this.props.stream.matching_type === 'OR', onChange: this.handleTypeChangeToOr.bind(this) })\n        )\n      );\n    }\n  }, {\n    key: 'handleTypeChangeToAnd',\n    value: function handleTypeChangeToAnd() {\n      this.handleTypeChange('AND');\n    }\n  }, {\n    key: 'handleTypeChangeToOr',\n    value: function handleTypeChangeToOr() {\n      this.handleTypeChange('OR');\n    }\n  }, {\n    key: 'handleTypeChange',\n    value: function handleTypeChange(newValue) {\n      var _this2 = this;\n\n      if (window.confirm('You are about to change how rules are applied to this stream, do you want to continue? Changes will take effect immediately.')) {\n        StreamsStore.update(this.props.stream.id, { matching_type: newValue }, function (response) {\n          _this2.props.onChange();\n          _UserNotification2.default.success('Messages will now be routed into the stream when ' + (newValue === 'AND' ? 'all' : 'any') + ' rules are matched', 'Success');\n          return response;\n        });\n      }\n    }\n  }]);\n\n  return MatchingTypeSwitcher;\n}(_react.Component);\n\nMatchingTypeSwitcher.propTypes = {\n  stream: _react.PropTypes.object.isRequired,\n  onChange: _react.PropTypes.func.isRequired\n};\nexports.default = MatchingTypeSwitcher;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1408:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StreamRulesEditor = __webpack_require__(1301);\n\nvar _StreamRulesEditor2 = _interopRequireDefault(_StreamRulesEditor);\n\nvar _common = __webpack_require__(48);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CurrentUserStore = _StoreProvider2.default.getStore('CurrentUser');\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\n\nvar StreamEditPage = _react2.default.createClass({\n  displayName: 'StreamEditPage',\n\n  propTypes: {\n    params: _react.PropTypes.object.isRequired,\n    location: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(CurrentUserStore)],\n\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    StreamsStore.get(this.props.params.streamId, function (stream) {\n      _this.setState({ stream: stream });\n    });\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.currentUser || !this.state.stream;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var content = _react2.default.createElement(_StreamRulesEditor2.default, { currentUser: this.state.currentUser, streamId: this.props.params.streamId,\n      messageId: this.props.location.query.message_id, index: this.props.location.query.index });\n    if (this.state.stream.is_default) {\n      content = _react2.default.createElement(\n        'div',\n        { className: 'row content' },\n        _react2.default.createElement(\n          'div',\n          { className: 'col-md-12' },\n          _react2.default.createElement(\n            _reactBootstrap.Alert,\n            { bsStyle: 'danger' },\n            'The default stream cannot be edited.'\n          )\n        )\n      );\n    }\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Rules of Stream ' + this.state.stream.title },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: _react2.default.createElement(\n              'span',\n              null,\n              'Rules of Stream \\xBB',\n              this.state.stream.title,\n              '\\xBB'\n            ) },\n          _react2.default.createElement(\n            'span',\n            null,\n            'This screen is dedicated to an easy and comfortable creation and manipulation of stream rules. You can',\n            ' ',\n            'see the effect configured stream rules have on message matching here.'\n          )\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = StreamEditPage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 961:\n/***/ (function(module, exports, __webpack_require__) {\n\nmodule.exports = (__webpack_require__(10))(336);\n\n/***/ }),\n\n/***/ 989:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar MessagesActions = _ActionsProvider2.default.getActions('Messages');\n\n// eslint-disable-next-line no-unused-vars\nvar MessagesStore = _StoreProvider2.default.getStore('Messages');\n\nvar MessageLoader = _react2.default.createClass({\n  displayName: 'MessageLoader',\n\n  propTypes: {\n    hidden: _react.PropTypes.bool,\n    hideText: _react.PropTypes.bool,\n    onMessageLoaded: _react.PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      hidden: true\n    };\n  },\n  getInitialState: function getInitialState() {\n    return {\n      hidden: this.props.hidden,\n      loading: false\n    };\n  },\n  toggleMessageForm: function toggleMessageForm() {\n    this.setState({ hidden: !this.state.hidden }, this._focusMessageLoaderForm);\n  },\n  _focusMessageLoaderForm: function _focusMessageLoaderForm() {\n    if (!this.state.hidden) {\n      this.refs.messageId.focus();\n    }\n  },\n  loadMessage: function loadMessage(event) {\n    var _this = this;\n\n    var messageId = this.refs.messageId.value;\n    var index = this.refs.index.value;\n    if (messageId === '' || index === '') {\n      return;\n    }\n    this.setState({ loading: true });\n    var promise = MessagesActions.loadMessage.triggerPromise(index, messageId);\n    promise.then(function (data) {\n      return _this.props.onMessageLoaded(data);\n    });\n    promise.finally(function () {\n      return _this.setState({ loading: false });\n    });\n\n    event.preventDefault();\n  },\n  submit: function submit(messageId, index) {\n    this.refs.messageId.value = messageId;\n    this.refs.index.value = index;\n    this.refs.submitButton.click();\n  },\n  render: function render() {\n    var explanatoryText = void 0;\n    if (!this.props.hideText) {\n      explanatoryText = _react2.default.createElement(\n        'p',\n        null,\n        'Wrong example? You can',\n        ' ',\n        _react2.default.createElement(\n          'button',\n          { className: 'btn btn-link btn-small btn-text', onClick: this.toggleMessageForm },\n          'load another message'\n        ),\n        '.'\n      );\n    }\n    var loadMessageForm = _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'form',\n        { className: 'form-inline message-loader-form', onSubmit: this.loadMessage },\n        _react2.default.createElement('input', { type: 'text', ref: 'messageId', className: 'form-control message-id-input', placeholder: 'Message ID', required: true }),\n        _react2.default.createElement('input', { type: 'text', ref: 'index', className: 'form-control', placeholder: 'Index', required: true }),\n        _react2.default.createElement(\n          'button',\n          { ref: 'submitButton', type: 'submit', className: 'btn btn-info', disabled: this.state.loading },\n          this.state.loading ? 'Loading message...' : 'Load message'\n        )\n      )\n    );\n    return _react2.default.createElement(\n      'div',\n      { className: 'message-loader' },\n      explanatoryText,\n      this.state.hidden ? null : loadMessageForm\n    );\n  }\n});\n\nexports.default = MessageLoader;\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 26.200197dca04f05abe3f2.js","import React, { PropTypes } from 'react';\nimport LinkedStateMixin from 'react-addons-linked-state-mixin';\nimport { Button } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport Spinner from 'components/common/Spinner';\n\nconst InputDropdown = React.createClass({\n  propTypes: {\n    inputs: PropTypes.object,\n    title: PropTypes.string,\n    preselectedInputId: PropTypes.string,\n    onLoadMessage: PropTypes.func,\n    disabled: PropTypes.bool,\n  },\n  mixins: [LinkedStateMixin],\n  getInitialState() {\n    return {\n      selectedInput: this.props.preselectedInputId || this.PLACEHOLDER,\n    };\n  },\n  PLACEHOLDER: 'placeholder',\n  _formatInput(input) {\n    return <option key={input.id} value={input.id}>{input.title} ({input.type})</option>;\n  },\n  _sortByTitle(input1, input2) {\n    return input1.title.localeCompare(input2.title);\n  },\n  _onLoadMessage() {\n    this.props.onLoadMessage(this.state.selectedInput);\n  },\n  _formatStaticInput(input) {\n    return (\n      <Input type=\"select\" style={{ float: 'left', width: 400, marginRight: 10 }} disabled>\n        <option>{`${input.title} (${input.type})`}</option>\n      </Input>\n    );\n  },\n  render() {\n    // When an input is pre-selected, show a static dropdown\n    if (this.props.inputs && this.props.preselectedInputId) {\n      return (\n        <div>\n          {this._formatStaticInput(this.props.inputs.get(this.props.preselectedInputId))}\n\n          <Button bsStyle=\"info\" disabled={this.state.selectedInput === this.PLACEHOLDER}\n             onClick={this._onLoadMessage}>{this.props.title}</Button>\n        </div>\n      );\n    }\n\n    if (this.props.inputs) {\n      const inputs = this.props.inputs.sort(this._sortByTitle).map(this._formatInput);\n      return (\n        <div>\n          <Input type=\"select\" style={{ float: 'left', width: 400, marginRight: 10 }}\n                 valueLink={this.linkState('selectedInput')} placeholder={this.PLACEHOLDER}>\n            <option value={this.PLACEHOLDER}>Select an input</option>\n            {inputs.toArray()}\n          </Input>\n\n          <Button bsStyle=\"info\" disabled={this.props.disabled || this.state.selectedInput === this.PLACEHOLDER}\n             onClick={this._onLoadMessage}>{this.props.title}</Button>\n        </div>\n      );\n    }\n\n    return <Spinner />;\n  },\n});\n\nexport default InputDropdown;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/inputs/InputDropdown.jsx","import React from 'react';\n\nconst HumanReadableStreamRule = React.createClass({\n  propTypes: {\n    streamRule: React.PropTypes.object.isRequired,\n    streamRuleTypes: React.PropTypes.array.isRequired,\n  },\n  EMPTY_TAG: '<empty>',\n  FIELD_PRESENCE_RULE_TYPE: 5,\n  ALWAYS_MATCH_RULE_TYPE: 7,\n  _getTypeForInteger(type, streamRuleTypes) {\n    if (streamRuleTypes) {\n      return streamRuleTypes.filter((streamRuleType) => {\n        return String(streamRuleType.id) === String(type);\n      })[0];\n    }\n    return undefined;\n  },\n  _formatRuleValue(streamRule) {\n    if (String(streamRule.type) !== String(this.FIELD_PRESENCE_RULE_TYPE)) {\n      if (streamRule.value) {\n        return streamRule.value;\n      }\n      return this.EMPTY_TAG;\n    }\n\n    return null;\n  },\n  _formatRuleField(streamRule) {\n    if (streamRule.field) {\n      return streamRule.field;\n    }\n    return this.EMPTY_TAG;\n  },\n  render() {\n    const streamRule = this.props.streamRule;\n    const streamRuleType = this._getTypeForInteger(streamRule.type, this.props.streamRuleTypes);\n    const negation = (streamRule.inverted ? 'not ' : null);\n    const longDesc = (streamRuleType ? streamRuleType.long_desc : null);\n    if (String(streamRule.type) === String(this.ALWAYS_MATCH_RULE_TYPE)) {\n      return (\n        <span>Rule always matches</span>\n      );\n    }\n    return (\n      <span>Field <em>{this._formatRuleField(streamRule)}</em> must {negation}{longDesc} <em>{this._formatRuleValue(streamRule)}</em></span>\n    );\n  },\n});\n\nexport default HumanReadableStreamRule;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streamrules/HumanReadableStreamRule.jsx","import React from 'react';\nimport { Col } from 'react-bootstrap';\nimport LinkedStateMixin from 'react-addons-linked-state-mixin';\n\nimport { Input } from 'components/bootstrap';\nimport BootstrapModalForm from 'components/bootstrap/BootstrapModalForm';\nimport { TypeAheadFieldInput } from 'components/common';\nimport { DocumentationLink } from 'components/support';\nimport DocsHelper from 'util/DocsHelper';\nimport Version from 'util/Version';\n\nimport HumanReadableStreamRule from 'components/streamrules//HumanReadableStreamRule';\n\nconst StreamRuleForm = React.createClass({\n  propTypes: {\n    onSubmit: React.PropTypes.func.isRequired,\n    streamRule: React.PropTypes.object,\n    streamRuleTypes: React.PropTypes.array.isRequired,\n    title: React.PropTypes.string.isRequired,\n  },\n  mixins: [LinkedStateMixin],\n  getDefaultProps() {\n    return {\n      streamRule: { field: '', type: 1, value: '', inverted: false, description: '' },\n    };\n  },\n  getInitialState() {\n    return this.props.streamRule;\n  },\n  FIELD_PRESENCE_RULE_TYPE: 5,\n  ALWAYS_MATCH_RULE_TYPE: 7,\n  _resetValues() {\n    this.setState(this.props.streamRule);\n  },\n  _onSubmit() {\n    if (this.state.type === this.ALWAYS_MATCH_RULE_TYPE) {\n      this.state.field = '';\n    }\n    if (this.state.type === this.FIELD_PRESENCE_RULE_TYPE || this.state.type === this.ALWAYS_MATCH_RULE_TYPE) {\n      this.state.value = '';\n    }\n    this.props.onSubmit(this.props.streamRule.id, this.state);\n    this.refs.modal.close();\n  },\n  _formatStreamRuleType(streamRuleType) {\n    return (\n      <option key={`streamRuleType${streamRuleType.id}`}\n              value={streamRuleType.id}>{streamRuleType.short_desc}</option>\n    );\n  },\n  open() {\n    this._resetValues();\n    this.refs.modal.open();\n  },\n  close() {\n    this.refs.modal.close();\n  },\n  render() {\n    const streamRuleTypes = this.props.streamRuleTypes.map(this._formatStreamRuleType);\n    const fieldBox = (String(this.state.type) !== String(this.ALWAYS_MATCH_RULE_TYPE) ?\n      <TypeAheadFieldInput ref=\"fieldInput\" type=\"text\" required label=\"Field\" valueLink={this.linkState('field')} autoFocus /> : '');\n    const valueBox = (String(this.state.type) !== String(this.FIELD_PRESENCE_RULE_TYPE) && String(this.state.type) !== String(this.ALWAYS_MATCH_RULE_TYPE) ?\n      <Input id=\"Value\" type=\"text\" required label=\"Value\" name=\"Value\" valueLink={this.linkState('value')} /> : '');\n    return (\n      <BootstrapModalForm ref=\"modal\"\n                          title={this.props.title}\n                          onSubmitForm={this._onSubmit}\n                          submitButtonText=\"Save\"\n                          formProps={{id: 'StreamRuleForm'}}>\n        <div>\n          <Col md={8}>\n            {fieldBox}\n            <Input id=\"Type\" type=\"select\" required label=\"Type\" name=\"Type\" valueLink={this.linkState('type')}>\n              {streamRuleTypes}\n            </Input>\n            {valueBox}\n            <Input id=\"Inverted\" type=\"checkbox\" label=\"Inverted\" name=\"Inverted\" checkedLink={this.linkState('inverted')} />\n\n            <Input id=\"Description\" type=\"textarea\" label=\"Description (optional)\" name=\"Description\" valueLink={this.linkState('description')} />\n\n            <p>\n              <strong>Result:</strong>\n              {' '}\n              <HumanReadableStreamRule streamRule={this.state} streamRuleTypes={this.props.streamRuleTypes} />\n            </p>\n          </Col>\n          <Col md={4}>\n            <div className=\"well well-sm matcher-github\">\n              The server will try to convert to strings or numbers based on the matcher type as good as it\n              can.\n\n              <br /><br />\n              <i className=\"fa fa-github\" />\n              <a href={`https://github.com/Graylog2/graylog2-server/tree/${Version.getMajorAndMinorVersion()}/graylog2-server/src/main/java/org/graylog2/streams/matchers`}\n                 target=\"_blank\"> Take a look at the matcher code on GitHub\n              </a>\n              <br /><br />\n              Regular expressions use Java syntax. <DocumentationLink page={DocsHelper.PAGES.STREAMS}\n                                                                      title=\"More information\"\n                                                                      text={<i className=\"fa fa-lightbulb-o\" />} />\n            </div>\n          </Col>\n        </div>\n      </BootstrapModalForm>\n    );\n  },\n});\n\nexport default StreamRuleForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streamrules/StreamRuleForm.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Tab, Tabs, Col } from 'react-bootstrap';\nimport Immutable from 'immutable';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputsStore = StoreProvider.getStore('Inputs');\nconst StreamsStore = StoreProvider.getStore('Streams');\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport MessageShow from 'components/search/MessageShow';\nimport MessageLoader from 'components/extractors/MessageLoader';\nimport RawMessageLoader from './RawMessageLoader';\nimport RecentMessageLoader from './RecentMessageLoader';\n\nconst LoaderTabs = React.createClass({\n  propTypes: {\n    tabs: React.PropTypes.oneOfType([\n      React.PropTypes.oneOf(['recent', 'messageId', 'raw']),\n      React.PropTypes.arrayOf(React.PropTypes.oneOf(['recent', 'messageId', 'raw'])),\n    ]),\n    messageId: PropTypes.string,\n    index: PropTypes.string,\n    onMessageLoaded: PropTypes.func,\n    selectedInputId: PropTypes.string,\n    customFieldActions: PropTypes.node,\n    disableMessagePreview: PropTypes.bool,\n  },\n\n  mixins: [Reflux.listenTo(InputsStore, '_formatInputs')],\n\n  getDefaultProps() {\n    return {\n      tabs: ['recent', 'messageId'],\n    };\n  },\n\n  getInitialState() {\n    return {\n      activeTab: undefined,\n      message: undefined,\n      inputs: undefined,\n    };\n  },\n  componentDidMount() {\n    this.loadData();\n    if (this.props.messageId && this.props.index) {\n      this.refs.messageLoader.submit(this.props.messageId, this.props.index);\n    }\n  },\n\n  onMessageLoaded(message) {\n    this.setState({ message: message });\n    if (this.props.onMessageLoaded) {\n      this.props.onMessageLoaded(message);\n    }\n  },\n\n  TAB_KEYS: {\n    recent: 1,\n    messageId: 2,\n    raw: 3,\n  },\n\n  _formatInputs(state) {\n    const inputs = InputsStore.inputsAsMap(state.inputs);\n    this.setState({ inputs: Immutable.Map(inputs) });\n  },\n\n  loadData() {\n    InputsActions.list();\n    StreamsStore.listStreams().then((response) => {\n      const streams = {};\n      response.forEach((stream) => {\n        streams[stream.id] = stream;\n      });\n      this.setState({ streams: Immutable.Map(streams) });\n    });\n  },\n\n  _isTabVisible(tabKey) {\n    return this.props.tabs === tabKey || this.props.tabs.indexOf(tabKey) !== -1;\n  },\n\n  _getActiveTab() {\n    if (this.state.activeTab) {\n      return this.state.activeTab;\n    }\n\n    if (this._isTabVisible('messageId') && this.props.messageId && this.props.index) {\n      return this.TAB_KEYS.messageId;\n    }\n\n    if (this._isTabVisible('recent')) {\n      return this.TAB_KEYS.recent;\n    }\n    if (this._isTabVisible('messageId')) {\n      return this.TAB_KEYS.messageId;\n    }\n    return this.TAB_KEYS.raw;\n  },\n\n  _changeActiveTab(selectedTab) {\n    if (this.state.activeTab !== selectedTab) {\n      this.setState({ activeTab: selectedTab, message: undefined });\n    }\n  },\n\n  _formatMessageLoaders() {\n    const messageLoaders = [];\n\n    if (this._isTabVisible('recent')) {\n      messageLoaders.push(\n        <Tab key=\"recent\" eventKey={this.TAB_KEYS.recent} title=\"Recent Message\" style={{ marginBottom: 10 }}>\n          <RecentMessageLoader inputs={this.state.inputs}\n                               selectedInputId={this.props.selectedInputId}\n                               onMessageLoaded={this.onMessageLoaded} />\n        </Tab>,\n      );\n    }\n\n    if (this._isTabVisible('messageId')) {\n      messageLoaders.push(\n        <Tab key=\"messageId\" eventKey={this.TAB_KEYS.messageId} title=\"Message ID\" style={{ marginBottom: 10 }}>\n          <div style={{ marginTop: 5, marginBottom: 15 }}>\n            Please provide the id and index of the message that you want to load in this form:\n          </div>\n\n          <MessageLoader ref=\"messageLoader\" onMessageLoaded={this.onMessageLoaded} hidden={false} hideText />\n        </Tab>,\n      );\n    }\n\n    if (this._isTabVisible('raw')) {\n      messageLoaders.push(\n        <Tab key=\"raw\" eventKey={this.TAB_KEYS.raw} title=\"Raw Message\" style={{ marginBottom: 10 }}>\n          <div style={{ marginTop: 5, marginBottom: 15 }}>\n            Load a message from text, as if it was sent by a log source.\n          </div>\n\n          <RawMessageLoader onMessageLoaded={this.onMessageLoaded} />\n        </Tab>,\n      );\n    }\n\n    return messageLoaders;\n  },\n\n  render() {\n    let displayMessage;\n    if (this.state.message && this.state.inputs && !this.props.disableMessagePreview) {\n      displayMessage = (\n        <Col md={12}>\n          <MessageShow message={this.state.message} inputs={this.state.inputs}\n                       streams={this.state.streams}\n                       disableTestAgainstStream\n                       disableSurroundingSearch\n                       disableFieldActions={!this.props.customFieldActions}\n                       customFieldActions={this.props.customFieldActions} />\n        </Col>\n      );\n    }\n\n    return (\n      <div>\n        <Tabs id=\"loaderTabs\" activeKey={this._getActiveTab()} onSelect={this._changeActiveTab} animation={false}>\n          {this._formatMessageLoaders()}\n        </Tabs>\n        {displayMessage}\n      </div>\n    );\n  },\n});\n\nexport default LoaderTabs;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/messageloaders/LoaderTabs.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport { Select } from 'components/common';\nimport { BooleanField, DropdownField, NumberField, TextField } from 'components/configurationforms';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst MessagesActions = ActionsProvider.getActions('Messages');\nconst CodecTypesActions = ActionsProvider.getActions('CodecTypes');\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport StoreProvider from 'injection/StoreProvider';\n// eslint-disable-next-line no-unused-vars\nconst MessagesStore = StoreProvider.getStore('Messages');\nconst CodecTypesStore = StoreProvider.getStore('CodecTypes');\nconst InputsStore = StoreProvider.getStore('Inputs');\n\nconst RawMessageLoader = React.createClass({\n  propTypes: {\n    onMessageLoaded: React.PropTypes.func.isRequired,\n    inputIdSelector: React.PropTypes.bool,\n  },\n\n  mixins: [Reflux.connect(CodecTypesStore), Reflux.connect(InputsStore)],\n\n  getDefaultProps() {\n    return {\n      inputIdSelector: false,\n    };\n  },\n\n  getInitialState() {\n    return {\n      loading: false,\n      message: '',\n      remoteAddress: '',\n      codec: '',\n      codecConfiguration: {},\n      inputId: undefined,\n    };\n  },\n\n  componentDidMount() {\n    CodecTypesActions.list();\n    if (this.props.inputIdSelector) {\n      InputsActions.list();\n    }\n  },\n\n  DEFAULT_REMOTE_ADDRESS: '127.0.0.1',\n\n  _loadMessage(event) {\n    event.preventDefault();\n\n    const { message, remoteAddress, codec, codecConfiguration, inputId } = this.state;\n    this.setState({ loading: true });\n    const promise = MessagesActions.loadRawMessage.triggerPromise(message, remoteAddress || this.DEFAULT_REMOTE_ADDRESS,\n      codec, codecConfiguration);\n    promise.then((loadedMessage) => {\n      this.props.onMessageLoaded(\n        loadedMessage,\n        {\n          message: message,\n          remoteAddress: remoteAddress,\n          codec: codec,\n          codecConfiguration: codecConfiguration,\n          inputId: inputId,\n        });\n    });\n    promise.finally(() => this.setState({ loading: false }));\n  },\n\n  _bindValue(event) {\n    const newState = {};\n    newState[event.target.name] = event.target.value;\n    this.setState(newState);\n  },\n\n  _formatSelectOptions() {\n    if (!this.state.codecTypes) {\n      return [{ value: 'none', label: 'Loading codec types...', disabled: true }];\n    }\n\n    const codecTypesIds = Object.keys(this.state.codecTypes);\n    if (codecTypesIds.length === 0) {\n      return [{ value: 'none', label: 'No codecs available' }];\n    }\n\n    return codecTypesIds\n      .filter(id => id !== 'random-http-msg') // Skip Random HTTP codec, as nobody wants to enter a raw random message.\n      .map((id) => {\n        const name = this.state.codecTypes[id].name;\n        // Add id as label on codecs not having a descriptor name\n        return { value: id, label: name === '' ? id : name };\n      })\n      .sort((codecA, codecB) => codecA.label.toLowerCase().localeCompare(codecB.label.toLowerCase()));\n  },\n\n  _formatInputSelectOptions() {\n    if (!this.state.inputs) {\n      return [{ value: 'none', label: 'Loading inputs...', disabled: true }];\n    }\n\n    const inputIds = Object.keys(this.state.inputs);\n    if (inputIds.length === 0) {\n      return [{ value: 'none', label: 'No inputs available' }];\n    }\n\n    return inputIds\n      .map((id) => {\n        const inputId = this.state.inputs[id].id;\n        const label = `${inputId} / ${this.state.inputs[id].title} / ${this.state.inputs[id].name}`;\n        return { value: inputId, label: label };\n      })\n      .sort((inputA, inputB) => inputA.label.toLowerCase().localeCompare(inputB.label.toLowerCase()));\n  },\n\n  _onCodecSelect(selectedCodec) {\n    this._bindValue({ target: { name: 'codec', value: selectedCodec } });\n    this.setState({ codecConfiguration: {} });\n  },\n\n  _onInputSelect(selectedInput) {\n    this.setState({ inputId: selectedInput });\n  },\n\n  _onCodecConfigurationChange(field, value) {\n    const newConfiguration = Object.assign(this.state.codecConfiguration);\n    newConfiguration[field] = value;\n    this._bindValue({ target: { name: 'codecConfiguration', value: newConfiguration } });\n  },\n\n  _formatConfigField(key, configField) {\n    const value = this.state.codecConfiguration[key];\n    const typeName = 'RawMessageLoader';\n    const elementKey = `${typeName}-${key}`;\n\n    switch (configField.type) {\n      case 'text':\n        return (<TextField key={elementKey} typeName={typeName} title={key} field={configField}\n                           value={value} onChange={this._onCodecConfigurationChange} />);\n      case 'number':\n        return (<NumberField key={elementKey} typeName={typeName} title={key} field={configField}\n                             value={value} onChange={this._onCodecConfigurationChange} />);\n      case 'boolean':\n        return (<BooleanField key={elementKey} typeName={typeName} title={key} field={configField}\n                              value={value} onChange={this._onCodecConfigurationChange} />);\n      case 'dropdown':\n        return (<DropdownField key={elementKey} typeName={typeName} title={key} field={configField}\n                               value={value} onChange={this._onCodecConfigurationChange} />);\n      default:\n        return null;\n    }\n  },\n\n  _isSubmitDisabled() {\n    return !this.state.message || !this.state.codec || this.state.loading;\n  },\n\n  render() {\n    let codecConfigurationOptions;\n    if (this.state.codecTypes && this.state.codec) {\n      const codecConfiguration = this.state.codecTypes[this.state.codec].requested_configuration;\n      codecConfigurationOptions = Object.keys(codecConfiguration)\n        .sort((keyA, keyB) => codecConfiguration[keyA].is_optional - codecConfiguration[keyB].is_optional)\n        .map(key => this._formatConfigField(key, codecConfiguration[key]));\n    }\n\n    let inputIdSelector;\n    if (this.props.inputIdSelector) {\n      inputIdSelector = (\n        <Input id=\"input\" name=\"input\" label={<span>Message input <small>(optional)</small></span>}\n               help=\"Select the message input ID that should be assigned to the parsed message.\">\n          <Select id=\"input\" placeholder=\"Select input\" options={this._formatInputSelectOptions()}\n                  matchProp=\"label\" onValueChange={this._onInputSelect} value={this.state.inputId} />\n        </Input>\n      );\n    }\n\n    return (\n      <Row>\n        <Col md={7}>\n          <form onSubmit={this._loadMessage}>\n            <fieldset>\n              <Input id=\"message\" name=\"message\" type=\"textarea\" label=\"Raw message\"\n                     value={this.state.message} onChange={this._bindValue} rows={3} required />\n              <Input id=\"remoteAddress\" name=\"remoteAddress\" type=\"text\"\n                     label={<span>Source IP address <small>(optional)</small></span>}\n                     help={`Remote IP address to use as message source. Graylog will use ${this.DEFAULT_REMOTE_ADDRESS} by default.`}\n                     value={this.state.remoteAddress} onChange={this._bindValue} />\n            </fieldset>\n            {inputIdSelector}\n            <fieldset>\n              <legend>Codec configuration</legend>\n              <Input id=\"codec\" name=\"codec\" label=\"Message codec\"\n                     help=\"Select the codec that should be used to decode the message.\" required>\n                <Select id=\"codec\" placeholder=\"Select codec\" options={this._formatSelectOptions()}\n                        matchProp=\"label\" onValueChange={this._onCodecSelect} value={this.state.codec} />\n              </Input>\n              {codecConfigurationOptions}\n            </fieldset>\n            <Button type=\"submit\" bsStyle=\"info\" disabled={this._isSubmitDisabled()}>\n              {this.state.loading ? 'Loading message...' : 'Load message'}\n            </Button>\n          </form>\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default RawMessageLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/messageloaders/RawMessageLoader.jsx","import React, { PropTypes } from 'react';\nimport InputDropdown from 'components/inputs/InputDropdown';\nimport UserNotification from 'util/UserNotification';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst UniversalSearchStore = StoreProvider.getStore('UniversalSearch');\n\nconst RecentMessageLoader = React.createClass({\n  propTypes: {\n    inputs: PropTypes.object,\n    onMessageLoaded: PropTypes.func.isRequired,\n    selectedInputId: PropTypes.string,\n  },\n  getInitialState() {\n    return {\n      loading: false,\n    };\n  },\n\n  onClick(inputId) {\n    const input = this.props.inputs.get(inputId);\n    if (!input) {\n      UserNotification.error(`Invalid input selected: ${inputId}`,\n        `Could not load message from invalid Input ${inputId}`);\n    }\n    this.setState({ loading: true });\n    const promise = UniversalSearchStore.search('relative', `gl2_source_input:${inputId} OR gl2_source_radio_input:${inputId}`,\n      { range: 3600 }, undefined, 1, undefined, undefined, undefined, false);\n    promise.then((response) => {\n      if (response.total_results > 0) {\n        this.props.onMessageLoaded(response.messages[0]);\n      } else {\n        UserNotification.error('Input did not return a recent message.');\n        this.props.onMessageLoaded(undefined);\n      }\n    });\n    promise.finally(() => this.setState({ loading: false }));\n  },\n  render() {\n    let helpMessage;\n    if (this.props.selectedInputId) {\n      helpMessage = 'Click on \"Load Message\" to load the most recent message received by this input within the last hour.';\n    } else {\n      helpMessage = 'Select an Input from the list below and click \"Load Message\" to load the most recent message received by this input within the last hour.';\n    }\n    return (\n      <div style={{ marginTop: 5 }}>\n        {helpMessage}\n        <InputDropdown inputs={this.props.inputs} preselectedInputId={this.props.selectedInputId}\n                       onLoadMessage={this.onClick} title={this.state.loading ? 'Loading message...' : 'Load Message'}\n                       disabled={this.state.loading} />\n      </div>\n    );\n  },\n});\n\nexport default RecentMessageLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/messageloaders/RecentMessageLoader.jsx","import React from 'react';\n\nimport PermissionsMixin from 'util/PermissionsMixin';\nimport StreamRuleForm from 'components/streamrules/StreamRuleForm';\nimport HumanReadableStreamRule from 'components/streamrules//HumanReadableStreamRule';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst StreamRulesStore = StoreProvider.getStore('StreamRules');\n\nimport UserNotification from 'util/UserNotification';\n\nconst StreamRule = React.createClass({\n  propTypes: {\n    matchData: React.PropTypes.array,\n    onDelete: React.PropTypes.func,\n    onSubmit: React.PropTypes.func,\n    permissions: React.PropTypes.array.isRequired,\n    stream: React.PropTypes.object.isRequired,\n    streamRule: React.PropTypes.object.isRequired,\n    streamRuleTypes: React.PropTypes.array.isRequired,\n  },\n  mixins: [PermissionsMixin],\n  _onEdit(event) {\n    event.preventDefault();\n    this.refs.streamRuleForm.open();\n  },\n  _onDelete(event) {\n    event.preventDefault();\n    if (window.confirm('Do you really want to delete this stream rule?')) {\n      StreamRulesStore.remove(this.props.stream.id, this.props.streamRule.id, () => {\n        if (this.props.onDelete) {\n          this.props.onDelete(this.props.streamRule.id);\n        }\n        UserNotification.success('Stream rule has been successfully deleted.', 'Success');\n      });\n    }\n  },\n  _onSubmit(streamRuleId, data) {\n    StreamRulesStore.update(this.props.stream.id, streamRuleId, data, () => {\n      if (this.props.onSubmit) {\n        this.props.onSubmit(streamRuleId, data);\n      }\n      UserNotification.success('Stream rule has been successfully updated.', 'Success');\n    });\n  },\n  _formatActionItems() {\n    return (\n      <span>\n        <a href=\"#\" onClick={this._onDelete} style={{ marginRight: 5 }}>\n          <i className=\"fa fa-trash-o\" />\n        </a>\n        <a href=\"#\" onClick={this._onEdit} style={{ marginRight: 5 }}>\n          <i className=\"fa fa-edit\" />\n        </a>\n      </span>\n    );\n  },\n  _getMatchDataClassNames() {\n    return (this.props.matchData.rules[this.props.streamRule.id] ? 'alert-success' : 'alert-danger');\n  },\n  render() {\n    const streamRule = this.props.streamRule;\n    const streamRuleTypes = this.props.streamRuleTypes;\n    const actionItems = (this.isPermitted(this.props.permissions, [`streams:edit:${this.props.stream.id}`]) ? this._formatActionItems() : null);\n    const className = (this.props.matchData ? this._getMatchDataClassNames() : null);\n    const description = this.props.streamRule.description ? <small>{' '}({this.props.streamRule.description})</small> : null;\n    return (\n      <li className={className}>\n        {actionItems}\n        <HumanReadableStreamRule streamRule={streamRule} streamRuleTypes={streamRuleTypes} />\n        <StreamRuleForm ref=\"streamRuleForm\" streamRule={streamRule} streamRuleTypes={streamRuleTypes}\n                        title=\"Edit Stream Rule\" onSubmit={this._onSubmit} />\n        {description}\n      </li>\n    );\n  },\n});\n\nexport default StreamRule;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streamrules/StreamRule.jsx","import React from 'react';\n\nimport StreamRule from 'components/streamrules/StreamRule';\nimport { Spinner } from 'components/common';\n\nconst StreamRuleList = React.createClass({\n  propTypes: {\n    matchData: React.PropTypes.object,\n    onSubmit: React.PropTypes.func,\n    onDelete: React.PropTypes.func,\n    permissions: React.PropTypes.array.isRequired,\n    stream: React.PropTypes.object.isRequired,\n    streamRuleTypes: React.PropTypes.array.isRequired,\n  },\n\n  _formatStreamRules(streamRules) {\n    if (streamRules && streamRules.length > 0) {\n      return streamRules.map((streamRule) => {\n        return (\n          <StreamRule key={streamRule.id} permissions={this.props.permissions} matchData={this.props.matchData}\n                      onSubmit={this.props.onSubmit} onDelete={this.props.onDelete}\n                      stream={this.props.stream} streamRule={streamRule} streamRuleTypes={this.props.streamRuleTypes} />\n        );\n      });\n    }\n    return <li>No rules defined.</li>;\n  },\n  render() {\n    if (this.props.stream) {\n      const streamRules = this._formatStreamRules(this.props.stream.rules);\n      return (\n        <ul className=\"streamrules-list\">\n          {streamRules}\n        </ul>\n      );\n    }\n    return (\n      <Spinner />\n    );\n  },\n});\n\nexport default StreamRuleList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streamrules/StreamRuleList.jsx","import React, { PropTypes } from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport Routes from 'routing/Routes';\n\nimport LoaderTabs from 'components/messageloaders/LoaderTabs';\nimport MatchingTypeSwitcher from 'components/streams/MatchingTypeSwitcher';\nimport StreamRuleList from 'components/streamrules/StreamRuleList';\nimport StreamRuleForm from 'components/streamrules/StreamRuleForm';\nimport Spinner from 'components/common/Spinner';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst StreamsStore = StoreProvider.getStore('Streams');\nconst StreamRulesStore = StoreProvider.getStore('StreamRules');\n\nconst StreamRulesEditor = React.createClass({\n  propTypes() {\n    return {\n      currentUser: PropTypes.object.isRequired,\n      streamId: PropTypes.string.isRequired,\n      messageId: PropTypes.string,\n      index: PropTypes.string,\n    };\n  },\n  getInitialState() {\n    return {};\n  },\n  componentDidMount() {\n    this.loadData();\n    StreamsStore.onChange(this.loadData);\n    StreamRulesStore.onChange(this.loadData);\n  },\n  componentWillUnmount() {\n    StreamsStore.unregister(this.loadData);\n    StreamRulesStore.unregister(this.loadData);\n  },\n  onMessageLoaded(message) {\n    this.setState({ message: message });\n    if (message !== undefined) {\n      StreamsStore.testMatch(this.props.streamId, { message: message.fields }, (resultData) => {\n        this.setState({ matchData: resultData });\n      });\n    } else {\n      this.setState({ matchData: undefined });\n    }\n  },\n  loadData() {\n    StreamRulesStore.types().then((types) => {\n      this.setState({ streamRuleTypes: types });\n    });\n\n    StreamsStore.get(this.props.streamId, (stream) => {\n      this.setState({ stream: stream });\n    });\n\n    if (this.state.message) {\n      this.onMessageLoaded(this.state.message);\n    }\n  },\n  _onStreamRuleFormSubmit(streamRuleId, data) {\n    StreamRulesStore.create(this.props.streamId, data, () => {});\n  },\n  _onAddStreamRule(event) {\n    event.preventDefault();\n    this.refs.newStreamRuleForm.open();\n  },\n  _getListClassName(matchData) {\n    return (matchData.matches ? 'success' : 'danger');\n  },\n  _explainMatchResult() {\n    if (this.state.matchData) {\n      if (this.state.matchData.matches) {\n        return (\n          <span>\n            <i className=\"fa fa-check\" style={{ color: 'green' }} /> This message would be routed to this stream.\n          </span>);\n      }\n      return (\n        <span>\n          <i className=\"fa fa-remove\" style={{ color: 'red' }} /> This message would not be routed to this stream.\n          </span>);\n    }\n    return ('Please load a message to check if it would match against these rules and therefore be routed into this stream.');\n  },\n  render() {\n    const styles = (this.state.matchData ? this._getListClassName(this.state.matchData) : 'info');\n    if (this.state.stream && this.state.streamRuleTypes) {\n      return (\n        <div className=\"row content\">\n          <div className=\"col-md-12 streamrule-sample-message\">\n            <h2>\n              1. Load a message to test rules\n            </h2>\n\n            <div className=\"stream-loader\">\n              <LoaderTabs messageId={this.props.messageId} index={this.props.index} onMessageLoaded={this.onMessageLoaded} />\n            </div>\n\n            <div className=\"spinner\" style={{ display: 'none' }}><h2><i\n              className=\"fa fa-spinner fa-spin\" /> &nbsp;Loading message</h2></div>\n\n            <div className=\"sample-message-display\" style={{ display: 'none', marginTop: '5px' }}>\n              <strong>Next step:</strong>\n              Add/delete/modify stream rules in step 2 and see if the example message would have been\n              routed into the stream or not. Use the button on the right to add a stream rule.\n            </div>\n\n            <hr />\n\n            <div className=\"buttons pull-right\">\n              <button className=\"btn btn-success show-stream-rule\" onClick={this._onAddStreamRule}>\n                Add stream rule\n              </button>\n              <StreamRuleForm ref=\"newStreamRuleForm\" title=\"New Stream Rule\"\n                              streamRuleTypes={this.state.streamRuleTypes} onSubmit={this._onStreamRuleFormSubmit} />\n            </div>\n\n            <h2>\n              2. Manage stream rules\n            </h2>\n\n            {this._explainMatchResult()}\n\n            <MatchingTypeSwitcher stream={this.state.stream} onChange={this.loadData} />\n            <Alert ref=\"well\" bsStyle={styles}>\n              <StreamRuleList stream={this.state.stream} streamRuleTypes={this.state.streamRuleTypes}\n                              permissions={this.props.currentUser.permissions} matchData={this.state.matchData} />\n            </Alert>\n\n            <p style={{ marginTop: '10px' }}>\n              <LinkContainer to={Routes.STREAMS}>\n                <Button bsStyle=\"success\">I'm done!</Button>\n              </LinkContainer>\n            </p>\n          </div>\n        </div>\n      );\n    }\n    return (<div className=\"row content\"><div style={{ marginLeft: 10 }}><Spinner /></div></div>);\n  },\n});\n\nexport default StreamRulesEditor;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streamrules/StreamRulesEditor.jsx","import React from 'react';\nimport { PropTypes, Component } from 'react';\nimport { Input } from 'components/bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst StreamsStore = StoreProvider.getStore('Streams');\n\nimport UserNotification from 'util/UserNotification';\n\nclass MatchingTypeSwitcher extends Component {\n  static propTypes = {\n    stream: PropTypes.object.isRequired,\n    onChange: PropTypes.func.isRequired,\n  };\n\n  render() {\n    return (\n      <div className=\"streamrule-connector-type-form\">\n        <div>\n          <Input type=\"radio\" label=\"A message must match all of the following rules\"\n                 checked={this.props.stream.matching_type === 'AND'} onChange={this.handleTypeChangeToAnd.bind(this)} />\n          <Input type=\"radio\" label=\"A message must match at least one of the following rules\"\n                 checked={this.props.stream.matching_type === 'OR'} onChange={this.handleTypeChangeToOr.bind(this)} />\n        </div>\n      </div>\n    );\n  }\n\n  handleTypeChangeToAnd() {\n    this.handleTypeChange('AND');\n  }\n\n  handleTypeChangeToOr() {\n    this.handleTypeChange('OR');\n  }\n\n  handleTypeChange(newValue) {\n    if (window.confirm('You are about to change how rules are applied to this stream, do you want to continue? Changes will take effect immediately.')) {\n      StreamsStore.update(this.props.stream.id, { matching_type: newValue }, (response) => {\n        this.props.onChange();\n        UserNotification.success(`Messages will now be routed into the stream when ${newValue === 'AND' ? 'all' : 'any'} rules are matched`,\n          'Success');\n        return response;\n      });\n    }\n  }\n}\n\nexport default MatchingTypeSwitcher;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/streams/MatchingTypeSwitcher.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Alert, Row, Col } from 'react-bootstrap';\n\nimport StreamRulesEditor from 'components/streamrules/StreamRulesEditor';\nimport { DocumentTitle, PageHeader, Spinner } from 'components/common';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst CurrentUserStore = StoreProvider.getStore('CurrentUser');\nconst StreamsStore = StoreProvider.getStore('Streams');\n\nconst StreamEditPage = React.createClass({\n  propTypes: {\n    params: PropTypes.object.isRequired,\n    location: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(CurrentUserStore)],\n\n  componentDidMount() {\n    StreamsStore.get(this.props.params.streamId, (stream) => {\n      this.setState({ stream });\n    });\n  },\n\n  _isLoading() {\n    return !this.state.currentUser || !this.state.stream;\n  },\n\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    let content = (<StreamRulesEditor currentUser={this.state.currentUser} streamId={this.props.params.streamId}\n                                 messageId={this.props.location.query.message_id} index={this.props.location.query.index} />);\n    if (this.state.stream.is_default) {\n      content = (\n        <div className=\"row content\">\n          <div className=\"col-md-12\">\n            <Alert bsStyle=\"danger\">\n              The default stream cannot be edited.\n            </Alert>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <DocumentTitle title={`Rules of Stream ${this.state.stream.title}`}>\n        <div>\n          <PageHeader title={<span>Rules of Stream &raquo;{this.state.stream.title}&raquo;</span>}>\n            <span>\n              This screen is dedicated to an easy and comfortable creation and manipulation of stream rules. You can{' '}\n              see the effect configured stream rules have on message matching here.\n            </span>\n          </PageHeader>\n\n          {content}\n        </div>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default StreamEditPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/StreamEditPage.jsx","module.exports = (__webpack_require__(10))(336);\n\n\n//////////////////\n// WEBPACK FOOTER\n// delegated ./node_modules/react-addons-linked-state-mixin/index.js from dll-reference __vendor\n// module id = 961\n// module chunks = 4 5 6 17 20 23 24 26 29","import React, { PropTypes } from 'react';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst MessagesActions = ActionsProvider.getActions('Messages');\n\nimport StoreProvider from 'injection/StoreProvider';\n// eslint-disable-next-line no-unused-vars\nconst MessagesStore = StoreProvider.getStore('Messages');\n\nconst MessageLoader = React.createClass({\n  propTypes: {\n    hidden: PropTypes.bool,\n    hideText: PropTypes.bool,\n    onMessageLoaded: PropTypes.func,\n  },\n  getDefaultProps() {\n    return {\n      hidden: true,\n    };\n  },\n  getInitialState() {\n    return ({\n      hidden: this.props.hidden,\n      loading: false,\n    });\n  },\n\n  toggleMessageForm() {\n    this.setState({ hidden: !this.state.hidden }, this._focusMessageLoaderForm);\n  },\n  _focusMessageLoaderForm() {\n    if (!this.state.hidden) {\n      this.refs.messageId.focus();\n    }\n  },\n  loadMessage(event) {\n    const messageId = this.refs.messageId.value;\n    const index = this.refs.index.value;\n    if (messageId === '' || index === '') {\n      return;\n    }\n    this.setState({ loading: true });\n    const promise = MessagesActions.loadMessage.triggerPromise(index, messageId);\n    promise.then(data => this.props.onMessageLoaded(data));\n    promise.finally(() => this.setState({ loading: false }));\n\n    event.preventDefault();\n  },\n  submit(messageId, index) {\n    this.refs.messageId.value = messageId;\n    this.refs.index.value = index;\n    this.refs.submitButton.click();\n  },\n  render() {\n    let explanatoryText;\n    if (!this.props.hideText) {\n      explanatoryText = (\n        <p>\n          Wrong example? You can{' '}\n          <button className=\"btn btn-link btn-small btn-text\" onClick={this.toggleMessageForm}>load another message</button>.\n        </p>\n      );\n    }\n    const loadMessageForm = (\n      <div>\n        <form className=\"form-inline message-loader-form\" onSubmit={this.loadMessage}>\n          <input type=\"text\" ref=\"messageId\" className=\"form-control message-id-input\" placeholder=\"Message ID\" required />\n          <input type=\"text\" ref=\"index\" className=\"form-control\" placeholder=\"Index\" required />\n          <button ref=\"submitButton\" type=\"submit\" className=\"btn btn-info\" disabled={this.state.loading}>\n            {this.state.loading ? 'Loading message...' : 'Load message'}\n          </button>\n        </form>\n      </div>\n    );\n    return (\n      <div className=\"message-loader\">\n        {explanatoryText}\n        {this.state.hidden ? null : loadMessageForm}\n      </div>\n    );\n  },\n});\n\nexport default MessageLoader;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/extractors/MessageLoader.jsx"],"sourceRoot":""}