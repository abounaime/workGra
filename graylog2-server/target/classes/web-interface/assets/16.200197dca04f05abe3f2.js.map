{"version":3,"sources":["webpack:///16.200197dca04f05abe3f2.js","webpack:///./src/components/indexers/IndexerClusterHealth.jsx?1a52","webpack:///./src/components/indexers/IndexerClusterHealthSummary.jsx?94b2","webpack:///./src/components/indexers/IndexerFailure.jsx?e370","webpack:///./src/components/indexers/IndexerFailuresComponent.jsx?36c8","webpack:///./src/components/indexers/IndexerFailuresList.jsx?9511","webpack:///./src/components/systemjobs/index.jsx","webpack:///./src/components/systemmessages/index.jsx","webpack:///./src/components/notifications/Notification.jsx","webpack:///./src/components/cluster/GraylogClusterOverview.jsx","webpack:///./src/components/cluster/index.js","webpack:///./src/components/notifications/NotificationsList.jsx","webpack:///./src/components/notifications/index.jsx","webpack:///./src/components/systemjobs/SystemJob.jsx","webpack:///./src/components/systemjobs/SystemJobsComponent.jsx","webpack:///./src/components/systemjobs/SystemJobsList.jsx","webpack:///./src/components/systemmessages/SystemMessage.jsx","webpack:///./src/components/systemmessages/SystemMessagesComponent.jsx","webpack:///./src/components/systemmessages/SystemMessagesList.jsx","webpack:///./src/components/times/TimesList.jsx","webpack:///./src/components/times/index.jsx","webpack:///./src/components/usagestats/UsageStatsOptIn.jsx","webpack:///./src/logic/notifications/NotificationsFactory.js","webpack:///./src/pages/SystemOverviewPage.jsx","webpack:///./src/components/indexers/index.jsx?fb3f"],"names":["webpackJsonp","1056","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reflux","_reflux2","_reactBootstrap","_StoreProvider","_StoreProvider2","_common","_support","_DocsHelper","_DocsHelper2","_indexers","IndexerClusterStore","getStore","IndexerClusterHealth","createClass","displayName","mixins","connect","componentDidMount","update","render","health","this","state","content","createElement","IndexerClusterHealthSummary","Spinner","Row","className","Col","md","SmallSupportLink","DocumentationLink","page","PAGES","CONFIGURING_ES","text","1057","propTypes","PropTypes","object","isRequired","_alertClassForHealth","status","_formatTextForHealth","_iconNameForHealth","props","Alert","bsStyle","shards","active","initializing","relocating","unassigned","CLUSTER_STATUS_EXPLAINED","1058","IndexerFailure","failure","title","timestamp","Timestamp","dateTime","relative","index","letter_id","message","1059","_reactRouterBootstrap","_numeral","_numeral2","_moment","_moment2","_Routes","_Routes2","IndexerFailuresStore","IndexerFailuresComponent","getInitialState","_this","since","subtract","count","then","response","setState","total","_formatFailuresSummary","_iconForFailureCount","_formatTextForFailureCount","LinkContainer","to","SYSTEM","INDICES","FAILURES","Button","bsSize","format","undefined","INDEXER_FAILURES","1060","IndexerFailuresList","failures","arrayOf","length","Table","striped","hover","condensed","style","width","map","key","1176","_SystemJob","enumerable","get","_SystemJobsComponent","_SystemJobsList","1177","_SystemMessage","_SystemMessagesComponent","_SystemMessagesList","1197","_NotificationsFactory","_NotificationsFactory2","_ActionsProvider","_ActionsProvider2","NotificationsActions","getActions","Notification","notification","_onClose","window","confirm","delete","type","notificationView","getForNotification","onClick","description","1224","NodesStore","GraylogClusterOverview","_isLoading","nodes","marginBottom","clusterId","nodeCount","1225","_GraylogClusterOverview","1267","_Notification","_Notification2","NotificationsStore","NotificationsList","_formatNotificationCount","notifications","1268","_NotificationsList","1312","SystemJobsActions","SystemJob","_onCancel","job","e","preventDefault","info","cancelJob","id","progress","percent_complete","ProgressBar","now","cancel","is_cancelable","lineHeight","data-toggle","name","LinkToNode","nodeId","node_id","started_at","1313","_systemjobs","SystemJobsStore","SystemJobsComponent","list","interval","setInterval","componentWillUnmount","clearInterval","jobs","keys","reduce","a","b","concat","SystemJobsList","1314","_formatSystemJob","1315","SystemMessage","1316","_systemmessages","SystemMessagesStore","SystemMessagesComponent","currentPage","loadMessages","PER_PAGE","_this2","all","_onSelected","selectedPage","messages","numberPages","Math","ceil","SystemMessagesList","textAlign","Pagination","items","activePage","onSelect","prev","next","first","last","maxButtons","min","1317","random","toString","substring","1319","_DateTime","_DateTime2","CurrentUserStore","SystemStore","TimesList","time","system","timeFormat","Formats","DATETIME_TZ","currentUser","serverTimezone","timezone","username","tz","1320","_TimesList","1321","UsageStatsOptOutStore","UsageStatsOptIn","optOutStateLoaded","optOutState","pluginEnabled","done","isEnabled","getOptOutState","_handleClickEnable","setOptIn","opt_out","_handleClickDisable","setOptOut","form","1356","_classCallCheck","instance","Constructor","TypeError","_createClass","defineProperties","target","i","descriptor","configurable","writable","protoProps","staticProps","prototype","_reactRouter","_DocumentationLink","_DocumentationLink2","NotificationsFactory","details","exception","ES_CLUSTER_STATUS_RED","max_file_descriptors","hostname","ES_OPEN_FILE_LIMITS","ES_CLUSTER_UNAVAILABLE","gc_duration_ms","gc_threshold_ms","index_sets","input_id","reason","Link","INPUTS","current_version","href","outputId","streamTitle","streamId","faultPenaltySeconds","faultCount","faultCountThreshold","stream_id","fault_count","STREAM_PROCESSING_RUNTIME_LIMITS","1413","_notifications","_times","_UsageStatsOptIn","_UsageStatsOptIn2","_cluster","SystemOverviewPage","DocumentTitle","IfPermitted","permissions","968","_IndexerClusterHealth","_IndexerClusterHealthSummary","_IndexerFailure","_IndexerFailuresComponent","_IndexerFailuresList"],"mappings":"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","file":"16.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([16],{\n\n/***/ 1056:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _support = __webpack_require__(960);\n\nvar _DocsHelper = __webpack_require__(952);\n\nvar _DocsHelper2 = _interopRequireDefault(_DocsHelper);\n\nvar _indexers = __webpack_require__(968);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IndexerClusterStore = _StoreProvider2.default.getStore('IndexerCluster');\n\nvar IndexerClusterHealth = _react2.default.createClass({\n  displayName: 'IndexerClusterHealth',\n\n  mixins: [_reflux2.default.connect(IndexerClusterStore)],\n\n  componentDidMount: function componentDidMount() {\n    IndexerClusterStore.update();\n  },\n  render: function render() {\n    var health = this.state.health;\n\n    var content = void 0;\n    if (health) {\n      content = _react2.default.createElement(_indexers.IndexerClusterHealthSummary, { health: health });\n    } else {\n      content = _react2.default.createElement(_common.Spinner, null);\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'Elasticsearch cluster'\n        ),\n        _react2.default.createElement(\n          _support.SmallSupportLink,\n          null,\n          'The possible Elasticsearch cluster states and more related information is available in the',\n          ' ',\n          _react2.default.createElement(_support.DocumentationLink, { page: _DocsHelper2.default.PAGES.CONFIGURING_ES, text: 'Graylog documentation' }),\n          '.'\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = IndexerClusterHealth;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1057:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _support = __webpack_require__(960);\n\nvar _DocsHelper = __webpack_require__(952);\n\nvar _DocsHelper2 = _interopRequireDefault(_DocsHelper);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IndexerClusterHealthSummary = _react2.default.createClass({\n  displayName: 'IndexerClusterHealthSummary',\n\n  propTypes: {\n    health: _react2.default.PropTypes.object.isRequired\n  },\n  _alertClassForHealth: function _alertClassForHealth(health) {\n    switch (health.status) {\n      case 'green':\n        return 'success';\n      case 'yellow':\n        return 'warning';\n      case 'red':\n        return 'danger';\n      default:\n        return 'success';\n    }\n  },\n  _formatTextForHealth: function _formatTextForHealth(health) {\n    var text = 'Elasticsearch cluster is ' + health.status + '.';\n    switch (health.status) {\n      case 'green':\n        return text;\n      case 'yellow':\n      case 'red':\n        return _react2.default.createElement(\n          'strong',\n          null,\n          text\n        );\n      default:\n        return text;\n    }\n  },\n  _iconNameForHealth: function _iconNameForHealth(health) {\n    switch (health.status) {\n      case 'green':\n        return 'check-circle';\n      case 'yellow':\n        return 'warning';\n      case 'red':\n        return 'ambulance';\n      default:\n        return 'check-circle';\n    }\n  },\n  render: function render() {\n    var health = this.props.health;\n\n    return _react2.default.createElement(\n      _reactBootstrap.Alert,\n      { bsStyle: this._alertClassForHealth(health), className: 'es-cluster-status' },\n      _react2.default.createElement('i', { className: 'fa fa-' + this._iconNameForHealth(health) }),\n      ' \\xA0',\n      this._formatTextForHealth(health),\n      ' ',\n      'Shards:',\n      ' ',\n      health.shards.active,\n      ' active,',\n      ' ',\n      health.shards.initializing,\n      ' initializing,',\n      ' ',\n      health.shards.relocating,\n      ' relocating,',\n      ' ',\n      health.shards.unassigned,\n      ' unassigned,',\n      ' ',\n      _react2.default.createElement(_support.DocumentationLink, { page: _DocsHelper2.default.PAGES.CLUSTER_STATUS_EXPLAINED, text: 'What does this mean?' })\n    );\n  }\n});\n\nexports.default = IndexerClusterHealthSummary;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1058:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IndexerFailure = _react2.default.createClass({\n  displayName: 'IndexerFailure',\n\n  propTypes: {\n    failure: _react2.default.PropTypes.object.isRequired\n  },\n  render: function render() {\n    var failure = this.props.failure;\n    return _react2.default.createElement(\n      'tr',\n      null,\n      _react2.default.createElement(\n        'td',\n        { title: failure.timestamp },\n        _react2.default.createElement(_common.Timestamp, { dateTime: failure.timestamp, relative: true })\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        failure.index\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        failure.letter_id\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        failure.message\n      )\n    );\n  }\n});\n\nexports.default = IndexerFailure;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1059:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _numeral = __webpack_require__(115);\n\nvar _numeral2 = _interopRequireDefault(_numeral);\n\nvar _moment = __webpack_require__(34);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _DocsHelper = __webpack_require__(952);\n\nvar _DocsHelper2 = _interopRequireDefault(_DocsHelper);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _common = __webpack_require__(48);\n\nvar _support = __webpack_require__(960);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IndexerFailuresStore = _StoreProvider2.default.getStore('IndexerFailures');\n\nvar IndexerFailuresComponent = _react2.default.createClass({\n  displayName: 'IndexerFailuresComponent',\n  getInitialState: function getInitialState() {\n    return {};\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    var since = (0, _moment2.default)().subtract(24, 'hours');\n\n    IndexerFailuresStore.count(since).then(function (response) {\n      _this.setState({ total: response.count });\n    });\n  },\n  _formatFailuresSummary: function _formatFailuresSummary() {\n    return _react2.default.createElement(\n      _reactBootstrap.Alert,\n      { bsStyle: this.state.total === 0 ? 'success' : 'danger' },\n      _react2.default.createElement('i', { className: 'fa fa-' + this._iconForFailureCount(this.state.total) }),\n      ' ',\n      this._formatTextForFailureCount(this.state.total),\n      _react2.default.createElement(\n        _reactRouterBootstrap.LinkContainer,\n        { to: _Routes2.default.SYSTEM.INDICES.FAILURES },\n        _react2.default.createElement(\n          _reactBootstrap.Button,\n          { bsStyle: 'info', bsSize: 'xs', className: 'pull-right' },\n          'Show errors'\n        )\n      )\n    );\n  },\n  _formatTextForFailureCount: function _formatTextForFailureCount(count) {\n    if (count === 0) {\n      return 'No failed indexing attempts in the last 24 hours.';\n    }\n    return _react2.default.createElement(\n      'strong',\n      null,\n      'There were ',\n      (0, _numeral2.default)(count).format('0,0'),\n      ' failed indexing attempts in the last 24 hours.'\n    );\n  },\n  _iconForFailureCount: function _iconForFailureCount(count) {\n    if (count === 0) {\n      return 'check-circle';\n    }\n    return 'ambulance';\n  },\n  render: function render() {\n    var content = void 0;\n    if (this.state.total === undefined) {\n      content = _react2.default.createElement(_common.Spinner, null);\n    } else {\n      content = this._formatFailuresSummary();\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'Indexer failures'\n        ),\n        _react2.default.createElement(\n          _support.SmallSupportLink,\n          null,\n          'Every message that was not successfully indexed will be logged as an indexer failure. You can learn more about this feature in the',\n          ' ',\n          _react2.default.createElement(_support.DocumentationLink, { page: _DocsHelper2.default.PAGES.INDEXER_FAILURES, text: 'Graylog documentation' }),\n          '.'\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = IndexerFailuresComponent;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1060:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _indexers = __webpack_require__(968);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar IndexerFailuresList = _react2.default.createClass({\n  displayName: 'IndexerFailuresList',\n\n  propTypes: {\n    failures: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object).isRequired\n  },\n  render: function render() {\n    if (this.props.failures.length === 0) {\n      return _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'success' },\n        _react2.default.createElement('i', { className: 'fa fa-check-circle' }),\n        ' Hurray! There are not any indexer failures.'\n      );\n    }\n\n    return _react2.default.createElement(\n      'div',\n      { className: 'scrollable-table' },\n      _react2.default.createElement(\n        _reactBootstrap.Table,\n        { className: 'indexer-failures', striped: true, hover: true, condensed: true },\n        _react2.default.createElement(\n          'thead',\n          null,\n          _react2.default.createElement(\n            'tr',\n            null,\n            _react2.default.createElement(\n              'th',\n              { style: { width: 200 } },\n              'Timestamp'\n            ),\n            _react2.default.createElement(\n              'th',\n              null,\n              'Index'\n            ),\n            _react2.default.createElement(\n              'th',\n              null,\n              'Letter ID'\n            ),\n            _react2.default.createElement(\n              'th',\n              null,\n              'Error message'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          'tbody',\n          null,\n          this.props.failures.map(function (failure) {\n            return _react2.default.createElement(_indexers.IndexerFailure, { key: 'indexer-failure-' + failure.letter_id, failure: failure });\n          })\n        )\n      )\n    );\n  }\n});\n\nexports.default = IndexerFailuresList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1176:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SystemJob = __webpack_require__(1312);\n\nObject.defineProperty(exports, 'SystemJob', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemJob).default;\n  }\n});\n\nvar _SystemJobsComponent = __webpack_require__(1313);\n\nObject.defineProperty(exports, 'SystemJobsComponent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemJobsComponent).default;\n  }\n});\n\nvar _SystemJobsList = __webpack_require__(1314);\n\nObject.defineProperty(exports, 'SystemJobsList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemJobsList).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1177:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _SystemMessage = __webpack_require__(1315);\n\nObject.defineProperty(exports, 'SystemMessage', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemMessage).default;\n  }\n});\n\nvar _SystemMessagesComponent = __webpack_require__(1316);\n\nObject.defineProperty(exports, 'SystemMessagesComponent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemMessagesComponent).default;\n  }\n});\n\nvar _SystemMessagesList = __webpack_require__(1317);\n\nObject.defineProperty(exports, 'SystemMessagesList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_SystemMessagesList).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1197:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _common = __webpack_require__(48);\n\nvar _NotificationsFactory = __webpack_require__(1356);\n\nvar _NotificationsFactory2 = _interopRequireDefault(_NotificationsFactory);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NotificationsActions = _ActionsProvider2.default.getActions('Notifications');\n\nvar Notification = _react2.default.createClass({\n  displayName: 'Notification',\n\n  propTypes: {\n    notification: _react2.default.PropTypes.object.isRequired\n  },\n  _onClose: function _onClose() {\n    if (window.confirm('Really delete this notification?')) {\n      NotificationsActions.delete(this.props.notification.type);\n    }\n  },\n  render: function render() {\n    var notification = this.props.notification;\n    var notificationView = _NotificationsFactory2.default.getForNotification(notification);\n    return _react2.default.createElement(\n      _reactBootstrap.Alert,\n      { bsStyle: 'danger', className: 'notification' },\n      _react2.default.createElement(\n        _reactBootstrap.Button,\n        { className: 'close delete-notification', onClick: this._onClose },\n        '\\xD7'\n      ),\n      _react2.default.createElement(\n        'h3',\n        { className: 'notification-head' },\n        _react2.default.createElement('i', { className: 'fa fa-bolt' }),\n        ' ',\n        notificationView.title,\n        ' ',\n        _react2.default.createElement(\n          'span',\n          { className: 'notification-timestamp' },\n          '(triggered ',\n          _react2.default.createElement(_common.Timestamp, { dateTime: notification.timestamp, relative: true }),\n          ')'\n        )\n      ),\n      _react2.default.createElement(\n        'div',\n        { className: 'notification-description' },\n        notificationView.description\n      )\n    );\n  }\n});\n\nexports.default = Notification;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1224:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _common = __webpack_require__(48);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NodesStore = _StoreProvider2.default.getStore('Nodes');\n\nvar GraylogClusterOverview = _react2.default.createClass({\n  displayName: 'GraylogClusterOverview',\n\n  mixins: [_reflux2.default.connect(NodesStore)],\n\n  _isLoading: function _isLoading() {\n    return !this.state.nodes;\n  },\n  render: function render() {\n    var content = _react2.default.createElement(_common.Spinner, null);\n\n    if (!this._isLoading()) {\n      content = _react2.default.createElement(\n        'dl',\n        { className: 'system-dl', style: { marginBottom: 0 } },\n        _react2.default.createElement(\n          'dt',\n          null,\n          'Cluster ID:'\n        ),\n        _react2.default.createElement(\n          'dd',\n          null,\n          this.state.clusterId || 'Not available'\n        ),\n        _react2.default.createElement(\n          'dt',\n          null,\n          'Number of nodes:'\n        ),\n        _react2.default.createElement(\n          'dd',\n          null,\n          this.state.nodeCount\n        )\n      );\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          { style: { marginBottom: 10 } },\n          'Graylog cluster'\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = GraylogClusterOverview;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1225:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _GraylogClusterOverview = __webpack_require__(1224);\n\nObject.defineProperty(exports, 'GraylogClusterOverview', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_GraylogClusterOverview).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1267:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _Notification = __webpack_require__(1197);\n\nvar _Notification2 = _interopRequireDefault(_Notification);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar NotificationsStore = _StoreProvider2.default.getStore('Notifications');\n\nvar NotificationsList = _react2.default.createClass({\n  displayName: 'NotificationsList',\n\n  mixins: [_reflux2.default.connect(NotificationsStore)],\n  _formatNotificationCount: function _formatNotificationCount(count) {\n    if (count === 0) {\n      return 'is no notification';\n    }\n    if (count === 1) {\n      return 'is one notification';\n    }\n\n    return 'are ' + count + ' notifications';\n  },\n  render: function render() {\n    if (!this.state.notifications) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var count = this.state.total;\n\n    var title = void 0;\n    var content = void 0;\n\n    if (count === 0) {\n      title = 'No notifications';\n      content = _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'success', className: 'notifications-none' },\n        _react2.default.createElement('i', { className: 'fa fa-check-circle' }),\n        ' ',\n        '\\xA0No notifications'\n      );\n    } else {\n      title = 'There ' + this._formatNotificationCount(count);\n      content = this.state.notifications.map(function (notification) {\n        return _react2.default.createElement(_Notification2.default, { key: notification.type + '-' + notification.timestamp, notification: notification });\n      });\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          title\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'description' },\n          'Notifications are triggered by Graylog and indicate a situation you should act upon. Many notification types will also provide a link to the Graylog documentation if you need more information or assistance.'\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = NotificationsList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1268:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _Notification = __webpack_require__(1197);\n\nObject.defineProperty(exports, 'Notification', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_Notification).default;\n  }\n});\n\nvar _NotificationsList = __webpack_require__(1267);\n\nObject.defineProperty(exports, 'NotificationsList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_NotificationsList).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1312:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _common = __webpack_require__(48);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemJobsActions = _ActionsProvider2.default.getActions('SystemJobs');\n\nvar SystemJob = _react2.default.createClass({\n  displayName: 'SystemJob',\n  _onCancel: function _onCancel(job) {\n    return function (e) {\n      e.preventDefault();\n      if (window.confirm('Are you sure you want to cancel system job \"' + job.info + '\"?')) {\n        SystemJobsActions.cancelJob(job.id);\n      }\n    };\n  },\n  render: function render() {\n    var job = this.props.job;\n    var progress = job.percent_complete < 100 ? _react2.default.createElement(_reactBootstrap.ProgressBar, { bsStyle: 'info', active: true, now: job.percent_complete }) : _react2.default.createElement(\n      'span',\n      { className: 'label label-success finished' },\n      'Finished!'\n    );\n    var cancel = job.is_cancelable ? _react2.default.createElement(\n      'button',\n      { type: 'button', className: 'btn btn-primary btn-xs pull-right', onClick: this._onCancel(job) },\n      'Cancel Job'\n    ) : null;\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'div',\n        { style: { lineHeight: 1.5, marginBottom: 5 } },\n        _react2.default.createElement('i', { className: 'fa fa-cog' }),\n        ' ',\n        _react2.default.createElement(\n          'span',\n          { 'data-toggle': 'tooltip', title: job.name },\n          job.info\n        ),\n        ' ',\n        '- Started on ',\n        _react2.default.createElement(_common.LinkToNode, { nodeId: job.node_id }),\n        ' ',\n        _react2.default.createElement(_common.Timestamp, { dateTime: job.started_at, relative: true }),\n        ' ',\n        cancel\n      ),\n      progress\n    );\n  }\n});\n\nexports.default = SystemJob;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1313:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _systemjobs = __webpack_require__(1176);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemJobsStore = _StoreProvider2.default.getStore('SystemJobs');\n\nvar SystemJobsActions = _ActionsProvider2.default.getActions('SystemJobs');\n\nvar SystemJobsComponent = _react2.default.createClass({\n  displayName: 'SystemJobsComponent',\n\n  mixins: [_reflux2.default.connect(SystemJobsStore)],\n  componentDidMount: function componentDidMount() {\n    SystemJobsActions.list();\n\n    this.interval = setInterval(SystemJobsActions.list, 2000);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  render: function render() {\n    var _this = this;\n\n    if (!this.state.jobs) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n    var jobs = Object.keys(this.state.jobs).map(function (nodeId) {\n      return _this.state.jobs[nodeId] ? _this.state.jobs[nodeId].jobs : [];\n    }).reduce(function (a, b) {\n      return a.concat(b);\n    });\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'System jobs'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'description' },\n          'A system job is a long-running task a graylog-server node executes for maintenance reasons. Some jobs provide progress information or can be stopped.'\n        ),\n        _react2.default.createElement(_systemjobs.SystemJobsList, { jobs: jobs })\n      )\n    );\n  }\n});\n\nexports.default = SystemJobsComponent;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1314:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _systemjobs = __webpack_require__(1176);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemJobsList = _react2.default.createClass({\n  displayName: 'SystemJobsList',\n\n  propTypes: {\n    jobs: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object).isRequired\n  },\n  _formatSystemJob: function _formatSystemJob(job) {\n    return _react2.default.createElement(\n      'div',\n      { className: 'systemjob systemjob-progress systemjob-active', key: 'job-' + job.id },\n      _react2.default.createElement(_systemjobs.SystemJob, { job: job })\n    );\n  },\n  render: function render() {\n    var jobs = this.props.jobs.map(this._formatSystemJob);\n    if (jobs.length === 0) {\n      return _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'info', className: 'systemjobs-none' },\n        _react2.default.createElement('i', { className: 'fa fa-info-circle' }),\n        ' ',\n        '\\xA0No active system jobs.'\n      );\n    }\n    return _react2.default.createElement(\n      'span',\n      null,\n      jobs\n    );\n  }\n});\n\nexports.default = SystemJobsList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1315:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _moment = __webpack_require__(34);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemMessage = _react2.default.createClass({\n  displayName: 'SystemMessage',\n\n  propTypes: {\n    message: _react2.default.PropTypes.object.isRequired\n  },\n  render: function render() {\n    var message = this.props.message;\n    return _react2.default.createElement(\n      'tr',\n      null,\n      _react2.default.createElement(\n        'td',\n        null,\n        (0, _moment2.default)(message.timestamp).format()\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        _react2.default.createElement(_common.LinkToNode, { nodeId: message.node_id })\n      ),\n      _react2.default.createElement(\n        'td',\n        null,\n        message.content\n      )\n    );\n  }\n});\n\nexports.default = SystemMessage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1316:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _systemmessages = __webpack_require__(1177);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemMessagesStore = _StoreProvider2.default.getStore('SystemMessages');\n\nvar SystemMessagesComponent = _react2.default.createClass({\n  displayName: 'SystemMessagesComponent',\n  getInitialState: function getInitialState() {\n    return { currentPage: 1 };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    this.loadMessages(this.state.currentPage);\n    this.interval = setInterval(function () {\n      _this.loadMessages(_this.state.currentPage);\n    }, 1000);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n\n  PER_PAGE: 30,\n  loadMessages: function loadMessages(page) {\n    var _this2 = this;\n\n    SystemMessagesStore.all(page).then(function (response) {\n      _this2.setState(response);\n    });\n  },\n  _onSelected: function _onSelected(selectedPage) {\n    this.setState({ currentPage: selectedPage });\n    this.loadMessages(selectedPage);\n  },\n  render: function render() {\n    var content = void 0;\n    if (this.state.total && this.state.messages) {\n      var numberPages = Math.ceil(this.state.total / this.PER_PAGE);\n      var paginatorSize = 10;\n\n      content = _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(_systemmessages.SystemMessagesList, { messages: this.state.messages }),\n        _react2.default.createElement(\n          'nav',\n          { style: { textAlign: 'center' } },\n          _react2.default.createElement(_reactBootstrap.Pagination, { bsSize: 'small', items: numberPages,\n            activePage: this.state.currentPage,\n            onSelect: this._onSelected,\n            prev: true, next: true, first: true, last: true,\n            maxButtons: Math.min(paginatorSize, numberPages) })\n        )\n      );\n    } else {\n      content = _react2.default.createElement(_common.Spinner, null);\n    }\n\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'System messages'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'description' },\n          'System messages are generated by graylog-server nodes on certain events that may be interesting for the Graylog administrators. You don\\'t need to actively act upon any message in here because notifications will be raised for any events that required action.'\n        ),\n        content\n      )\n    );\n  }\n});\n\nexports.default = SystemMessagesComponent;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1317:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _systemmessages = __webpack_require__(1177);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemMessagesList = _react2.default.createClass({\n  displayName: 'SystemMessagesList',\n\n  propTypes: {\n    messages: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.object).isRequired\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      _reactBootstrap.Table,\n      { className: 'system-messages', striped: true, hover: true, condensed: true },\n      _react2.default.createElement(\n        'thead',\n        null,\n        _react2.default.createElement(\n          'tr',\n          null,\n          _react2.default.createElement(\n            'th',\n            { style: { width: '200px' } },\n            'Timestamp'\n          ),\n          _react2.default.createElement(\n            'th',\n            null,\n            'Node'\n          ),\n          _react2.default.createElement(\n            'th',\n            null,\n            'Message'\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'tbody',\n        null,\n        this.props.messages.map(function (message) {\n          return _react2.default.createElement(_systemmessages.SystemMessage, { key: 'message-' + Math.random().toString(36).substring(7), message: message });\n        })\n      )\n    );\n  }\n});\n\nexports.default = SystemMessagesList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1319:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _moment = __webpack_require__(34);\n\nvar _moment2 = _interopRequireDefault(_moment);\n\nvar _DateTime = __webpack_require__(49);\n\nvar _DateTime2 = _interopRequireDefault(_DateTime);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CurrentUserStore = _StoreProvider2.default.getStore('CurrentUser');\nvar SystemStore = _StoreProvider2.default.getStore('System');\n\nvar TimesList = _react2.default.createClass({\n  displayName: 'TimesList',\n\n  mixins: [_reflux2.default.connect(CurrentUserStore), _reflux2.default.connect(SystemStore)],\n  getInitialState: function getInitialState() {\n    return { time: (0, _moment2.default)() };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    this.interval = setInterval(function () {\n      return _this.setState(_this.getInitialState());\n    }, 1000);\n  },\n  componentWillUnmount: function componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  render: function render() {\n    if (!this.state.system) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n    var time = this.state.time;\n    var timeFormat = _DateTime2.default.Formats.DATETIME_TZ;\n    var currentUser = this.state.currentUser;\n    var serverTimezone = this.state.system.timezone;\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'Time configuration'\n        ),\n        _react2.default.createElement(\n          'p',\n          { className: 'description' },\n          'Dealing with timezones can be confusing. Here you can see the timezone applied to different components of your system. You can check timezone settings of specific graylog-server nodes on their respective detail page.'\n        ),\n        _react2.default.createElement(\n          'dl',\n          { className: 'system-dl' },\n          _react2.default.createElement(\n            'dt',\n            null,\n            'User ',\n            _react2.default.createElement(\n              'em',\n              null,\n              currentUser.username\n            ),\n            ':'\n          ),\n          _react2.default.createElement(\n            'dd',\n            null,\n            _react2.default.createElement(_common.Timestamp, { dateTime: time, format: timeFormat })\n          ),\n          _react2.default.createElement(\n            'dt',\n            null,\n            'Your web browser:'\n          ),\n          _react2.default.createElement(\n            'dd',\n            null,\n            _react2.default.createElement(_common.Timestamp, { dateTime: time, format: timeFormat, tz: 'browser' })\n          ),\n          _react2.default.createElement(\n            'dt',\n            null,\n            'Graylog server:'\n          ),\n          _react2.default.createElement(\n            'dd',\n            null,\n            _react2.default.createElement(_common.Timestamp, { dateTime: time, format: timeFormat, tz: serverTimezone })\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = TimesList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1320:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _TimesList = __webpack_require__(1319);\n\nObject.defineProperty(exports, 'TimesList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_TimesList).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 1321:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UsageStatsOptOutStore = _StoreProvider2.default.getStore('UsageStatsOptOut');\n\nvar UsageStatsOptIn = _react2.default.createClass({\n  displayName: 'UsageStatsOptIn',\n  getInitialState: function getInitialState() {\n    return {\n      optOutStateLoaded: false,\n      optOutState: null,\n      pluginEnabled: false\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    UsageStatsOptOutStore.pluginEnabled().done(function (isEnabled) {\n      _this.setState({ pluginEnabled: isEnabled });\n    });\n\n    UsageStatsOptOutStore.getOptOutState().done(function (optOutState) {\n      _this.setState({ optOutStateLoaded: true, optOutState: optOutState });\n    });\n  },\n  _handleClickEnable: function _handleClickEnable() {\n    UsageStatsOptOutStore.setOptIn(false);\n    this.setState({ optOutState: { opt_out: false } });\n  },\n  _handleClickDisable: function _handleClickDisable() {\n    UsageStatsOptOutStore.setOptOut(false);\n    this.setState({ optOutState: { opt_out: true } });\n  },\n  render: function render() {\n    var content = null;\n\n    if (this.state.optOutStateLoaded && this.state.pluginEnabled === true) {\n      var form = null;\n\n      if (this.state.optOutState !== null && this.state.optOutState.opt_out === true) {\n        form = _react2.default.createElement(\n          'span',\n          null,\n          _react2.default.createElement('i', { className: 'fa fa-info-circle' }),\n          '\\xA0 You have currently ',\n          _react2.default.createElement(\n            'strong',\n            null,\n            'disabled'\n          ),\n          ' sending usage statistics to Graylog. Please consider turning it back on to provide anonymous statistics that will help us make Graylog better for you.',\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { bsSize: 'xsmall', bsStyle: 'success', className: 'pull-right', onClick: this._handleClickEnable },\n            'Enable'\n          )\n        );\n      } else {\n        form = _react2.default.createElement(\n          'span',\n          null,\n          _react2.default.createElement('i', { className: 'fa fa-info-circle' }),\n          '\\xA0 You have currently ',\n          _react2.default.createElement(\n            'strong',\n            null,\n            'enabled'\n          ),\n          ' sending anonymous usage statistics to Graylog. Thank you! User statistics help us make Graylog better. If you\\'ve changed your mind, click \"Disable\".',\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { bsSize: 'xsmall', bsStyle: 'info', className: 'pull-right', onClick: this._handleClickDisable },\n            'Disable'\n          )\n        );\n      }\n\n      content = _react2.default.createElement(\n        _reactBootstrap.Row,\n        { className: 'content' },\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 12 },\n          _react2.default.createElement(\n            'h2',\n            null,\n            'Anonymous usage statistics'\n          ),\n          _react2.default.createElement(\n            _reactBootstrap.Alert,\n            { bsStyle: 'info' },\n            form\n          )\n        )\n      );\n    }\n\n    return content;\n  }\n});\n\nexports.default = UsageStatsOptIn;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1356:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _createClass = function () { function defineProperties(target, props) { for (var i = 0; i < props.length; i++) { var descriptor = props[i]; descriptor.enumerable = descriptor.enumerable || false; descriptor.configurable = true; if (\"value\" in descriptor) descriptor.writable = true; Object.defineProperty(target, descriptor.key, descriptor); } } return function (Constructor, protoProps, staticProps) { if (protoProps) defineProperties(Constructor.prototype, protoProps); if (staticProps) defineProperties(Constructor, staticProps); return Constructor; }; }();\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactRouter = __webpack_require__(273);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _DocsHelper = __webpack_require__(952);\n\nvar _DocsHelper2 = _interopRequireDefault(_DocsHelper);\n\nvar _DocumentationLink = __webpack_require__(957);\n\nvar _DocumentationLink2 = _interopRequireDefault(_DocumentationLink);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nfunction _classCallCheck(instance, Constructor) { if (!(instance instanceof Constructor)) { throw new TypeError(\"Cannot call a class as a function\"); } }\n\nvar NotificationsFactory = function () {\n  function NotificationsFactory() {\n    _classCallCheck(this, NotificationsFactory);\n  }\n\n  _createClass(NotificationsFactory, null, [{\n    key: 'getForNotification',\n    value: function getForNotification(notification) {\n      switch (notification.type) {\n        case 'check_server_clocks':\n          return {\n            title: 'Check the system clocks of your Graylog server nodes.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'A Graylog server node detected a condition where it was deemed to be inactive immediately after being active. This usually indicates either a significant jump in system time, e.g. via NTP, or that a second Graylog server node is active on a system that has a different system time. Please make sure that the clocks of graylog2 systems are synchronized.'\n            )\n          };\n        case 'deflector_exists_as_index':\n          return {\n            title: 'Deflector exists as an index and is not an alias.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The deflector is meant to be an alias but exists as an index. Multiple failures of infrastructure can lead to this. Your messages are still indexed but searches and all maintenance tasks will fail or produce incorrect results. It is strongly recommend that you act as soon as possible.'\n            )\n          };\n        case 'email_transport_configuration_invalid':\n          return {\n            title: 'Email Transport Configuration is missing or invalid!',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The configuration for the email transport subsystem has shown to be missing or invalid. Please check the related section of your Graylog server configuration file. This is the detailed error message: ',\n              notification.details.exception\n            )\n          };\n        case 'email_transport_failed':\n          return {\n            title: 'An error occurred while trying to send an email!',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The Graylog server encountered an error while trying to send an email. This is the detailed error message: ',\n              notification.details.exception\n            )\n          };\n        case 'es_cluster_red':\n          return {\n            title: 'Elasticsearch cluster unhealthy (RED)',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The Elasticsearch cluster state is RED which means shards are unassigned. This usually indicates a crashed and corrupt cluster and needs to be investigated. Graylog will write into the local disk journal. Read how to fix this in ',\n              ' ',\n              _react2.default.createElement(_DocumentationLink2.default, { page: _DocsHelper2.default.PAGES.ES_CLUSTER_STATUS_RED, text: 'the Elasticsearch setup documentation.' })\n            )\n          };\n        case 'es_open_files':\n          return {\n            title: 'Elasticsearch nodes with too low open file limit',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'There are Elasticsearch nodes in the cluster that have a too low open file limit (current limit:',\n              ' ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.max_file_descriptors\n              ),\n              ' on ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.hostname\n              ),\n              '; should be at least 64000) This will be causing problems that can be hard to diagnose. Read how to raise the maximum number of open files in ',\n              ' ',\n              _react2.default.createElement(_DocumentationLink2.default, { page: _DocsHelper2.default.PAGES.ES_OPEN_FILE_LIMITS, text: 'the Elasticsearch setup documentation' }),\n              '.'\n            )\n          };\n        case 'es_unavailable':\n          return {\n            title: 'Elasticsearch cluster unavailable',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'Graylog could not successfully connect to the Elasticsearch cluster. If you\\'re using multicast, check that it is working in your network and that Elasticsearch is accessible. Also check that the cluster name setting is correct. Read how to fix this in ',\n              ' ',\n              _react2.default.createElement(_DocumentationLink2.default, { page: _DocsHelper2.default.PAGES.ES_CLUSTER_UNAVAILABLE,\n                text: 'the Elasticsearch setup documentation.' })\n            )\n          };\n        case 'gc_too_long':\n          return {\n            title: 'Nodes with too long GC pauses',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'There are Graylog nodes on which the garbage collector runs too long. Garbage collection runs should be as short as possible. Please check whether those nodes are healthy. (Node: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.node_id\n              ),\n              ', GC duration: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.gc_duration_ms,\n                ' ms'\n              ),\n              ', GC threshold: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.gc_threshold_ms,\n                ' ms'\n              ),\n              ')'\n            )\n          };\n        case 'generic':\n          return {\n            title: notification.details.title,\n            description: notification.details.description\n          };\n        case 'index_ranges_recalculation':\n          return {\n            title: 'Index ranges recalculation required',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The index ranges are out of sync. Please go to System/Indices and trigger a index range recalculation from the Maintenance menu of ',\n              notification.details.index_sets ? 'the following index sets: ' + notification.details.index_sets : 'all index sets'\n            )\n          };\n        case 'input_failed_to_start':\n          return {\n            title: 'An input has failed to start',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'Input ',\n              notification.details.input_id,\n              ' has failed to start on node ',\n              notification.node_id,\n              ' for this reason: \\xBB',\n              notification.details.reason,\n              '\\xAB. This means that you are unable to receive any messages from this input. This is mostly an indication for a misconfiguration or an error. You can click ',\n              ' ',\n              _react2.default.createElement(\n                _reactRouter.Link,\n                { to: _Routes2.default.SYSTEM.INPUTS },\n                'here'\n              ),\n              ' to solve this.'\n            )\n          };\n        case 'journal_uncommitted_messages_deleted':\n          return {\n            title: 'Uncommited messages deleted from journal',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'Some messages were deleted from the Graylog journal before they could be written to Elasticsearch. Please verify that your Elasticsearch cluster is healthy and fast enough. You may also want to review your Graylog journal settings and set a higher limit. (Node: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.node_id\n              ),\n              ')'\n            )\n          };\n        case 'journal_utilization_too_high':\n          return {\n            title: 'Journal utilization is too high',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'Journal utilization is too high and may go over the limit soon. Please verify that your Elasticsearch cluster is healthy and fast enough. You may also want to review your Graylog journal settings and set a higher limit. (Node: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.node_id\n              ),\n              ')'\n            )\n          };\n        case 'multi_master':\n          return {\n            title: 'Multiple Graylog server masters in the cluster',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'There were multiple Graylog server instances configured as master in your Graylog cluster. The cluster handles this automatically by launching new nodes as slaves if there already is a master but you should still fix this. Check the graylog.conf of every node and make sure that only one instance has is_master set to true. Close this notification if you think you resolved the problem. It will pop back up if you start a second master node again.'\n            )\n          };\n        case 'no_input_running':\n          return {\n            title: 'There is a node without any running inputs.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'There is a node without any running inputs. This means that you are not receiving any messages from this node at this point in time. This is most probably an indication of an error or misconfiguration. You can click ',\n              _react2.default.createElement(\n                _reactRouter.Link,\n                { to: _Routes2.default.SYSTEM.INPUTS },\n                'here'\n              ),\n              ' to solve this.'\n            )\n          };\n        case 'no_master':\n          return {\n            title: 'There was no master Graylog server node detected in the cluster.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'Certain operations of Graylog server require the presence of a master node, but no such master was started. Please ensure that one of your Graylog server nodes contains the setting ',\n              _react2.default.createElement(\n                'code',\n                null,\n                'is_master = true'\n              ),\n              ' in its configuration and that it is running. Until this is resolved index cycling will not be able to run, which means that the index retention mechanism is also not running, leading to increased index sizes. Certain maintenance functions as well as a variety of web interface pages (e.g. Dashboards) are unavailable.'\n            )\n          };\n        case 'outdated_version':\n          return {\n            title: 'You are running an outdated Graylog version.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The most recent stable Graylog version is ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.current_version\n              ),\n              '. Get it from ',\n              _react2.default.createElement(\n                'a',\n                { href: 'https://www.graylog.org/', target: '_blank' },\n                'https://www.graylog.org/'\n              ),\n              '.'\n            )\n          };\n        case 'output_disabled':\n          return {\n            title: 'Output disabled',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The output with the id ',\n              notification.details.outputId,\n              ' in stream \"',\n              notification.details.streamTitle,\n              '\" (id: ',\n              notification.details.streamId,\n              ') has been disabled for ',\n              notification.details.faultPenaltySeconds,\n              'seconds because there were ',\n              notification.details.faultCount,\n              ' failures. (Node: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.node_id\n              ),\n              ', Fault threshold: ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.faultCountThreshold\n              ),\n              ')'\n            )\n          };\n        case 'stream_processing_disabled':\n          return {\n            title: 'Processing of a stream has been disabled due to excessive processing time.',\n            description: _react2.default.createElement(\n              'span',\n              null,\n              'The processing of stream ',\n              _react2.default.createElement(\n                'em',\n                null,\n                notification.details.stream_id\n              ),\n              ' has taken too long for',\n              ' ',\n              notification.details.fault_count,\n              ' times. To protect the stability of message processing, this stream has been disabled. Please correct the stream rules and reenable the stream. Check ',\n              _react2.default.createElement(_DocumentationLink2.default, { page: _DocsHelper2.default.PAGES.STREAM_PROCESSING_RUNTIME_LIMITS, text: 'the documentation' }),\n              ' ',\n              'for more details.'\n            )\n          };\n        default:\n          return { title: 'unknown (' + notification.type + ')', description: 'unknown' };\n      }\n    }\n  }]);\n\n  return NotificationsFactory;\n}();\n\nexports.default = NotificationsFactory;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1413:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _common = __webpack_require__(48);\n\nvar _indexers = __webpack_require__(968);\n\nvar _notifications = __webpack_require__(1268);\n\nvar _systemjobs = __webpack_require__(1176);\n\nvar _systemmessages = __webpack_require__(1177);\n\nvar _times = __webpack_require__(1320);\n\nvar _UsageStatsOptIn = __webpack_require__(1321);\n\nvar _UsageStatsOptIn2 = _interopRequireDefault(_UsageStatsOptIn);\n\nvar _cluster = __webpack_require__(1225);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar SystemOverviewPage = _react2.default.createClass({\n  displayName: 'SystemOverviewPage',\n  render: function render() {\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'System overview' },\n      _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'notifications:read' },\n          _react2.default.createElement(_notifications.NotificationsList, null)\n        ),\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'systemjobs:read' },\n          _react2.default.createElement(_systemjobs.SystemJobsComponent, null)\n        ),\n        _react2.default.createElement(_cluster.GraylogClusterOverview, null),\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'indexercluster:read' },\n          _react2.default.createElement(_indexers.IndexerClusterHealth, null)\n        ),\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'indices:failures' },\n          _react2.default.createElement(_indexers.IndexerFailuresComponent, null)\n        ),\n        _react2.default.createElement(_times.TimesList, null),\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'clusterconfigentry:edit:org.graylog.plugins.usagestatistics.UsageStatsOptOutState' },\n          _react2.default.createElement(_UsageStatsOptIn2.default, null)\n        ),\n        _react2.default.createElement(\n          _common.IfPermitted,\n          { permissions: 'systemmessages:read' },\n          _react2.default.createElement(_systemmessages.SystemMessagesComponent, null)\n        )\n      )\n    );\n  }\n});\n\nexports.default = SystemOverviewPage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 968:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _IndexerClusterHealth = __webpack_require__(1056);\n\nObject.defineProperty(exports, 'IndexerClusterHealth', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IndexerClusterHealth).default;\n  }\n});\n\nvar _IndexerClusterHealthSummary = __webpack_require__(1057);\n\nObject.defineProperty(exports, 'IndexerClusterHealthSummary', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IndexerClusterHealthSummary).default;\n  }\n});\n\nvar _IndexerFailure = __webpack_require__(1058);\n\nObject.defineProperty(exports, 'IndexerFailure', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IndexerFailure).default;\n  }\n});\n\nvar _IndexerFailuresComponent = __webpack_require__(1059);\n\nObject.defineProperty(exports, 'IndexerFailuresComponent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IndexerFailuresComponent).default;\n  }\n});\n\nvar _IndexerFailuresList = __webpack_require__(1060);\n\nObject.defineProperty(exports, 'IndexerFailuresList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_IndexerFailuresList).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 16.200197dca04f05abe3f2.js","import React from 'react';\nimport Reflux from 'reflux';\nimport { Row, Col } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst IndexerClusterStore = StoreProvider.getStore('IndexerCluster');\n\nimport { Spinner } from 'components/common';\nimport { DocumentationLink, SmallSupportLink } from 'components/support';\nimport DocsHelper from 'util/DocsHelper';\nimport { IndexerClusterHealthSummary } from 'components/indexers';\n\nconst IndexerClusterHealth = React.createClass({\n  mixins: [Reflux.connect(IndexerClusterStore)],\n\n  componentDidMount() {\n    IndexerClusterStore.update();\n  },\n\n  render() {\n    const health = this.state.health;\n\n    let content;\n    if (health) {\n      content = <IndexerClusterHealthSummary health={health} />;\n    } else {\n      content = <Spinner />;\n    }\n\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>Elasticsearch cluster</h2>\n\n          <SmallSupportLink>\n            The possible Elasticsearch cluster states and more related information is available in the{' '}\n            <DocumentationLink page={DocsHelper.PAGES.CONFIGURING_ES} text=\"Graylog documentation\" />.\n          </SmallSupportLink>\n\n          {content}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default IndexerClusterHealth;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/IndexerClusterHealth.jsx","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport { DocumentationLink } from 'components/support';\nimport DocsHelper from 'util/DocsHelper';\n\nconst IndexerClusterHealthSummary = React.createClass({\n  propTypes: {\n    health: React.PropTypes.object.isRequired,\n  },\n  _alertClassForHealth(health) {\n    switch (health.status) {\n      case 'green': return 'success';\n      case 'yellow': return 'warning';\n      case 'red': return 'danger';\n      default: return 'success';\n    }\n  },\n  _formatTextForHealth(health) {\n    const text = `Elasticsearch cluster is ${health.status}.`;\n    switch (health.status) {\n      case 'green': return text;\n      case 'yellow':\n      case 'red': return <strong>{text}</strong>;\n      default: return text;\n    }\n  },\n  _iconNameForHealth(health) {\n    switch (health.status) {\n      case 'green': return 'check-circle';\n      case 'yellow': return 'warning';\n      case 'red': return 'ambulance';\n      default: return 'check-circle';\n    }\n  },\n  render() {\n    const { health } = this.props;\n    return (\n      <Alert bsStyle={this._alertClassForHealth(health)} className=\"es-cluster-status\">\n        <i className={`fa fa-${this._iconNameForHealth(health)}`} /> &nbsp;{this._formatTextForHealth(health)}{' '}\n        Shards:{' '}\n        {health.shards.active} active,{' '}\n        {health.shards.initializing} initializing,{' '}\n        {health.shards.relocating} relocating,{' '}\n        {health.shards.unassigned} unassigned,{' '}\n        <DocumentationLink page={DocsHelper.PAGES.CLUSTER_STATUS_EXPLAINED} text=\"What does this mean?\" />\n      </Alert>\n    );\n  },\n});\n\nexport default IndexerClusterHealthSummary;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/IndexerClusterHealthSummary.jsx","import React from 'react';\nimport { Timestamp } from 'components/common';\n\nconst IndexerFailure = React.createClass({\n  propTypes: {\n    failure: React.PropTypes.object.isRequired,\n  },\n  render() {\n    const failure = this.props.failure;\n    return (\n      <tr>\n        <td title={failure.timestamp}><Timestamp dateTime={failure.timestamp} relative /></td>\n        <td>{failure.index}</td>\n        <td>{failure.letter_id}</td>\n        <td>{failure.message}</td>\n      </tr>\n    );\n  },\n});\n\nexport default IndexerFailure;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/IndexerFailure.jsx","import React from 'react';\nimport { Alert, Button, Col, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport numeral from 'numeral';\nimport moment from 'moment';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst IndexerFailuresStore = StoreProvider.getStore('IndexerFailures');\n\nimport DocsHelper from 'util/DocsHelper';\nimport Routes from 'routing/Routes';\n\nimport { Spinner } from 'components/common';\nimport { SmallSupportLink, DocumentationLink } from 'components/support';\n\nconst IndexerFailuresComponent = React.createClass({\n  getInitialState() {\n    return {};\n  },\n  componentDidMount() {\n    const since = moment().subtract(24, 'hours');\n\n    IndexerFailuresStore.count(since).then((response) => {\n      this.setState({ total: response.count });\n    });\n  },\n  _formatFailuresSummary() {\n    return (\n      <Alert bsStyle={this.state.total === 0 ? 'success' : 'danger'}>\n        <i className={`fa fa-${this._iconForFailureCount(this.state.total)}`} /> {this._formatTextForFailureCount(this.state.total)}\n\n        <LinkContainer to={Routes.SYSTEM.INDICES.FAILURES}>\n          <Button bsStyle=\"info\" bsSize=\"xs\" className=\"pull-right\">\n            Show errors\n          </Button>\n        </LinkContainer>\n      </Alert>\n    );\n  },\n  _formatTextForFailureCount(count) {\n    if (count === 0) {\n      return 'No failed indexing attempts in the last 24 hours.';\n    }\n    return <strong>There were {numeral(count).format('0,0')} failed indexing attempts in the last 24 hours.</strong>;\n  },\n  _iconForFailureCount(count) {\n    if (count === 0) {\n      return 'check-circle';\n    }\n    return 'ambulance';\n  },\n  render() {\n    let content;\n    if (this.state.total === undefined) {\n      content = <Spinner />;\n    } else {\n      content = this._formatFailuresSummary();\n    }\n\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>Indexer failures</h2>\n\n          <SmallSupportLink>\n            Every message that was not successfully indexed will be logged as an indexer failure. You can learn more about this feature in the{' '}\n            <DocumentationLink page={DocsHelper.PAGES.INDEXER_FAILURES} text=\"Graylog documentation\" />.\n          </SmallSupportLink>\n\n          {content}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default IndexerFailuresComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/IndexerFailuresComponent.jsx","import React from 'react';\nimport { Alert, Table } from 'react-bootstrap';\n\nimport { IndexerFailure } from 'components/indexers';\n\nconst IndexerFailuresList = React.createClass({\n  propTypes: {\n    failures: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,\n  },\n  render() {\n    if (this.props.failures.length === 0) {\n      return (\n        <Alert bsStyle=\"success\"><i className=\"fa fa-check-circle\" /> Hurray! There are not any indexer failures.</Alert>\n      );\n    }\n\n    return (\n      <div className=\"scrollable-table\">\n        <Table className=\"indexer-failures\" striped hover condensed>\n          <thead>\n            <tr>\n              <th style={{ width: 200 }}>Timestamp</th>\n              <th>Index</th>\n              <th>Letter ID</th>\n              <th>Error message</th>\n            </tr>\n          </thead>\n          <tbody>\n            {this.props.failures.map(failure => <IndexerFailure key={`indexer-failure-${failure.letter_id}`} failure={failure} />)}\n          </tbody>\n        </Table>\n      </div>\n    );\n  },\n});\n\nexport default IndexerFailuresList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/IndexerFailuresList.jsx","export { default as SystemJob } from './SystemJob';\nexport { default as SystemJobsComponent } from './SystemJobsComponent';\nexport { default as SystemJobsList } from './SystemJobsList';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemjobs/index.jsx","export { default as SystemMessage } from './SystemMessage';\nexport { default as SystemMessagesComponent } from './SystemMessagesComponent';\nexport { default as SystemMessagesList } from './SystemMessagesList';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemmessages/index.jsx","import React from 'react';\nimport { Alert, Button } from 'react-bootstrap';\nimport { Timestamp } from 'components/common';\n\nimport NotificationsFactory from 'logic/notifications/NotificationsFactory';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst NotificationsActions = ActionsProvider.getActions('Notifications');\n\nconst Notification = React.createClass({\n  propTypes: {\n    notification: React.PropTypes.object.isRequired,\n  },\n  _onClose() {\n    if (window.confirm('Really delete this notification?')) {\n      NotificationsActions.delete(this.props.notification.type);\n    }\n  },\n  render() {\n    const notification = this.props.notification;\n    const notificationView = NotificationsFactory.getForNotification(notification);\n    return (\n      <Alert bsStyle=\"danger\" className=\"notification\">\n        <Button className=\"close delete-notification\" onClick={this._onClose}>&times;</Button>\n\n        <h3 className=\"notification-head\">\n          <i className=\"fa fa-bolt\" />{' '}\n          {notificationView.title}{' '}\n\n          <span className=\"notification-timestamp\">\n            (triggered <Timestamp dateTime={notification.timestamp} relative />)\n          </span>\n        </h3>\n        <div className=\"notification-description\">\n          {notificationView.description}\n        </div>\n      </Alert>\n    );\n  },\n});\n\nexport default Notification;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/notifications/Notification.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { Spinner } from 'components/common';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst NodesStore = StoreProvider.getStore('Nodes');\n\nconst GraylogClusterOverview = React.createClass({\n  mixins: [Reflux.connect(NodesStore)],\n\n  _isLoading() {\n    return !this.state.nodes;\n  },\n\n  render() {\n    let content = <Spinner />;\n\n    if (!this._isLoading()) {\n      content = (\n        <dl className=\"system-dl\" style={{ marginBottom: 0 }}>\n          <dt>Cluster ID:</dt>\n          <dd>{this.state.clusterId || 'Not available'}</dd>\n          <dt>Number of nodes:</dt>\n          <dd>{this.state.nodeCount}</dd>\n        </dl>\n      );\n    }\n\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2 style={{ marginBottom: 10 }}>Graylog cluster</h2>\n          {content}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default GraylogClusterOverview;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/cluster/GraylogClusterOverview.jsx","export { default as GraylogClusterOverview } from './GraylogClusterOverview';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/cluster/index.js","import React from 'react';\nimport Reflux from 'reflux';\nimport { Alert, Row, Col } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst NotificationsStore = StoreProvider.getStore('Notifications');\n\nimport { Spinner } from 'components/common';\nimport Notification from 'components/notifications/Notification';\n\nconst NotificationsList = React.createClass({\n  mixins: [Reflux.connect(NotificationsStore)],\n  _formatNotificationCount(count) {\n    if (count === 0) {\n      return 'is no notification';\n    }\n    if (count === 1) {\n      return 'is one notification';\n    }\n\n    return `are ${count} notifications`;\n  },\n  render() {\n    if (!this.state.notifications) {\n      return <Spinner />;\n    }\n\n    const count = this.state.total;\n\n    let title;\n    let content;\n\n    if (count === 0) {\n      title = 'No notifications';\n      content = (\n        <Alert bsStyle=\"success\" className=\"notifications-none\">\n          <i className=\"fa fa-check-circle\" />{' '}\n          &nbsp;No notifications\n        </Alert>\n      );\n    } else {\n      title = `There ${this._formatNotificationCount(count)}`;\n      content = this.state.notifications.map((notification) => {\n        return <Notification key={`${notification.type}-${notification.timestamp}`} notification={notification} />;\n      });\n    }\n\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>{title}</h2>\n          <p className=\"description\">\n            Notifications are triggered by Graylog and indicate a situation you should act upon. Many notification\n            types will also provide a link to the Graylog documentation if you need more information or assistance.\n          </p>\n\n          {content}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default NotificationsList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/notifications/NotificationsList.jsx","export { default as Notification } from './Notification';\nexport { default as NotificationsList } from './NotificationsList';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/notifications/index.jsx","import React from 'react';\nimport { ProgressBar } from 'react-bootstrap';\n\nimport { LinkToNode, Timestamp } from 'components/common';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst SystemJobsActions = ActionsProvider.getActions('SystemJobs');\n\nconst SystemJob = React.createClass({\n  _onCancel(job) {\n    return (e) => {\n      e.preventDefault();\n      if (window.confirm(`Are you sure you want to cancel system job \"${job.info}\"?`)) {\n        SystemJobsActions.cancelJob(job.id);\n      }\n    };\n  },\n  render() {\n    const job = this.props.job;\n    const progress = job.percent_complete < 100 ?\n      (<ProgressBar bsStyle=\"info\" active now={job.percent_complete} />) : <span className=\"label label-success finished\">Finished!</span>;\n    const cancel = job.is_cancelable ?\n      (<button type=\"button\" className=\"btn btn-primary btn-xs pull-right\" onClick={this._onCancel(job)}>Cancel Job</button>) : null;\n\n    return (\n      <div>\n        <div style={{ lineHeight: 1.5, marginBottom: 5 }}>\n          <i className=\"fa fa-cog\" />{' '}\n          <span data-toggle=\"tooltip\" title={job.name}>{job.info}</span>{' '}\n          - Started on <LinkToNode nodeId={job.node_id} />{' '}\n          <Timestamp dateTime={job.started_at} relative />{' '}\n          {cancel}\n        </div>\n\n        {progress}\n      </div>\n    );\n  },\n});\n\nexport default SystemJob;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemjobs/SystemJob.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Col, Row } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst SystemJobsStore = StoreProvider.getStore('SystemJobs');\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst SystemJobsActions = ActionsProvider.getActions('SystemJobs');\n\nimport { Spinner } from 'components/common';\nimport { SystemJobsList } from 'components/systemjobs';\n\nconst SystemJobsComponent = React.createClass({\n  mixins: [Reflux.connect(SystemJobsStore)],\n  componentDidMount() {\n    SystemJobsActions.list();\n\n    this.interval = setInterval(SystemJobsActions.list, 2000);\n  },\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  render() {\n    if (!this.state.jobs) {\n      return <Spinner />;\n    }\n    const jobs = Object.keys(this.state.jobs)\n      .map(nodeId => this.state.jobs[nodeId] ? this.state.jobs[nodeId].jobs : [])\n      .reduce((a, b) => a.concat(b));\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>System jobs</h2>\n          <p className=\"description\">\n            A system job is a long-running task a graylog-server node executes for maintenance reasons. Some jobs\n            provide progress information or can be stopped.\n          </p>\n\n          <SystemJobsList jobs={jobs} />\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default SystemJobsComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemjobs/SystemJobsComponent.jsx","import React from 'react';\nimport { Alert } from 'react-bootstrap';\n\nimport { SystemJob } from 'components/systemjobs';\n\nconst SystemJobsList = React.createClass({\n  propTypes: {\n    jobs: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,\n  },\n  _formatSystemJob(job) {\n    return (\n      <div className=\"systemjob systemjob-progress systemjob-active\" key={`job-${job.id}`}>\n        <SystemJob job={job} />\n      </div>\n    );\n  },\n  render() {\n    const jobs = this.props.jobs.map(this._formatSystemJob);\n    if (jobs.length === 0) {\n      return (\n        <Alert bsStyle=\"info\" className=\"systemjobs-none\">\n          <i className=\"fa fa-info-circle\" />{' '}\n          &nbsp;No active system jobs.\n        </Alert>\n      );\n    }\n    return (\n      <span>\n        {jobs}\n      </span>\n    );\n  },\n});\n\nexport default SystemJobsList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemjobs/SystemJobsList.jsx","import React from 'react';\nimport moment from 'moment';\n\nimport { LinkToNode } from 'components/common';\n\nconst SystemMessage = React.createClass({\n  propTypes: {\n    message: React.PropTypes.object.isRequired,\n  },\n  render() {\n    const message = this.props.message;\n    return (\n      <tr>\n        <td>{moment(message.timestamp).format()}</td>\n        <td>\n          <LinkToNode nodeId={message.node_id} />\n        </td>\n        <td>{message.content}</td>\n      </tr>\n    );\n  },\n});\n\nexport default SystemMessage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemmessages/SystemMessage.jsx","import React from 'react';\nimport { Col, Pagination, Row } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst SystemMessagesStore = StoreProvider.getStore('SystemMessages');\n\nimport { Spinner } from 'components/common';\nimport { SystemMessagesList } from 'components/systemmessages';\n\nconst SystemMessagesComponent = React.createClass({\n  getInitialState() {\n    return { currentPage: 1 };\n  },\n  componentDidMount() {\n    this.loadMessages(this.state.currentPage);\n    this.interval = setInterval(() => { this.loadMessages(this.state.currentPage); }, 1000);\n  },\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  PER_PAGE: 30,\n  loadMessages(page) {\n    SystemMessagesStore.all(page).then((response) => {\n      this.setState(response);\n    });\n  },\n  _onSelected(selectedPage) {\n    this.setState({ currentPage: selectedPage });\n    this.loadMessages(selectedPage);\n  },\n  render() {\n    let content;\n    if (this.state.total && this.state.messages) {\n      const numberPages = Math.ceil(this.state.total / this.PER_PAGE);\n      const paginatorSize = 10;\n\n      content = (\n        <div>\n          <SystemMessagesList messages={this.state.messages} />\n\n          <nav style={{ textAlign: 'center' }}>\n            <Pagination bsSize=\"small\" items={numberPages}\n                        activePage={this.state.currentPage}\n                        onSelect={this._onSelected}\n                        prev next first last\n                        maxButtons={Math.min(paginatorSize, numberPages)} />\n          </nav>\n        </div>\n      );\n    } else {\n      content = <Spinner />;\n    }\n\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>System messages</h2>\n\n          <p className=\"description\">\n            System messages are generated by graylog-server nodes on certain events that may be interesting for\n            the Graylog administrators. You don't need to actively act upon any message in here because notifications\n            will be raised for any events that required action.\n          </p>\n\n          {content}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default SystemMessagesComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemmessages/SystemMessagesComponent.jsx","import React from 'react';\nimport { Table } from 'react-bootstrap';\n\nimport { SystemMessage } from 'components/systemmessages';\n\nconst SystemMessagesList = React.createClass({\n  propTypes: {\n    messages: React.PropTypes.arrayOf(React.PropTypes.object).isRequired,\n  },\n  render() {\n    return (\n      <Table className=\"system-messages\" striped hover condensed>\n        <thead>\n          <tr>\n            <th style={{ width: '200px' }}>Timestamp</th>\n            <th>Node</th>\n            <th>Message</th>\n          </tr>\n        </thead>\n\n        <tbody>\n          {this.props.messages.map(message => <SystemMessage key={`message-${Math.random().toString(36).substring(7)}`} message={message} />)}\n        </tbody>\n      </Table>\n    );\n  },\n});\n\nexport default SystemMessagesList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/systemmessages/SystemMessagesList.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Col, Row } from 'react-bootstrap';\nimport moment from 'moment';\nimport DateTime from 'logic/datetimes/DateTime';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst CurrentUserStore = StoreProvider.getStore('CurrentUser');\nconst SystemStore = StoreProvider.getStore('System');\n\nimport { Spinner, Timestamp } from 'components/common';\n\nconst TimesList = React.createClass({\n  mixins: [Reflux.connect(CurrentUserStore), Reflux.connect(SystemStore)],\n  getInitialState() {\n    return { time: moment() };\n  },\n  componentDidMount() {\n    this.interval = setInterval(() => this.setState(this.getInitialState()), 1000);\n  },\n  componentWillUnmount() {\n    clearInterval(this.interval);\n  },\n  render() {\n    if (!this.state.system) {\n      return <Spinner />;\n    }\n    const time = this.state.time;\n    const timeFormat = DateTime.Formats.DATETIME_TZ;\n    const currentUser = this.state.currentUser;\n    const serverTimezone = this.state.system.timezone;\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <h2>Time configuration</h2>\n\n          <p className=\"description\">\n            Dealing with timezones can be confusing. Here you can see the timezone applied to different components of your system.\n            You can check timezone settings of specific graylog-server nodes on their respective detail page.\n          </p>\n\n          <dl className=\"system-dl\">\n            <dt>User <em>{currentUser.username}</em>:</dt>\n            <dd><Timestamp dateTime={time} format={timeFormat} /></dd>\n            <dt>Your web browser:</dt>\n            <dd><Timestamp dateTime={time} format={timeFormat} tz={'browser'} /></dd>\n            <dt>Graylog server:</dt>\n            <dd><Timestamp dateTime={time} format={timeFormat} tz={serverTimezone} /></dd>\n          </dl>\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default TimesList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/times/TimesList.jsx","export { default as TimesList } from './TimesList';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/times/index.jsx","import React from 'react';\nimport { Alert, Button, Row, Col } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst UsageStatsOptOutStore = StoreProvider.getStore('UsageStatsOptOut');\n\nconst UsageStatsOptIn = React.createClass({\n  getInitialState() {\n    return {\n      optOutStateLoaded: false,\n      optOutState: null,\n      pluginEnabled: false,\n    };\n  },\n  componentDidMount() {\n    UsageStatsOptOutStore.pluginEnabled().done((isEnabled) => {\n      this.setState({ pluginEnabled: isEnabled });\n    });\n\n    UsageStatsOptOutStore.getOptOutState().done((optOutState) => {\n      this.setState({ optOutStateLoaded: true, optOutState: optOutState });\n    });\n  },\n  _handleClickEnable() {\n    UsageStatsOptOutStore.setOptIn(false);\n    this.setState({ optOutState: { opt_out: false } });\n  },\n  _handleClickDisable() {\n    UsageStatsOptOutStore.setOptOut(false);\n    this.setState({ optOutState: { opt_out: true } });\n  },\n  render() {\n    let content = null;\n\n    if (this.state.optOutStateLoaded && this.state.pluginEnabled === true) {\n      let form = null;\n\n      if (this.state.optOutState !== null && this.state.optOutState.opt_out === true) {\n        form = (\n          <span>\n            <i className=\"fa fa-info-circle\" />\n            &nbsp;\n            You have currently <strong>disabled</strong> sending usage statistics to Graylog. Please consider turning\n            it back on to provide anonymous statistics that will help us make Graylog better for you.\n            <Button bsSize=\"xsmall\" bsStyle=\"success\" className=\"pull-right\" onClick={this._handleClickEnable}>Enable</Button>\n          </span>\n        );\n      } else {\n        form = (\n          <span>\n            <i className=\"fa fa-info-circle\" />\n            &nbsp;\n            You have currently <strong>enabled</strong> sending anonymous usage statistics to Graylog. Thank you! User\n            statistics help us make Graylog better. If you've changed your mind, click \"Disable\".\n            <Button bsSize=\"xsmall\" bsStyle=\"info\" className=\"pull-right\" onClick={this._handleClickDisable}>Disable</Button>\n          </span>\n        );\n      }\n\n      content = (\n        <Row className=\"content\">\n          <Col md={12}>\n            <h2>Anonymous usage statistics</h2>\n            <Alert bsStyle=\"info\">\n              {form}\n            </Alert>\n          </Col>\n        </Row>\n      );\n    }\n\n    return content;\n  },\n});\n\nexport default UsageStatsOptIn;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/usagestats/UsageStatsOptIn.jsx","import React from 'react';\nimport { Link } from 'react-router';\n\nimport Routes from 'routing/Routes';\nimport DocsHelper from 'util/DocsHelper';\nimport DocumentationLink from 'components/support/DocumentationLink';\n\nclass NotificationsFactory {\n  static getForNotification(notification) {\n    switch (notification.type) {\n      case 'check_server_clocks':\n        return {\n          title: 'Check the system clocks of your Graylog server nodes.',\n          description: (\n            <span>\n              A Graylog server node detected a condition where it was deemed to be inactive immediately after being active.\n              This usually indicates either a significant jump in system time, e.g. via NTP, or that a second Graylog server node\n              is active on a system that has a different system time. Please make sure that the clocks of graylog2 systems are synchronized.\n            </span>\n          ),\n        };\n      case 'deflector_exists_as_index':\n        return {\n          title: 'Deflector exists as an index and is not an alias.',\n          description: (\n            <span>\n              The deflector is meant to be an alias but exists as an index. Multiple failures of infrastructure can lead\n              to this. Your messages are still indexed but searches and all maintenance tasks will fail or produce incorrect\n              results. It is strongly recommend that you act as soon as possible.\n            </span>\n          ),\n        };\n      case 'email_transport_configuration_invalid':\n        return {\n          title: 'Email Transport Configuration is missing or invalid!',\n          description: (\n            <span>\n              The configuration for the email transport subsystem has shown to be missing or invalid.\n              Please check the related section of your Graylog server configuration file.\n              This is the detailed error message: {notification.details.exception}\n            </span>\n          ),\n        };\n      case 'email_transport_failed':\n        return {\n          title: 'An error occurred while trying to send an email!',\n          description: (\n            <span>\n              The Graylog server encountered an error while trying to send an email.\n              This is the detailed error message: {notification.details.exception}\n            </span>\n          ),\n        };\n      case 'es_cluster_red':\n        return {\n          title: 'Elasticsearch cluster unhealthy (RED)',\n          description: (\n            <span>\n              The Elasticsearch cluster state is RED which means shards are unassigned.\n              This usually indicates a crashed and corrupt cluster and needs to be investigated. Graylog will write\n              into the local disk journal. Read how to fix this in {' '}\n              <DocumentationLink page={DocsHelper.PAGES.ES_CLUSTER_STATUS_RED} text=\"the Elasticsearch setup documentation.\" />\n            </span>\n          ),\n        };\n      case 'es_open_files':\n        return {\n          title: 'Elasticsearch nodes with too low open file limit',\n          description: (\n            <span>\n              There are Elasticsearch nodes in the cluster that have a too low open file limit (current limit:{' '}\n              <em>{notification.details.max_file_descriptors}</em> on <em>{notification.details.hostname}</em>;\n              should be at least 64000) This will be causing problems\n              that can be hard to diagnose. Read how to raise the maximum number of open files in {' '}\n              <DocumentationLink page={DocsHelper.PAGES.ES_OPEN_FILE_LIMITS} text=\"the Elasticsearch setup documentation\" />.\n            </span>\n          ),\n        };\n      case 'es_unavailable':\n        return {\n          title: 'Elasticsearch cluster unavailable',\n          description: (\n            <span>\n              Graylog could not successfully connect to the Elasticsearch cluster. If you're using multicast, check that\n              it is working in your network and that Elasticsearch is accessible. Also check that the cluster name setting\n              is correct. Read how to fix this in {' '}\n              <DocumentationLink page={DocsHelper.PAGES.ES_CLUSTER_UNAVAILABLE}\n                                 text=\"the Elasticsearch setup documentation.\" />\n            </span>\n          ),\n        };\n      case 'gc_too_long':\n        return {\n          title: 'Nodes with too long GC pauses',\n          description: (\n            <span>\n              There are Graylog nodes on which the garbage collector runs too long.\n              Garbage collection runs should be as short as possible. Please check whether those nodes are healthy.\n              (Node: <em>{notification.node_id}</em>, GC duration: <em>{notification.details.gc_duration_ms} ms</em>,\n              GC threshold: <em>{notification.details.gc_threshold_ms} ms</em>)\n            </span>\n          ),\n        };\n      case 'generic':\n        return {\n          title: notification.details.title,\n          description: notification.details.description,\n        };\n      case 'index_ranges_recalculation':\n        return {\n          title: 'Index ranges recalculation required',\n          description: (\n            <span>\n              The index ranges are out of sync. Please go to System/Indices and trigger a index range recalculation from\n              the Maintenance menu of {notification.details.index_sets ? (`the following index sets: ${notification.details.index_sets}`) : 'all index sets'}\n            </span>\n          ),\n        };\n      case 'input_failed_to_start':\n        return {\n          title: 'An input has failed to start',\n          description: (\n            <span>\n              Input {notification.details.input_id} has failed to start on node {notification.node_id} for this reason:\n              »{notification.details.reason}«. This means that you are unable to receive any messages from this input.\n              This is mostly an indication for a misconfiguration or an error. You can click {' '}\n              <Link to={Routes.SYSTEM.INPUTS}>here</Link> to solve this.\n            </span>\n          ),\n        };\n      case 'journal_uncommitted_messages_deleted':\n        return {\n          title: 'Uncommited messages deleted from journal',\n          description: (\n            <span>\n              Some messages were deleted from the Graylog journal before they could be written to Elasticsearch. Please\n              verify that your Elasticsearch cluster is healthy and fast enough. You may also want to review your Graylog\n              journal settings and set a higher limit. (Node: <em>{notification.node_id}</em>)\n            </span>\n          ),\n        };\n      case 'journal_utilization_too_high':\n        return {\n          title: 'Journal utilization is too high',\n          description: (\n            <span>\n              Journal utilization is too high and may go over the limit soon. Please verify that your Elasticsearch cluster\n              is healthy and fast enough. You may also want to review your Graylog journal settings and set a higher limit.\n              (Node: <em>{notification.node_id}</em>)\n            </span>\n          ),\n        };\n      case 'multi_master':\n        return {\n          title: 'Multiple Graylog server masters in the cluster',\n          description: (\n            <span>\n              There were multiple Graylog server instances configured as master in your Graylog cluster. The cluster handles\n              this automatically by launching new nodes as slaves if there already is a master but you should still fix this.\n              Check the graylog.conf of every node and make sure that only one instance has is_master set to true. Close this\n              notification if you think you resolved the problem. It will pop back up if you start a second master node again.\n            </span>\n          ),\n        };\n      case 'no_input_running':\n        return {\n          title: 'There is a node without any running inputs.',\n          description: (\n            <span>\n              There is a node without any running inputs. This means that you are not receiving any messages from this\n              node at this point in time. This is most probably an indication of an error or misconfiguration.\n              You can click <Link to={Routes.SYSTEM.INPUTS}>here</Link> to solve this.\n            </span>\n          ),\n        };\n      case 'no_master':\n        return {\n          title: 'There was no master Graylog server node detected in the cluster.',\n          description: (\n            <span>\n              Certain operations of Graylog server require the presence of a master node, but no such master was started.\n              Please ensure that one of your Graylog server nodes contains the setting <code>is_master = true</code> in its\n              configuration and that it is running. Until this is resolved index cycling will not be able to run, which\n              means that the index retention mechanism is also not running, leading to increased index sizes. Certain\n              maintenance functions as well as a variety of web interface pages (e.g. Dashboards) are unavailable.\n            </span>\n          ),\n        };\n      case 'outdated_version':\n        return {\n          title: 'You are running an outdated Graylog version.',\n          description: (\n            <span>\n              The most recent stable Graylog version is <em>{notification.details.current_version}</em>.\n              Get it from <a href=\"https://www.graylog.org/\" target=\"_blank\">https://www.graylog.org/</a>.\n            </span>\n          ),\n        };\n      case 'output_disabled':\n        return {\n          title: 'Output disabled',\n          description: (\n            <span>\n              The output with the id {notification.details.outputId} in stream \"{notification.details.streamTitle}\"\n              (id: {notification.details.streamId}) has been disabled for {notification.details.faultPenaltySeconds}\n              seconds because there were {notification.details.faultCount} failures.\n              (Node: <em>{notification.node_id}</em>, Fault threshold: <em>{notification.details.faultCountThreshold}</em>)\n            </span>\n          ),\n        };\n      case 'stream_processing_disabled':\n        return {\n          title: 'Processing of a stream has been disabled due to excessive processing time.',\n          description: (\n            <span>\n              The processing of stream <em>{notification.details.stream_id}</em> has taken too long for{' '}\n              {notification.details.fault_count} times. To protect the stability of message processing,\n              this stream has been disabled. Please correct the stream rules and reenable the stream.\n              Check <DocumentationLink page={DocsHelper.PAGES.STREAM_PROCESSING_RUNTIME_LIMITS} text=\"the documentation\" />{' '}\n              for more details.\n            </span>\n          ),\n        };\n      default:\n        return { title: `unknown (${notification.type})`, description: 'unknown' };\n    }\n  }\n}\n\nexport default NotificationsFactory;\n\n\n\n// WEBPACK FOOTER //\n// ./src/logic/notifications/NotificationsFactory.js","import React from 'react';\n\nimport { DocumentTitle, IfPermitted } from 'components/common';\nimport { IndexerClusterHealth, IndexerFailuresComponent } from 'components/indexers';\nimport { NotificationsList } from 'components/notifications';\nimport { SystemJobsComponent } from 'components/systemjobs';\nimport { SystemMessagesComponent } from 'components/systemmessages';\nimport { TimesList } from 'components/times';\nimport UsageStatsOptIn from 'components/usagestats/UsageStatsOptIn';\nimport { GraylogClusterOverview } from 'components/cluster';\n\nconst SystemOverviewPage = React.createClass({\n  render() {\n    return (\n      <DocumentTitle title=\"System overview\">\n        <span>\n          <IfPermitted permissions=\"notifications:read\">\n            <NotificationsList />\n          </IfPermitted>\n\n          <IfPermitted permissions=\"systemjobs:read\">\n            <SystemJobsComponent />\n          </IfPermitted>\n\n          <GraylogClusterOverview />\n\n          <IfPermitted permissions=\"indexercluster:read\">\n            <IndexerClusterHealth />\n          </IfPermitted>\n\n          <IfPermitted permissions=\"indices:failures\">\n            <IndexerFailuresComponent />\n          </IfPermitted>\n\n          <TimesList />\n\n          <IfPermitted permissions=\"clusterconfigentry:edit:org.graylog.plugins.usagestatistics.UsageStatsOptOutState\">\n            <UsageStatsOptIn />\n          </IfPermitted>\n\n          <IfPermitted permissions=\"systemmessages:read\">\n            <SystemMessagesComponent />\n          </IfPermitted>\n        </span>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default SystemOverviewPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/SystemOverviewPage.jsx","export { default as IndexerClusterHealth } from './IndexerClusterHealth';\nexport { default as IndexerClusterHealthSummary } from './IndexerClusterHealthSummary';\nexport { default as IndexerFailure } from './IndexerFailure';\nexport { default as IndexerFailuresComponent } from './IndexerFailuresComponent';\nexport { default as IndexerFailuresList } from './IndexerFailuresList';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/indexers/index.jsx"],"sourceRoot":""}