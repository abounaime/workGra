{"version":3,"sources":["webpack:///47.200197dca04f05abe3f2.js","webpack:///./src/components/extractors/ImportExtractors.jsx","webpack:///./src/pages/ImportExtractorsPage.jsx"],"names":["webpackJsonp","1244","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reactBootstrap","_bootstrap","_ActionsProvider","_ActionsProvider2","_UserNotification","_UserNotification2","ExtractorsActions","getActions","ImportExtractors","createClass","displayName","propTypes","input","PropTypes","object","isRequired","_onSubmit","event","preventDefault","parsedExtractors","JSON","parse","this","refs","extractorsInput","getValue","extractors","import","props","id","error","render","createElement","Row","className","Col","md","onSubmit","Input","type","ref","rows","Button","bsStyle","1381","_reflux","_reflux2","_common","_ImportExtractors","_ImportExtractors2","_StoreProvider","_StoreProvider2","InputsActions","InputsStore","getStore","ImportExtractorsPage","params","mixins","connect","getInitialState","undefined","componentDidMount","_this","get","triggerPromise","inputId","then","setState","_isLoading","state","Spinner","DocumentTitle","title","PageHeader","href","target"],"mappings":"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","file":"47.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([47],{\n\n/***/ 1244:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ExtractorsActions = _ActionsProvider2.default.getActions('Extractors');\n\nvar ImportExtractors = _react2.default.createClass({\n  displayName: 'ImportExtractors',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired\n  },\n  _onSubmit: function _onSubmit(event) {\n    event.preventDefault();\n    try {\n      var parsedExtractors = JSON.parse(this.refs.extractorsInput.getValue());\n      var extractors = parsedExtractors.extractors;\n      ExtractorsActions.import(this.props.input.id, extractors);\n    } catch (error) {\n      _UserNotification2.default.error('There was an error while parsing extractors. Are they in JSON format? ' + error, 'Could not import extractors');\n    }\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          null,\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 12 },\n            _react2.default.createElement(\n              'h2',\n              null,\n              'Extractors JSON'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          null,\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 12 },\n            _react2.default.createElement(\n              'form',\n              { onSubmit: this._onSubmit },\n              _react2.default.createElement(_bootstrap.Input, { type: 'textarea', ref: 'extractorsInput', id: 'extractor-export-textarea', rows: 30 }),\n              _react2.default.createElement(\n                _reactBootstrap.Button,\n                { type: 'submit', bsStyle: 'success' },\n                'Add extractors to input'\n              )\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = ImportExtractors;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1381:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _common = __webpack_require__(48);\n\nvar _ImportExtractors = __webpack_require__(1244);\n\nvar _ImportExtractors2 = _interopRequireDefault(_ImportExtractors);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\n\nvar ImportExtractorsPage = _react2.default.createClass({\n  displayName: 'ImportExtractorsPage',\n\n  propTypes: {\n    params: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(InputsStore)],\n  getInitialState: function getInitialState() {\n    return {\n      input: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    InputsActions.get.triggerPromise(this.props.params.inputId).then(function (input) {\n      return _this.setState({ input: input });\n    });\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.input;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Import extractors to ' + this.state.input.title },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: _react2.default.createElement(\n              'span',\n              null,\n              'Import extractors to ',\n              _react2.default.createElement(\n                'em',\n                null,\n                this.state.input.title\n              )\n            ) },\n          _react2.default.createElement(\n            'span',\n            null,\n            'Exported extractors can be imported to an input. All you need is the JSON export of extractors from any other Graylog setup or from ',\n            _react2.default.createElement(\n              'a',\n              { href: 'https://marketplace.graylog.org/', target: '_blank' },\n              'the Graylog Marketplace'\n            ),\n            '.'\n          )\n        ),\n        _react2.default.createElement(_ImportExtractors2.default, { input: this.state.input })\n      )\n    );\n  }\n});\n\nexports.default = ImportExtractorsPage;\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 47.200197dca04f05abe3f2.js","import React, { PropTypes } from 'react';\nimport { Row, Col, Button } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport ActionsProvider from 'injection/ActionsProvider';\nconst ExtractorsActions = ActionsProvider.getActions('Extractors');\n\nimport UserNotification from 'util/UserNotification';\n\nconst ImportExtractors = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n  },\n  _onSubmit(event) {\n    event.preventDefault();\n    try {\n      const parsedExtractors = JSON.parse(this.refs.extractorsInput.getValue());\n      const extractors = parsedExtractors.extractors;\n      ExtractorsActions.import(this.props.input.id, extractors);\n    } catch (error) {\n      UserNotification.error(`There was an error while parsing extractors. Are they in JSON format? ${error}`,\n        'Could not import extractors');\n    }\n  },\n  render() {\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <Row>\n            <Col md={12}>\n              <h2>Extractors JSON</h2>\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <form onSubmit={this._onSubmit}>\n                <Input type=\"textarea\" ref=\"extractorsInput\" id=\"extractor-export-textarea\" rows={30} />\n                <Button type=\"submit\" bsStyle=\"success\">Add extractors to input</Button>\n              </form>\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default ImportExtractors;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/extractors/ImportExtractors.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\n\nimport { DocumentTitle, PageHeader, Spinner } from 'components/common';\nimport ImportExtractors from 'components/extractors/ImportExtractors';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputsStore = StoreProvider.getStore('Inputs');\n\nconst ImportExtractorsPage = React.createClass({\n  propTypes: {\n    params: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(InputsStore)],\n  getInitialState() {\n    return {\n      input: undefined,\n    };\n  },\n  componentDidMount() {\n    InputsActions.get.triggerPromise(this.props.params.inputId).then(input => this.setState({ input: input }));\n  },\n  _isLoading() {\n    return !this.state.input;\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    return (\n      <DocumentTitle title={`Import extractors to ${this.state.input.title}`}>\n        <div>\n          <PageHeader title={<span>Import extractors to <em>{this.state.input.title}</em></span>}>\n            <span>\n              Exported extractors can be imported to an input. All you need is the JSON export of extractors from any\n              other Graylog setup or from <a href=\"https://marketplace.graylog.org/\" target=\"_blank\">the Graylog\n              Marketplace</a>.\n            </span>\n          </PageHeader>\n          <ImportExtractors input={this.state.input} />\n        </div>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default ImportExtractorsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ImportExtractorsPage.jsx"],"sourceRoot":""}