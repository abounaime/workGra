{"version":3,"sources":["webpack:///48.200197dca04f05abe3f2.js","webpack:///./src/components/extractors/ExportExtractors.jsx","webpack:///./src/pages/ExportExtractorsPage.jsx"],"names":["webpackJsonp","1240","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reflux","_reflux2","_reactBootstrap","_bootstrap","_common","_Version","_Version2","_ActionsProvider","_ActionsProvider2","_StoreProvider","_StoreProvider2","ExtractorsActions","getActions","ExtractorsStore","getStore","ExportExtractors","createClass","displayName","propTypes","input","PropTypes","object","isRequired","mixins","connect","ListenerMethods","componentDidMount","list","triggerPromise","this","props","id","_isLoading","state","extractors","render","createElement","Spinner","extractorsExportObject","map","extractor","copy","keys","forEach","key","extractor_type","version","getFullVersion","formattedJSON","JSON","stringify","Row","className","Col","md","ClipboardButton","title","target","Input","type","rows","defaultValue","1377","_ExportExtractors","_ExportExtractors2","InputsActions","InputsStore","ExportExtractorsPage","params","getInitialState","undefined","get","inputId","DocumentTitle","PageHeader","href"],"mappings":"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","file":"48.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([48],{\n\n/***/ 1240:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _common = __webpack_require__(48);\n\nvar _Version = __webpack_require__(1098);\n\nvar _Version2 = _interopRequireDefault(_Version);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar ExtractorsActions = _ActionsProvider2.default.getActions('Extractors');\n\nvar ExtractorsStore = _StoreProvider2.default.getStore('Extractors');\n\nvar ExportExtractors = _react2.default.createClass({\n  displayName: 'ExportExtractors',\n\n  propTypes: {\n    input: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(ExtractorsStore), _reflux2.default.ListenerMethods],\n  componentDidMount: function componentDidMount() {\n    ExtractorsActions.list.triggerPromise(this.props.input.id);\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.extractors;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var extractorsExportObject = {\n      extractors: this.state.extractors.map(function (extractor) {\n        var copy = {};\n\n        // Create Graylog 1.x compatible export format.\n        // TODO: This should be done on the server.\n        Object.keys(extractor).forEach(function (key) {\n          switch (key) {\n            case 'type':\n              // The import expects \"extractor_type\", not \"type\".\n              copy.extractor_type = extractor[key];\n              break;\n            case 'id':\n            case 'metrics':\n            case 'creator_user_id':\n            case 'exceptions':\n            case 'converter_exceptions':\n              break;\n            default:\n              copy[key] = extractor[key];\n          }\n        });\n\n        return copy;\n      }),\n      version: _Version2.default.getFullVersion()\n    };\n\n    var formattedJSON = JSON.stringify(extractorsExportObject, null, 2);\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      { className: 'content' },\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 12 },\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          null,\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 8 },\n            _react2.default.createElement(\n              'h2',\n              null,\n              'Extractors JSON'\n            )\n          ),\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 4 },\n            _react2.default.createElement(_common.ClipboardButton, { title: 'Copy extractors', className: 'pull-right', target: '#extractor-export-textarea' })\n          )\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          null,\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 12 },\n            _react2.default.createElement(_bootstrap.Input, { type: 'textarea', id: 'extractor-export-textarea', rows: 30, defaultValue: formattedJSON })\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = ExportExtractors;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1377:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _common = __webpack_require__(48);\n\nvar _ExportExtractors = __webpack_require__(1240);\n\nvar _ExportExtractors2 = _interopRequireDefault(_ExportExtractors);\n\nvar _ActionsProvider = __webpack_require__(7);\n\nvar _ActionsProvider2 = _interopRequireDefault(_ActionsProvider);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar InputsActions = _ActionsProvider2.default.getActions('Inputs');\n\nvar InputsStore = _StoreProvider2.default.getStore('Inputs');\n\nvar ExportExtractorsPage = _react2.default.createClass({\n  displayName: 'ExportExtractorsPage',\n\n  propTypes: {\n    params: _react.PropTypes.object.isRequired\n  },\n  mixins: [_reflux2.default.connect(InputsStore)],\n  getInitialState: function getInitialState() {\n    return {\n      input: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    InputsActions.get.triggerPromise(this.props.params.inputId);\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.input;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Export extractors of ' + this.state.input.title },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: _react2.default.createElement(\n              'span',\n              null,\n              'Export extractors of ',\n              _react2.default.createElement(\n                'em',\n                null,\n                this.state.input.title\n              )\n            ) },\n          _react2.default.createElement(\n            'span',\n            null,\n            'The extractors of an input can be exported to JSON for importing into other setups or sharing in ',\n            _react2.default.createElement(\n              'a',\n              { href: 'https://marketplace.graylog.org/', target: '_blank' },\n              'the Graylog Marketplace'\n            ),\n            '.'\n          )\n        ),\n        _react2.default.createElement(_ExportExtractors2.default, { input: this.state.input })\n      )\n    );\n  }\n});\n\nexports.default = ExportExtractorsPage;\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 48.200197dca04f05abe3f2.js","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport { ClipboardButton, Spinner } from 'components/common';\nimport Version from 'util/Version';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst ExtractorsActions = ActionsProvider.getActions('Extractors');\n\nimport StoreProvider from 'injection/StoreProvider';\nconst ExtractorsStore = StoreProvider.getStore('Extractors');\n\nconst ExportExtractors = React.createClass({\n  propTypes: {\n    input: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(ExtractorsStore), Reflux.ListenerMethods],\n  componentDidMount() {\n    ExtractorsActions.list.triggerPromise(this.props.input.id);\n  },\n  _isLoading() {\n    return !this.state.extractors;\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    const extractorsExportObject = {\n      extractors: this.state.extractors.map((extractor) => {\n        const copy = {};\n\n        // Create Graylog 1.x compatible export format.\n        // TODO: This should be done on the server.\n        Object.keys(extractor).forEach((key) => {\n          switch (key) {\n            case 'type':\n              // The import expects \"extractor_type\", not \"type\".\n              copy.extractor_type = extractor[key];\n              break;\n            case 'id':\n            case 'metrics':\n            case 'creator_user_id':\n            case 'exceptions':\n            case 'converter_exceptions':\n              break;\n            default:\n              copy[key] = extractor[key];\n          }\n        });\n\n        return copy;\n      }),\n      version: Version.getFullVersion(),\n    };\n\n    const formattedJSON = JSON.stringify(extractorsExportObject, null, 2);\n    return (\n      <Row className=\"content\">\n        <Col md={12}>\n          <Row>\n            <Col md={8}>\n              <h2>Extractors JSON</h2>\n            </Col>\n            <Col md={4}>\n              <ClipboardButton title=\"Copy extractors\" className=\"pull-right\" target=\"#extractor-export-textarea\" />\n            </Col>\n          </Row>\n          <Row>\n            <Col md={12}>\n              <Input type=\"textarea\" id=\"extractor-export-textarea\" rows={30} defaultValue={formattedJSON} />\n            </Col>\n          </Row>\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default ExportExtractors;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/extractors/ExportExtractors.jsx","import React, { PropTypes } from 'react';\nimport Reflux from 'reflux';\n\nimport { DocumentTitle, PageHeader, Spinner } from 'components/common';\nimport ExportExtractors from 'components/extractors/ExportExtractors';\n\nimport ActionsProvider from 'injection/ActionsProvider';\nconst InputsActions = ActionsProvider.getActions('Inputs');\n\nimport StoreProvider from 'injection/StoreProvider';\nconst InputsStore = StoreProvider.getStore('Inputs');\n\nconst ExportExtractorsPage = React.createClass({\n  propTypes: {\n    params: PropTypes.object.isRequired,\n  },\n  mixins: [Reflux.connect(InputsStore)],\n  getInitialState() {\n    return {\n      input: undefined,\n    };\n  },\n  componentDidMount() {\n    InputsActions.get.triggerPromise(this.props.params.inputId);\n  },\n  _isLoading() {\n    return !this.state.input;\n  },\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    return (\n      <DocumentTitle title={`Export extractors of ${this.state.input.title}`}>\n        <div>\n          <PageHeader title={<span>Export extractors of <em>{this.state.input.title}</em></span>}>\n            <span>\n              The extractors of an input can be exported to JSON for importing into other setups\n              or sharing in <a href=\"https://marketplace.graylog.org/\" target=\"_blank\">the Graylog Marketplace</a>.\n            </span>\n          </PageHeader>\n          <ExportExtractors input={this.state.input} />\n        </div>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default ExportExtractorsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/ExportExtractorsPage.jsx"],"sourceRoot":""}