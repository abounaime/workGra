{"version":3,"sources":["webpack:///28.200197dca04f05abe3f2.js","webpack:///./src/components/users/RolesSelect.jsx","webpack:///./src/components/users/TimeoutInput.jsx","webpack:///./src/components/users/TimeoutUnitSelect.jsx","webpack:///./src/util/ValidationsUtils.js","webpack:///./src/components/users/EditRolesForm.jsx","webpack:///./src/components/users/UserForm.jsx","webpack:///./src/components/users/UserPreferencesButton.jsx","webpack:///./src/components/users/UserPreferencesModal.jsx","webpack:///./src/pages/EditUsersPage.jsx","webpack:///./src/components/users/EditRolesForm.css","webpack:///./src/components/users/EditRolesForm.css?6458"],"names":["webpackJsonp","1178","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_MultiSelect","_MultiSelect2","RolesSelect","createClass","displayName","propTypes","userRoles","PropTypes","arrayOf","string","availableRoles","array","isRequired","onValueChange","func","getDefaultProps","getValue","this","refs","select","split","render","rolesValue","props","join","rolesOptions","map","role","name","label","createElement","ref","options","placeholder","1179","_reactBootstrap","_bootstrap","_TimeoutUnitSelect","_TimeoutUnitSelect2","TimeoutInput","controlSize","number","labelSize","onChange","getInitialState","unit","_estimateUnit","sessionTimeoutNever","Math","floor","state","timeout","session_timeout_unit","MS_DAY","MS_HOUR","MS_MINUTE","MS_SECOND","_onClick","evt","setState","target","checked","_notifyChange","_onChangeValue","_onChangeUnit","Input","type","id","labelClassName","wrapperClassName","help","Row","Col","sm","className","min","data-validate","disabled","1180","_extends","assign","i","arguments","length","source","key","prototype","hasOwnProperty","call","TimeoutUnitSelect","1184","ValidationsUtils","setFieldValidity","fieldElement","condition","message","setCustomValidity","1324","_Routes","_Routes2","_UserNotification","_UserNotification2","_ObjectUtils","_ObjectUtils2","_StoreProvider","_StoreProvider2","_RolesSelect","_RolesSelect2","_common","_EditRolesForm","_EditRolesForm2","RolesStore","getStore","UsersStore","EditRolesForm","user","object","history","newRoles","componentDidMount","_this","loadRoles","then","roles","sort","r1","r2","localeCompare","_updateRoles","_this2","preventDefault","confirm","username","filter","clone","update","success","replaceState","SYSTEM","AUTHENTICATION","USERS","LIST","error","_onCancel","pushState","_onValueChange","Spinner","rolesAlert","includes","Alert","bsStyle","rolesMissingAlert","externalUser","external","smOffset","style","marginBottom","editUserForm","read_only","marginTop","onSubmit","Button","onClick","md","1329","_reflux","_reflux2","_PermissionsMixin","_PermissionsMixin2","_ValidationsUtils","_ValidationsUtils2","_FormsUtils","_FormsUtils2","_TimeoutInput","_TimeoutInput2","StreamsStore","DashboardsStore","CurrentUserStore","UserForm","mixins","connect","streams","undefined","dashboards","_getUserStateFromProps","listStreams","s1","s2","title","listDashboards","toArray","d1","d2","componentWillReceiveProps","nextProps","full_name","email","session_timeout_ms","timezone","permissions","formatMultiselectOptions","collection","item","formatSelectedOptions","permission","isPermitted","_onPasswordChange","passwordField","password","getInputDOMNode","passwordConfirmField","password_repeat","_changePassword","_this3","request","old_password","changePassword","currentUser","_updateUser","_this4","reload","_updateField","updatedUser","_bindValue","event","getValueFromInput","_onFieldChange","_this5","_onPermissionsChange","entity","_this6","entityIds","userPermissions","slice","newUserPermissions","p","indexOf","updatedPermissions","previousPermissions","forEach","previousPermission","some","entityId","pop","updatePermission","push","concat","goBack","requiresOldPassword","streamReadOptions","streamEditOptions","dashboardReadOptions","dashboardEditOptions","lg","maxLength","required","IfPermitted","Panel","header","htmlFor","MultiSelect","TimezoneSelect","minLength","1331","_UserPreferencesModal","_UserPreferencesModal2","UserPreferencesButton","userName","userPreferencesModal","openModal","1332","_BootstrapModalForm","_BootstrapModalForm2","PreferencesStore","UserPreferencesModal","preferences","_onPreferenceChanged","preferenceToChange","preference","_save","saveUserPreferences","modal","close","loadUserPreferences","open","shouldAutoFocus","formattedPreferences","index","formattedPreference","autoFocus","onSubmitForm","submitButtonText","1375","_UserForm","_UserForm2","_UserPreferencesButton","_UserPreferencesButton2","StartpageStore","EditUsersPage","params","_loadUser","load","_resetStartpage","window","set","resetStartpageButton","startpage","keys","userPreferencesButton","data-user-name","DocumentTitle","PageHeader","subpage","1429","locals","1496","content"],"mappings":"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","file":"28.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([28],{\n\n/***/ 1178:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _MultiSelect = __webpack_require__(274);\n\nvar _MultiSelect2 = _interopRequireDefault(_MultiSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar RolesSelect = _react2.default.createClass({\n  displayName: 'RolesSelect',\n\n  propTypes: {\n    userRoles: _react2.default.PropTypes.arrayOf(_react2.default.PropTypes.string),\n    availableRoles: _react2.default.PropTypes.array.isRequired,\n    onValueChange: _react2.default.PropTypes.func\n  },\n  getDefaultProps: function getDefaultProps() {\n    return {\n      userRoles: []\n    };\n  },\n  getValue: function getValue() {\n    return this.refs.select.getValue().split(',');\n  },\n  render: function render() {\n    var rolesValue = this.props.userRoles.join(',');\n    var rolesOptions = this.props.availableRoles.map(function (role) {\n      return { value: role.name, label: role.name };\n    });\n    return _react2.default.createElement(_MultiSelect2.default, {\n      ref: 'select',\n      options: rolesOptions,\n      value: rolesValue,\n      onValueChange: this.props.onValueChange,\n      placeholder: 'Choose roles...'\n    });\n  }\n});\n\nexports.default = RolesSelect;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1179:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _TimeoutUnitSelect = __webpack_require__(1180);\n\nvar _TimeoutUnitSelect2 = _interopRequireDefault(_TimeoutUnitSelect);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TimeoutInput = _react2.default.createClass({\n  displayName: 'TimeoutInput',\n\n  propTypes: {\n    controlSize: _react2.default.PropTypes.number,\n    labelSize: _react2.default.PropTypes.number,\n    value: _react2.default.PropTypes.number,\n    onChange: _react2.default.PropTypes.func\n  },\n\n  getDefaultProps: function getDefaultProps() {\n    return {\n      value: 60 * 60 * 1000,\n      labelSize: 2,\n      controlSize: 10\n    };\n  },\n  getInitialState: function getInitialState() {\n    var unit = this._estimateUnit(this.props.value);\n    return {\n      sessionTimeoutNever: this.props.value ? this.props.value === -1 : false,\n      value: this.props.value ? Math.floor(this.props.value / unit) : 0,\n      unit: unit\n    };\n  },\n  getValue: function getValue() {\n    if (this.state.sessionTimeoutNever) {\n      return -1;\n    }\n    return this.refs.timeout.value * this.refs.session_timeout_unit.getValue();\n  },\n\n  MS_DAY: 24 * 60 * 60 * 1000,\n  MS_HOUR: 60 * 60 * 1000,\n  MS_MINUTE: 60 * 1000,\n  MS_SECOND: 1000,\n  _estimateUnit: function _estimateUnit(value) {\n    if (value === 0) {\n      return this.MS_SECOND;\n    }\n\n    if (value % this.MS_DAY === 0) {\n      return this.MS_DAY;\n    }\n\n    if (value % this.MS_HOUR === 0) {\n      return this.MS_HOUR;\n    }\n\n    if (value % this.MS_MINUTE === 0) {\n      return this.MS_MINUTE;\n    }\n\n    return this.MS_SECOND;\n  },\n  _onClick: function _onClick(evt) {\n    this.setState({ sessionTimeoutNever: evt.target.checked }, this._notifyChange);\n  },\n  _onChangeValue: function _onChangeValue(evt) {\n    this.setState({ value: evt.target.value }, this._notifyChange);\n  },\n  _onChangeUnit: function _onChangeUnit(evt) {\n    this.setState({ unit: evt.target.value }, this._notifyChange);\n  },\n  _notifyChange: function _notifyChange() {\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(this.getValue());\n    }\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(_bootstrap.Input, { ref: 'session_timeout_never', type: 'checkbox', id: 'session-timeout-never', name: 'session_timeout_never',\n        labelClassName: 'col-sm-' + this.props.controlSize, wrapperClassName: 'col-sm-offset-' + this.props.labelSize + ' col-sm-' + this.props.controlSize,\n        label: 'Sessions do not time out', help: 'When checked sessions never time out due to inactivity.',\n        onChange: this._onClick, checked: this.state.sessionTimeoutNever }),\n      _react2.default.createElement(\n        _bootstrap.Input,\n        { label: 'Timeout',\n          help: 'Session automatically end after this amount of time, unless they are actively used.',\n          labelClassName: 'col-sm-' + this.props.labelSize, wrapperClassName: 'col-sm-' + this.props.controlSize },\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          null,\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { sm: 2 },\n            _react2.default.createElement('input', { ref: 'timeout', type: 'number', id: 'timeout',\n              className: 'session-timeout-fields validatable form-control',\n              name: 'timeout', min: 1, 'data-validate': 'positive_number', disabled: this.state.sessionTimeoutNever,\n              value: this.state.value, onChange: this._onChangeValue })\n          ),\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { sm: 3 },\n            _react2.default.createElement(_TimeoutUnitSelect2.default, { ref: 'session_timeout_unit', className: 'form-control session-timeout-fields',\n              disabled: this.state.sessionTimeoutNever,\n              value: this.state.unit, onChange: this._onChangeUnit })\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = TimeoutInput;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1180:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _extends = Object.assign || function (target) { for (var i = 1; i < arguments.length; i++) { var source = arguments[i]; for (var key in source) { if (Object.prototype.hasOwnProperty.call(source, key)) { target[key] = source[key]; } } } return target; };\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar TimeoutUnitSelect = _react2.default.createClass({\n  displayName: \"TimeoutUnitSelect\",\n  getValue: function getValue() {\n    return this.refs.session_timeout_unit.value;\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      \"select\",\n      _extends({ className: \"form-control\", ref: \"session_timeout_unit\" }, this.props),\n      _react2.default.createElement(\n        \"option\",\n        { value: 1000 },\n        \"Seconds\"\n      ),\n      _react2.default.createElement(\n        \"option\",\n        { value: 60 * 1000 },\n        \"Minutes\"\n      ),\n      _react2.default.createElement(\n        \"option\",\n        { value: 60 * 60 * 1000 },\n        \"Hours\"\n      ),\n      _react2.default.createElement(\n        \"option\",\n        { value: 24 * 60 * 60 * 1000 },\n        \"Days\"\n      )\n    );\n  }\n});\n\nexports.default = TimeoutUnitSelect;\nmodule.exports = exports[\"default\"];\n\n/***/ }),\n\n/***/ 1184:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nvar ValidationsUtils = {\n  setFieldValidity: function setFieldValidity(fieldElement, condition, message) {\n    // Return if browser does not support setCustomValidity\n    if (typeof fieldElement.setCustomValidity !== 'function') {\n      return;\n    }\n\n    fieldElement.setCustomValidity(condition ? message : '');\n  }\n};\n\nexports.default = ValidationsUtils;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1324:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nvar _ObjectUtils = __webpack_require__(259);\n\nvar _ObjectUtils2 = _interopRequireDefault(_ObjectUtils);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _RolesSelect = __webpack_require__(1178);\n\nvar _RolesSelect2 = _interopRequireDefault(_RolesSelect);\n\nvar _common = __webpack_require__(48);\n\nvar _EditRolesForm = __webpack_require__(1496);\n\nvar _EditRolesForm2 = _interopRequireDefault(_EditRolesForm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar RolesStore = _StoreProvider2.default.getStore('Roles');\nvar UsersStore = _StoreProvider2.default.getStore('Users');\n\nvar EditRolesForm = _react2.default.createClass({\n  displayName: 'EditRolesForm',\n\n  propTypes: {\n    user: _react2.default.PropTypes.object.isRequired,\n    history: _react2.default.PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      newRoles: null\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    RolesStore.loadRoles().then(function (roles) {\n      _this.setState({ roles: roles.sort(function (r1, r2) {\n          return r1.name.localeCompare(r2.name);\n        }) });\n    });\n  },\n  _updateRoles: function _updateRoles(evt) {\n    var _this2 = this;\n\n    evt.preventDefault();\n    if (confirm('Really update roles for \"' + this.props.user.username + '\"?')) {\n      var roles = this.refs.roles.getValue().filter(function (value) {\n        return value !== '';\n      });\n      var user = _ObjectUtils2.default.clone(this.props.user);\n      user.roles = roles;\n      UsersStore.update(this.props.user.username, user).then(function () {\n        _UserNotification2.default.success('Roles updated successfully.', 'Success!');\n        _this2.props.history.replaceState(null, _Routes2.default.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }, function () {\n        _UserNotification2.default.error('Updating roles failed.', 'Error!');\n      });\n    }\n  },\n  _onCancel: function _onCancel() {\n    this.props.history.pushState(null, _Routes2.default.SYSTEM.AUTHENTICATION.USERS.LIST);\n  },\n  _onValueChange: function _onValueChange(newRoles) {\n    var roles = newRoles.split(',');\n    this.setState({ newRoles: roles });\n  },\n  render: function render() {\n    var user = this.props.user;\n    if (!this.state.roles) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n    var rolesAlert = null;\n    var roles = this.state.newRoles;\n    if (roles != null && !(roles.includes('Reader') || roles.includes('Admin'))) {\n      rolesAlert = _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'danger', role: 'alert', className: _EditRolesForm2.default.rolesMissingAlert },\n        'You need to select at least one of the ',\n        _react2.default.createElement(\n          'em',\n          null,\n          'Reader'\n        ),\n        ' or ',\n        _react2.default.createElement(\n          'em',\n          null,\n          'Admin'\n        ),\n        ' roles.'\n      );\n    }\n    var externalUser = user.external ? _react2.default.createElement(\n      _reactBootstrap.Col,\n      { smOffset: 3, sm: 9, style: { marginBottom: 15 } },\n      _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'warning', role: 'alert' },\n        'This user was created from an external LDAP system, please consider mapping LDAP groups instead of manually editing roles here. Please update the LDAP group mapping to make changes or contact an administrator for more information.'\n      )\n    ) : null;\n    var editUserForm = user.read_only ? _react2.default.createElement(\n      _reactBootstrap.Col,\n      { smOffset: 3, sm: 9 },\n      _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'warning', role: 'alert' },\n        'You cannot edit the admin\\'s user role.'\n      )\n    ) : _react2.default.createElement(\n      'span',\n      null,\n      externalUser,\n      _react2.default.createElement(\n        'form',\n        { className: 'form-horizontal', style: { marginTop: '10px' }, onSubmit: this._updateRoles },\n        _react2.default.createElement(\n          _bootstrap.Input,\n          { label: 'Roles', help: 'Choose the roles the user should be a member of. All the granted permissions will be combined.',\n            labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9' },\n          _react2.default.createElement(_RolesSelect2.default, { ref: 'roles', userRoles: user.roles, availableRoles: this.state.roles, onValueChange: this._onValueChange })\n        ),\n        _react2.default.createElement(\n          'div',\n          { className: 'form-group' },\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { smOffset: 3, sm: 9 },\n            rolesAlert,\n            _react2.default.createElement(\n              _reactBootstrap.Button,\n              { bsStyle: 'primary', type: 'submit', className: 'save-button-margin', disabled: !!rolesAlert },\n              'Update role'\n            ),\n            _react2.default.createElement(\n              _reactBootstrap.Button,\n              { onClick: this._onCancel },\n              'Cancel'\n            )\n          )\n        )\n      )\n    );\n    return _react2.default.createElement(\n      _reactBootstrap.Row,\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Col,\n        { md: 8 },\n        _react2.default.createElement(\n          'h2',\n          null,\n          'Change user role'\n        ),\n        editUserForm\n      )\n    );\n  }\n});\n\nexports.default = EditRolesForm;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1329:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _PermissionsMixin = __webpack_require__(165);\n\nvar _PermissionsMixin2 = _interopRequireDefault(_PermissionsMixin);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nvar _ValidationsUtils = __webpack_require__(1184);\n\nvar _ValidationsUtils2 = _interopRequireDefault(_ValidationsUtils);\n\nvar _FormsUtils = __webpack_require__(950);\n\nvar _FormsUtils2 = _interopRequireDefault(_FormsUtils);\n\nvar _ObjectUtils = __webpack_require__(259);\n\nvar _ObjectUtils2 = _interopRequireDefault(_ObjectUtils);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _TimeoutInput = __webpack_require__(1179);\n\nvar _TimeoutInput2 = _interopRequireDefault(_TimeoutInput);\n\nvar _EditRolesForm = __webpack_require__(1324);\n\nvar _EditRolesForm2 = _interopRequireDefault(_EditRolesForm);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar StreamsStore = _StoreProvider2.default.getStore('Streams');\nvar DashboardsStore = _StoreProvider2.default.getStore('Dashboards');\nvar CurrentUserStore = _StoreProvider2.default.getStore('CurrentUser');\nvar UsersStore = _StoreProvider2.default.getStore('Users');\n\nvar UserForm = _react2.default.createClass({\n  displayName: 'UserForm',\n\n  propTypes: {\n    user: _react2.default.PropTypes.object.isRequired,\n    history: _react2.default.PropTypes.object\n  },\n  mixins: [_PermissionsMixin2.default, _reflux2.default.connect(CurrentUserStore)],\n  getInitialState: function getInitialState() {\n    return {\n      streams: undefined,\n      dashboards: undefined,\n      user: this._getUserStateFromProps(this.props)\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    StreamsStore.listStreams().then(function (streams) {\n      _this.setState({\n        streams: streams.sort(function (s1, s2) {\n          return s1.title.localeCompare(s2.title);\n        })\n      });\n    });\n    DashboardsStore.listDashboards().then(function (dashboards) {\n      _this.setState({ dashboards: dashboards.toArray().sort(function (d1, d2) {\n          return d1.title.localeCompare(d2.title);\n        }) });\n    });\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this.props.user.username !== nextProps.user.username) {\n      this.setState({\n        user: this._getUserStateFromProps(nextProps)\n      });\n    }\n  },\n  _getUserStateFromProps: function _getUserStateFromProps(props) {\n    return {\n      full_name: props.user.full_name,\n      email: props.user.email,\n      session_timeout_ms: props.user.session_timeout_ms,\n      timezone: props.user.timezone,\n      permissions: props.user.permissions,\n      read_only: props.user.read_only,\n      external: props.user.external,\n      roles: props.user.roles\n    };\n  },\n  formatMultiselectOptions: function formatMultiselectOptions(collection) {\n    return collection.map(function (item) {\n      return { value: item.id, label: item.title };\n    });\n  },\n  formatSelectedOptions: function formatSelectedOptions(permissions, permission, collection) {\n    var _this2 = this;\n\n    return collection.filter(function (item) {\n      return _this2.isPermitted(permissions, [permission + ':' + item.id]);\n    }).map(function (item) {\n      return item.id;\n    }).join(',');\n  },\n  _onPasswordChange: function _onPasswordChange() {\n    var passwordField = this.refs.password.getInputDOMNode();\n    var passwordConfirmField = this.refs.password_repeat.getInputDOMNode();\n\n    if (passwordField.value !== '' && passwordConfirmField.value !== '') {\n      _ValidationsUtils2.default.setFieldValidity(passwordConfirmField, passwordField.value !== passwordConfirmField.value, 'Passwords do not match');\n    }\n  },\n  _changePassword: function _changePassword(evt) {\n    var _this3 = this;\n\n    evt.preventDefault();\n    var request = {};\n\n    if (this.refs.old_password) {\n      request.old_password = this.refs.old_password.getValue();\n    }\n    request.password = this.refs.password.getValue();\n\n    UsersStore.changePassword(this.props.user.username, request).then(function () {\n      _UserNotification2.default.success('Password updated successfully.', 'Success');\n      if (_this3.isPermitted(_this3.state.currentUser.permissions, ['users:list'])) {\n        _this3.props.history.replaceState(null, _Routes2.default.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }\n    }, function () {\n      _UserNotification2.default.error('Could not update password. Please verify that your current password is correct.', 'Updating password failed');\n    });\n  },\n  _updateUser: function _updateUser(evt) {\n    var _this4 = this;\n\n    evt.preventDefault();\n\n    UsersStore.update(this.props.user.username, this.state.user).then(function () {\n      _UserNotification2.default.success('User updated successfully.', 'Success');\n      if (_this4.isPermitted(_this4.state.currentUser.permissions, ['users:list'])) {\n        _this4.props.history.replaceState(null, _Routes2.default.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }\n      if (_this4.props.user.username === _this4.state.currentUser.username) {\n        CurrentUserStore.reload();\n      }\n    }, function () {\n      _UserNotification2.default.error('Could not update the user. Please check your logs for more information.', 'Updating user failed');\n    });\n  },\n  _updateField: function _updateField(name, value) {\n    var updatedUser = _ObjectUtils2.default.clone(this.state.user);\n    updatedUser[name] = value;\n    this.setState({ user: updatedUser });\n  },\n  _bindValue: function _bindValue(event) {\n    this._updateField(event.target.name, _FormsUtils2.default.getValueFromInput(event.target));\n  },\n  _onFieldChange: function _onFieldChange(name) {\n    var _this5 = this;\n\n    return function (value) {\n      _this5._updateField(name, value);\n    };\n  },\n  _onPermissionsChange: function _onPermissionsChange(entity, permission) {\n    var _this6 = this;\n\n    return function (entityIds) {\n      var userPermissions = _this6.state.user.permissions.slice();\n      var newUserPermissions = userPermissions.filter(function (p) {\n        return p.indexOf(entity + ':' + permission) !== 0;\n      });\n\n      var updatedPermissions = entityIds === '' ? [] : entityIds.split(',').map(function (id) {\n        return entity + ':' + permission + ':' + id;\n      });\n      var previousPermissions = userPermissions.filter(function (p) {\n        return p.indexOf(entity + ':' + permission) === 0;\n      });\n\n      // Remove edit permissions to entities without read permissions\n      if (permission === 'read') {\n        previousPermissions.forEach(function (previousPermission) {\n          // Do nothing if permission is still there\n          if (updatedPermissions.some(function (p) {\n            return p === previousPermission;\n          })) {\n            return;\n          }\n\n          // Remove edit permission\n          var entityId = previousPermission.split(':').pop();\n          newUserPermissions = newUserPermissions.filter(function (p) {\n            return p !== entity + ':edit:' + entityId;\n          });\n        });\n      }\n\n      // Grant read permissions to entities with edit permissions\n      if (permission === 'edit') {\n        updatedPermissions.forEach(function (updatePermission) {\n          // Do nothing if permission was there before\n          if (previousPermissions.some(function (p) {\n            return p === updatePermission;\n          })) {\n            return;\n          }\n\n          // Grant read permission\n          var entityId = updatePermission.split(':').pop();\n          newUserPermissions.push(entity + ':read:' + entityId);\n        });\n      }\n\n      _this6._updateField('permissions', newUserPermissions.concat(updatedPermissions));\n    };\n  },\n  _onCancel: function _onCancel() {\n    this.props.history.goBack();\n  },\n  render: function render() {\n    if (!this.state.streams || !this.state.dashboards) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var user = this.state.user;\n    var permissions = this.state.currentUser.permissions;\n\n    var requiresOldPassword = true;\n    if (this.isPermitted(permissions, 'users:passwordchange:*')) {\n      // Ask for old password if user is editing their own account\n      requiresOldPassword = this.props.user.username === this.state.currentUser.username;\n    }\n\n    var streamReadOptions = this.formatSelectedOptions(this.state.user.permissions, 'streams:read', this.state.streams);\n    var streamEditOptions = this.formatSelectedOptions(this.state.user.permissions, 'streams:edit', this.state.streams);\n\n    var dashboardReadOptions = this.formatSelectedOptions(this.state.user.permissions, 'dashboards:read', this.state.dashboards);\n    var dashboardEditOptions = this.formatSelectedOptions(this.state.user.permissions, 'dashboards:edit', this.state.dashboards);\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Row,\n        null,\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { lg: 8 },\n          _react2.default.createElement(\n            'h2',\n            null,\n            'User information'\n          ),\n          _react2.default.createElement(\n            'form',\n            { className: 'form-horizontal user-form', id: 'edit-user-form', onSubmit: this._updateUser },\n            user.read_only && _react2.default.createElement(\n              'span',\n              null,\n              _react2.default.createElement(\n                _reactBootstrap.Col,\n                { smOffset: 3, sm: 9 },\n                _react2.default.createElement(\n                  _reactBootstrap.Alert,\n                  { bsStyle: 'warning', role: 'alert' },\n                  'The admin user can only be modified in your Graylog server configuration file.'\n                )\n              ),\n              _react2.default.createElement('div', { className: 'clearfix' }),\n              _react2.default.createElement('br', null)\n            ),\n            _react2.default.createElement(\n              'fieldset',\n              { disabled: user.read_only },\n              _react2.default.createElement(_bootstrap.Input, { name: 'full_name', id: 'full_name', type: 'text', maxLength: 200, value: user.full_name,\n                onChange: this._bindValue, labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9',\n                label: 'Full Name', help: 'Give a descriptive name for this account, e.g. the full name.',\n                required: true }),\n              _react2.default.createElement(_bootstrap.Input, { ref: 'email', name: 'email', id: 'email', type: 'email', maxLength: 254, value: user.email,\n                onChange: this._bindValue, labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9',\n                label: 'Email Address', help: 'Give the contact email address.', required: true }),\n              _react2.default.createElement(\n                _common.IfPermitted,\n                { permissions: 'users:edit' },\n                _react2.default.createElement(\n                  'span',\n                  null,\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'form-group' },\n                    _react2.default.createElement(\n                      _reactBootstrap.Col,\n                      { sm: 9, smOffset: 3 },\n                      _react2.default.createElement(\n                        _reactBootstrap.Panel,\n                        { bsStyle: 'danger', header: 'Setting individual permissions is deprecated, please consider migrating to roles instead.' },\n                        'The permissions listed here are the result of combining all granted permissions by the roles assigned to a user, which you can edit at the bottom of this page, as well as legacy, individual permissions which were assigned to the user before.'\n                      )\n                    ),\n                    _react2.default.createElement(\n                      'label',\n                      { className: 'col-sm-3 control-label', htmlFor: 'streampermissions' },\n                      'Streams Permissions'\n                    ),\n                    _react2.default.createElement(\n                      _reactBootstrap.Col,\n                      { sm: 9 },\n                      _react2.default.createElement(_common.MultiSelect, { ref: 'streamReadOptions', placeholder: 'Choose streams read permissions...',\n                        options: this.formatMultiselectOptions(this.state.streams),\n                        value: streamReadOptions,\n                        onChange: this._onPermissionsChange('streams', 'read') }),\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'help-block' },\n                        'Choose streams the user can ',\n                        _react2.default.createElement(\n                          'strong',\n                          null,\n                          'view'\n                        ),\n                        '. Removing read access will remove edit access, too.'\n                      ),\n                      _react2.default.createElement(_common.MultiSelect, { ref: 'streamEditOptions', placeholder: 'Choose streams edit permissions...',\n                        options: this.formatMultiselectOptions(this.state.streams),\n                        value: streamEditOptions,\n                        onChange: this._onPermissionsChange('streams', 'edit') }),\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'help-block' },\n                        'Choose the streams the user can ',\n                        _react2.default.createElement(\n                          'strong',\n                          null,\n                          'edit'\n                        ),\n                        '. Values chosen here will enable read access, too.'\n                      )\n                    )\n                  ),\n                  _react2.default.createElement(\n                    'div',\n                    { className: 'form-group' },\n                    _react2.default.createElement(\n                      'label',\n                      { className: 'col-sm-3 control-label', htmlFor: 'dashboardpermissions' },\n                      'Dashboard Permissions'\n                    ),\n                    _react2.default.createElement(\n                      _reactBootstrap.Col,\n                      { sm: 9 },\n                      _react2.default.createElement(_common.MultiSelect, { ref: 'dashboardReadOptions', placeholder: 'Choose dashboards read permissions...',\n                        options: this.formatMultiselectOptions(this.state.dashboards),\n                        value: dashboardReadOptions,\n                        onChange: this._onPermissionsChange('dashboards', 'read') }),\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'help-block' },\n                        'Choose dashboards the user can ',\n                        _react2.default.createElement(\n                          'strong',\n                          null,\n                          'view'\n                        ),\n                        '. Removing read access will remove edit access, too.'\n                      ),\n                      _react2.default.createElement(_common.MultiSelect, { ref: 'dashboardEditOptions', placeholder: 'Choose dashboards edit permissions...',\n                        options: this.formatMultiselectOptions(this.state.dashboards),\n                        value: dashboardEditOptions,\n                        onChange: this._onPermissionsChange('dashboards', 'edit') }),\n                      _react2.default.createElement(\n                        'span',\n                        { className: 'help-block' },\n                        'Choose dashboards the user can ',\n                        _react2.default.createElement(\n                          'strong',\n                          null,\n                          'edit'\n                        ),\n                        '. Values chosen here will enable read access, too.'\n                      )\n                    )\n                  )\n                )\n              ),\n              _react2.default.createElement(\n                _common.IfPermitted,\n                { permissions: '*' },\n                _react2.default.createElement(_TimeoutInput2.default, { ref: 'session_timeout_ms', value: user.session_timeout_ms, labelSize: 3, controlSize: 9,\n                  onChange: this._onFieldChange('session_timeout_ms') })\n              ),\n              _react2.default.createElement(\n                _bootstrap.Input,\n                { label: 'Time Zone',\n                  help: 'Choose your local time zone or leave it as it is to use the system\\'s default.',\n                  labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9' },\n                _react2.default.createElement(_common.TimezoneSelect, { ref: 'timezone', className: 'timezone-select', value: user.timezone,\n                  onChange: this._onFieldChange('timezone') })\n              ),\n              _react2.default.createElement(\n                'div',\n                { className: 'form-group' },\n                _react2.default.createElement(\n                  _reactBootstrap.Col,\n                  { smOffset: 3, sm: 9 },\n                  _react2.default.createElement(\n                    _reactBootstrap.Button,\n                    { type: 'submit', bsStyle: 'primary', className: 'create-user save-button-margin' },\n                    'Update User'\n                  ),\n                  _react2.default.createElement(\n                    _reactBootstrap.Button,\n                    { onClick: this._onCancel },\n                    'Cancel'\n                  )\n                )\n              )\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _reactBootstrap.Row,\n        null,\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { lg: 8 },\n          _react2.default.createElement(\n            'h2',\n            null,\n            'Change password'\n          ),\n          user.read_only ? _react2.default.createElement(\n            _reactBootstrap.Col,\n            { smOffset: 3, sm: 9 },\n            _react2.default.createElement(\n              _reactBootstrap.Alert,\n              { bsStyle: 'warning', role: 'alert' },\n              'Please edit your Graylog server configuration file to change the admin password.'\n            )\n          ) : user.external ? _react2.default.createElement(\n            _reactBootstrap.Col,\n            { smOffset: 3, sm: 9 },\n            _react2.default.createElement(\n              _reactBootstrap.Alert,\n              { bsStyle: 'warning', role: 'alert' },\n              'This user was created from an external system and you can\\'t change the password here. Please contact an administrator for more information.'\n            )\n          ) : _react2.default.createElement(\n            'form',\n            { className: 'form-horizontal', style: { marginTop: 10 }, onSubmit: this._changePassword },\n            requiresOldPassword && _react2.default.createElement(_bootstrap.Input, { ref: 'old_password', name: 'old_password', id: 'old_password', type: 'password', maxLength: 100,\n              labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9',\n              label: 'Old Password', required: true }),\n            _react2.default.createElement(_bootstrap.Input, { ref: 'password', name: 'password', id: 'password', type: 'password', maxLength: 100,\n              labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9',\n              label: 'New Password', required: true, minLength: '6',\n              help: 'Passwords must be at least 6 characters long. We recommend using a strong password.',\n              onChange: this._onPasswordChange }),\n            _react2.default.createElement(_bootstrap.Input, { ref: 'password_repeat', name: 'password_repeat', id: 'password_repeat', type: 'password', maxLength: 100,\n              labelClassName: 'col-sm-3', wrapperClassName: 'col-sm-9',\n              label: 'Repeat Password', required: true, minLength: '6', onChange: this._onPasswordChange }),\n            _react2.default.createElement(\n              'div',\n              { className: 'form-group' },\n              _react2.default.createElement(\n                _reactBootstrap.Col,\n                { smOffset: 3, sm: 9 },\n                _react2.default.createElement(\n                  _reactBootstrap.Button,\n                  { bsStyle: 'primary', type: 'submit', className: 'save-button-margin' },\n                  'Update Password'\n                ),\n                _react2.default.createElement(\n                  _reactBootstrap.Button,\n                  { onClick: this._onCancel },\n                  'Cancel'\n                )\n              )\n            )\n          )\n        )\n      ),\n      _react2.default.createElement(\n        _common.IfPermitted,\n        { permissions: 'users:rolesedit' },\n        _react2.default.createElement(_EditRolesForm2.default, { user: this.props.user, history: this.props.history })\n      )\n    );\n  }\n});\n\nexports.default = UserForm;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1331:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _UserPreferencesModal = __webpack_require__(1332);\n\nvar _UserPreferencesModal2 = _interopRequireDefault(_UserPreferencesModal);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UserPreferencesButton = _react2.default.createClass({\n  displayName: 'UserPreferencesButton',\n\n  propTypes: {\n    userName: _react2.default.PropTypes.string.isRequired\n  },\n  onClick: function onClick() {\n    this.refs.userPreferencesModal.openModal();\n  },\n  render: function render() {\n    return _react2.default.createElement(\n      'span',\n      null,\n      _react2.default.createElement(\n        _reactBootstrap.Button,\n        { onClick: this.onClick, bsStyle: 'success' },\n        'User preferences'\n      ),\n      _react2.default.createElement(_UserPreferencesModal2.default, { ref: 'userPreferencesModal', userName: this.props.userName })\n    );\n  }\n});\n\nexports.default = UserPreferencesButton;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1332:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _BootstrapModalForm = __webpack_require__(261);\n\nvar _BootstrapModalForm2 = _interopRequireDefault(_BootstrapModalForm);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar PreferencesStore = _StoreProvider2.default.getStore('Preferences');\n\nvar UserPreferencesModal = _react2.default.createClass({\n  displayName: 'UserPreferencesModal',\n\n  propTypes: {\n    userName: _react2.default.PropTypes.string.isRequired\n  },\n  getInitialState: function getInitialState() {\n    return { preferences: [] };\n  },\n  _onPreferenceChanged: function _onPreferenceChanged(event) {\n    var name = event.target.name;\n    var preferenceToChange = this.state.preferences.filter(function (preference) {\n      return preference.name === name;\n    })[0];\n    // TODO: we need the type of the preference to set it properly\n    if (preferenceToChange) {\n      preferenceToChange.value = event.target.value;\n      this.setState({ preferences: this.state.preferences });\n    }\n  },\n  _save: function _save() {\n    PreferencesStore.saveUserPreferences(this.state.preferences, this.refs.modal.close);\n  },\n  openModal: function openModal() {\n    var _this = this;\n\n    PreferencesStore.loadUserPreferences(this.props.userName, function (preferences) {\n      _this.setState({ preferences: preferences });\n      _this.refs.modal.open();\n    });\n  },\n  render: function render() {\n    var _this2 = this;\n\n    var shouldAutoFocus = true;\n\n    var formattedPreferences = this.state.preferences.map(function (preference, index) {\n      var formattedPreference = _react2.default.createElement(\n        'div',\n        { className: 'form-group', key: preference.name + '-' + index },\n        _react2.default.createElement(_bootstrap.Input, { type: 'text',\n          id: preference.name + '-' + index,\n          name: preference.name,\n          label: preference.name,\n          onChange: _this2._onPreferenceChanged,\n          value: preference.value,\n          required: true,\n          autoFocus: shouldAutoFocus })\n      );\n\n      if (shouldAutoFocus) {\n        shouldAutoFocus = false;\n      }\n\n      return formattedPreference;\n    });\n    return _react2.default.createElement(\n      _BootstrapModalForm2.default,\n      { ref: 'modal',\n        title: 'Preferences for user ' + this.props.userName,\n        onSubmitForm: this._save,\n        submitButtonText: 'Save' },\n      _react2.default.createElement(\n        'div',\n        null,\n        formattedPreferences\n      )\n    );\n  }\n});\n\nexports.default = UserPreferencesModal;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1375:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _UserForm = __webpack_require__(1329);\n\nvar _UserForm2 = _interopRequireDefault(_UserForm);\n\nvar _UserPreferencesButton = __webpack_require__(1331);\n\nvar _UserPreferencesButton2 = _interopRequireDefault(_UserPreferencesButton);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UsersStore = _StoreProvider2.default.getStore('Users');\nvar StartpageStore = _StoreProvider2.default.getStore('Startpage');\n\nvar EditUsersPage = _react2.default.createClass({\n  displayName: 'EditUsersPage',\n\n  propTypes: {\n    params: _react2.default.PropTypes.object.isRequired,\n    history: _react2.default.PropTypes.object\n  },\n  getInitialState: function getInitialState() {\n    return {\n      user: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this._loadUser(this.props.params.username);\n  },\n  componentWillReceiveProps: function componentWillReceiveProps(nextProps) {\n    if (this.props.params.username !== nextProps.params.username) {\n      this._loadUser(nextProps.params.username);\n    }\n  },\n  _loadUser: function _loadUser(username) {\n    var _this = this;\n\n    UsersStore.load(username).then(function (user) {\n      _this.setState({ user: user });\n    });\n  },\n  _resetStartpage: function _resetStartpage() {\n    var _this2 = this;\n\n    if (window.confirm('Are you sure you want to reset the start page?')) {\n      var username = this.props.params.username;\n      StartpageStore.set(username).then(function () {\n        return _this2._loadUser(username);\n      });\n    }\n  },\n  render: function render() {\n    if (!this.state.user) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var user = this.state.user;\n    var resetStartpageButton = void 0;\n    if (!user.read_only && user.startpage !== null && Object.keys(user.startpage).length > 0) {\n      resetStartpageButton = _react2.default.createElement(\n        _reactBootstrap.Button,\n        { bsStyle: 'info', onClick: this._resetStartpage },\n        'Reset custom startpage'\n      );\n    }\n\n    var userPreferencesButton = !user.read_only ? _react2.default.createElement(\n      'span',\n      { id: 'react-user-preferences-button', 'data-user-name': this.props.params.username },\n      _react2.default.createElement(_UserPreferencesButton2.default, { userName: user.username })\n    ) : null;\n\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Edit user ' + this.props.params.username },\n      _react2.default.createElement(\n        'span',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: _react2.default.createElement(\n              'span',\n              null,\n              'Edit user ',\n              _react2.default.createElement(\n                'em',\n                null,\n                this.props.params.username\n              )\n            ), subpage: true },\n          _react2.default.createElement(\n            'span',\n            null,\n            'You can either change the details of a user here or set a new password.'\n          ),\n          null,\n          _react2.default.createElement(\n            'div',\n            null,\n            resetStartpageButton,\n            ' ',\n            userPreferencesButton\n          )\n        ),\n        _react2.default.createElement(_UserForm2.default, { user: this.state.user, history: this.props.history })\n      )\n    );\n  }\n});\n\nexports.default = EditUsersPage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 1429:\n/***/ (function(module, exports, __webpack_require__) {\n\nexports = module.exports = __webpack_require__(19)();\n// imports\n\n\n// module\nexports.push([module.i, \"._1JCP9xI-zM9iz_soNhwBa_{margin-top:-15px;margin-bottom:20px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"rolesMissingAlert\": \"_1JCP9xI-zM9iz_soNhwBa_\"\n};\n\n/***/ }),\n\n/***/ 1496:\n/***/ (function(module, exports, __webpack_require__) {\n\n// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = __webpack_require__(1429);\nif(typeof content === 'string') content = [[module.i, content, '']];\n// add the styles to the DOM\nvar update = __webpack_require__(20)(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(false) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./EditRolesForm.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./EditRolesForm.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 28.200197dca04f05abe3f2.js","import React from 'react';\n\nimport MultiSelect from 'components/common/MultiSelect';\n\nconst RolesSelect = React.createClass({\n  propTypes: {\n    userRoles: React.PropTypes.arrayOf(React.PropTypes.string),\n    availableRoles: React.PropTypes.array.isRequired,\n    onValueChange: React.PropTypes.func,\n  },\n  getDefaultProps() {\n    return {\n      userRoles: [],\n    };\n  },\n  getValue() {\n    return this.refs.select.getValue().split(',');\n  },\n  render() {\n    const rolesValue = this.props.userRoles.join(',');\n    const rolesOptions = this.props.availableRoles.map((role) => {\n      return { value: role.name, label: role.name };\n    });\n    return (\n      <MultiSelect\n        ref=\"select\"\n        options={rolesOptions}\n        value={rolesValue}\n        onValueChange={this.props.onValueChange}\n        placeholder=\"Choose roles...\"\n      />\n    );\n  },\n});\n\nexport default RolesSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/RolesSelect.jsx","import React from 'react';\nimport { Row, Col } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport TimeoutUnitSelect from 'components/users/TimeoutUnitSelect';\n\nconst TimeoutInput = React.createClass({\n  propTypes: {\n    controlSize: React.PropTypes.number,\n    labelSize: React.PropTypes.number,\n    value: React.PropTypes.number,\n    onChange: React.PropTypes.func,\n  },\n\n  getDefaultProps() {\n    return {\n      value: 60 * 60 * 1000,\n      labelSize: 2,\n      controlSize: 10,\n    };\n  },\n  getInitialState() {\n    const unit = this._estimateUnit(this.props.value);\n    return {\n      sessionTimeoutNever: (this.props.value ? this.props.value === -1 : false),\n      value: (this.props.value ? Math.floor(this.props.value / unit) : 0),\n      unit: unit,\n    };\n  },\n  getValue() {\n    if (this.state.sessionTimeoutNever) {\n      return -1;\n    }\n    return (this.refs.timeout.value * this.refs.session_timeout_unit.getValue());\n  },\n  MS_DAY: 24 * 60 * 60 * 1000,\n  MS_HOUR: 60 * 60 * 1000,\n  MS_MINUTE: 60 * 1000,\n  MS_SECOND: 1000,\n  _estimateUnit(value) {\n    if (value === 0) {\n      return this.MS_SECOND;\n    }\n\n    if (value % this.MS_DAY === 0) {\n      return this.MS_DAY;\n    }\n\n    if (value % this.MS_HOUR === 0) {\n      return this.MS_HOUR;\n    }\n\n    if (value % this.MS_MINUTE === 0) {\n      return this.MS_MINUTE;\n    }\n\n    return this.MS_SECOND;\n  },\n  _onClick(evt) {\n    this.setState({ sessionTimeoutNever: evt.target.checked }, this._notifyChange);\n  },\n  _onChangeValue(evt) {\n    this.setState({ value: evt.target.value }, this._notifyChange);\n  },\n  _onChangeUnit(evt) {\n    this.setState({ unit: evt.target.value }, this._notifyChange);\n  },\n  _notifyChange() {\n    if (typeof this.props.onChange === 'function') {\n      this.props.onChange(this.getValue());\n    }\n  },\n  render() {\n    return (\n      <span>\n        <Input ref=\"session_timeout_never\" type=\"checkbox\" id=\"session-timeout-never\" name=\"session_timeout_never\"\n               labelClassName={`col-sm-${this.props.controlSize}`} wrapperClassName={`col-sm-offset-${this.props.labelSize} col-sm-${this.props.controlSize}`}\n               label=\"Sessions do not time out\" help=\"When checked sessions never time out due to inactivity.\"\n               onChange={this._onClick} checked={this.state.sessionTimeoutNever} />\n\n        <Input label=\"Timeout\"\n               help=\"Session automatically end after this amount of time, unless they are actively used.\"\n               labelClassName={`col-sm-${this.props.labelSize}`} wrapperClassName={`col-sm-${this.props.controlSize}`}>\n          <Row>\n            <Col sm={2}>\n              <input ref=\"timeout\" type=\"number\" id=\"timeout\"\n                     className=\"session-timeout-fields validatable form-control\"\n                     name=\"timeout\" min={1} data-validate=\"positive_number\" disabled={this.state.sessionTimeoutNever}\n                     value={this.state.value} onChange={this._onChangeValue} />\n            </Col>\n            <Col sm={3}>\n              <TimeoutUnitSelect ref=\"session_timeout_unit\" className=\"form-control session-timeout-fields\"\n                                 disabled={this.state.sessionTimeoutNever}\n                                 value={this.state.unit} onChange={this._onChangeUnit} />\n            </Col>\n          </Row>\n        </Input>\n      </span>\n    );\n  },\n});\n\nexport default TimeoutInput;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/TimeoutInput.jsx","\nimport React from 'react';\n\nconst TimeoutUnitSelect = React.createClass({\n  getValue() {\n    return this.refs.session_timeout_unit.value;\n  },\n  render() {\n    return (\n      <select className=\"form-control\" ref=\"session_timeout_unit\" {...this.props}>\n        <option value={1000}>Seconds</option>\n        <option value={60 * 1000}>Minutes</option>\n        <option value={60 * 60 * 1000}>Hours</option>\n        <option value={24 * 60 * 60 * 1000}>Days</option>\n      </select>\n    );\n  },\n});\n\nexport default TimeoutUnitSelect;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/TimeoutUnitSelect.jsx","const ValidationsUtils = {\n  setFieldValidity(fieldElement, condition, message) {\n    // Return if browser does not support setCustomValidity\n    if (typeof fieldElement.setCustomValidity !== 'function') {\n      return;\n    }\n\n    fieldElement.setCustomValidity(condition ? message : '');\n  },\n};\n\nexport default ValidationsUtils;\n\n\n\n// WEBPACK FOOTER //\n// ./src/util/ValidationsUtils.js","import React from 'react';\nimport { Alert, Col, Button, Row } from 'react-bootstrap';\nimport Routes from 'routing/Routes';\n\nimport { Input } from 'components/bootstrap';\nimport UserNotification from 'util/UserNotification';\nimport ObjectUtils from 'util/ObjectUtils';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst RolesStore = StoreProvider.getStore('Roles');\nconst UsersStore = StoreProvider.getStore('Users');\n\nimport RolesSelect from 'components/users/RolesSelect';\nimport { Spinner } from 'components/common';\n\nimport EditRolesFormStyle from '!style!css!./EditRolesForm.css';\n\nconst EditRolesForm = React.createClass({\n  propTypes: {\n    user: React.PropTypes.object.isRequired,\n    history: React.PropTypes.object,\n  },\n  getInitialState() {\n    return {\n      newRoles: null,\n    };\n  },\n  componentDidMount() {\n    RolesStore.loadRoles().then((roles) => {\n      this.setState({ roles: roles.sort((r1, r2) => r1.name.localeCompare(r2.name)) });\n    });\n  },\n  _updateRoles(evt) {\n    evt.preventDefault();\n    if (confirm(`Really update roles for \"${this.props.user.username}\"?`)) {\n      const roles = this.refs.roles.getValue().filter(value => value !== '');\n      const user = ObjectUtils.clone(this.props.user);\n      user.roles = roles;\n      UsersStore.update(this.props.user.username, user).then(() => {\n        UserNotification.success('Roles updated successfully.', 'Success!');\n        this.props.history.replaceState(null, Routes.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }, () => {\n        UserNotification.error('Updating roles failed.', 'Error!');\n      });\n    }\n  },\n  _onCancel() {\n    this.props.history.pushState(null, Routes.SYSTEM.AUTHENTICATION.USERS.LIST);\n  },\n  _onValueChange(newRoles) {\n    const roles = newRoles.split(',');\n    this.setState({ newRoles: roles });\n  },\n  render() {\n    const user = this.props.user;\n    if (!this.state.roles) {\n      return <Spinner />;\n    }\n    let rolesAlert = null;\n    const roles = this.state.newRoles;\n    if (roles != null && !(roles.includes('Reader') || roles.includes('Admin'))) {\n      rolesAlert = (<Alert bsStyle=\"danger\" role=\"alert\" className={EditRolesFormStyle.rolesMissingAlert}>\n        You need to select at least one of the <em>Reader</em> or <em>Admin</em> roles.\n      </Alert>);\n    }\n    const externalUser = user.external ?\n      (\n        <Col smOffset={3} sm={9} style={{ marginBottom: 15 }}>\n          <Alert bsStyle=\"warning\" role=\"alert\">\n            This user was created from an external LDAP system, please consider mapping LDAP groups instead of manually editing roles here.\n            Please update the LDAP group mapping to make changes or contact an administrator for more information.\n          </Alert>\n        </Col>\n      ) : null;\n    const editUserForm = user.read_only ? (\n      <Col smOffset={3} sm={9}>\n        <Alert bsStyle=\"warning\" role=\"alert\">\n          You cannot edit the admin's user role.\n        </Alert>\n      </Col>\n    ) : (\n      <span>\n        {externalUser}\n        <form className=\"form-horizontal\" style={{ marginTop: '10px' }} onSubmit={this._updateRoles}>\n          <Input label=\"Roles\" help=\"Choose the roles the user should be a member of. All the granted permissions will be combined.\"\n                 labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\">\n            <RolesSelect ref=\"roles\" userRoles={user.roles} availableRoles={this.state.roles} onValueChange={this._onValueChange} />\n          </Input>\n          <div className=\"form-group\">\n            <Col smOffset={3} sm={9}>\n              {rolesAlert}\n              <Button bsStyle=\"primary\" type=\"submit\" className=\"save-button-margin\" disabled={!!rolesAlert}>\n                Update role\n              </Button>\n              <Button onClick={this._onCancel}>Cancel</Button>\n            </Col>\n          </div>\n        </form>\n      </span>\n    );\n    return (\n      <Row>\n        <Col md={8}>\n          <h2>Change user role</h2>\n          {editUserForm}\n        </Col>\n      </Row>\n    );\n  },\n});\n\nexport default EditRolesForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/EditRolesForm.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button, Row, Col, Alert, Panel } from 'react-bootstrap';\nimport Routes from 'routing/Routes';\n\nimport { Input } from 'components/bootstrap';\nimport PermissionsMixin from 'util/PermissionsMixin';\nimport UserNotification from 'util/UserNotification';\nimport ValidationsUtils from 'util/ValidationsUtils';\nimport FormsUtils from 'util/FormsUtils';\nimport ObjectUtils from 'util/ObjectUtils';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst StreamsStore = StoreProvider.getStore('Streams');\nconst DashboardsStore = StoreProvider.getStore('Dashboards');\nconst CurrentUserStore = StoreProvider.getStore('CurrentUser');\nconst UsersStore = StoreProvider.getStore('Users');\n\nimport TimeoutInput from 'components/users/TimeoutInput';\nimport EditRolesForm from 'components/users/EditRolesForm';\nimport { IfPermitted, MultiSelect, TimezoneSelect, Spinner } from 'components/common';\n\nconst UserForm = React.createClass({\n  propTypes: {\n    user: React.PropTypes.object.isRequired,\n    history: React.PropTypes.object,\n  },\n  mixins: [PermissionsMixin, Reflux.connect(CurrentUserStore)],\n  getInitialState() {\n    return {\n      streams: undefined,\n      dashboards: undefined,\n      user: this._getUserStateFromProps(this.props),\n    };\n  },\n  componentDidMount() {\n    StreamsStore.listStreams().then((streams) => {\n      this.setState({\n        streams: streams.sort((s1, s2) => s1.title.localeCompare(s2.title)),\n      });\n    });\n    DashboardsStore.listDashboards().then((dashboards) => {\n      this.setState({ dashboards: dashboards.toArray().sort((d1, d2) => d1.title.localeCompare(d2.title)) });\n    });\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.user.username !== nextProps.user.username) {\n      this.setState({\n        user: this._getUserStateFromProps(nextProps),\n      });\n    }\n  },\n\n  _getUserStateFromProps(props) {\n    return {\n      full_name: props.user.full_name,\n      email: props.user.email,\n      session_timeout_ms: props.user.session_timeout_ms,\n      timezone: props.user.timezone,\n      permissions: props.user.permissions,\n      read_only: props.user.read_only,\n      external: props.user.external,\n      roles: props.user.roles,\n    };\n  },\n\n  formatMultiselectOptions(collection) {\n    return collection.map((item) => {\n      return { value: item.id, label: item.title };\n    });\n  },\n  formatSelectedOptions(permissions, permission, collection) {\n    return collection\n      .filter(item => this.isPermitted(permissions, [`${permission}:${item.id}`]))\n      .map(item => item.id)\n      .join(',');\n  },\n  _onPasswordChange() {\n    const passwordField = this.refs.password.getInputDOMNode();\n    const passwordConfirmField = this.refs.password_repeat.getInputDOMNode();\n\n    if (passwordField.value !== '' && passwordConfirmField.value !== '') {\n      ValidationsUtils.setFieldValidity(passwordConfirmField, passwordField.value !== passwordConfirmField.value, 'Passwords do not match');\n    }\n  },\n\n  _changePassword(evt) {\n    evt.preventDefault();\n    const request = {};\n\n    if (this.refs.old_password) {\n      request.old_password = this.refs.old_password.getValue();\n    }\n    request.password = this.refs.password.getValue();\n\n    UsersStore.changePassword(this.props.user.username, request).then(() => {\n      UserNotification.success('Password updated successfully.', 'Success');\n      if (this.isPermitted(this.state.currentUser.permissions, ['users:list'])) {\n        this.props.history.replaceState(null, Routes.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }\n    }, () => {\n      UserNotification.error('Could not update password. Please verify that your current password is correct.', 'Updating password failed');\n    });\n  },\n\n  _updateUser(evt) {\n    evt.preventDefault();\n\n    UsersStore.update(this.props.user.username, this.state.user).then(() => {\n      UserNotification.success('User updated successfully.', 'Success');\n      if (this.isPermitted(this.state.currentUser.permissions, ['users:list'])) {\n        this.props.history.replaceState(null, Routes.SYSTEM.AUTHENTICATION.USERS.LIST);\n      }\n      if (this.props.user.username === this.state.currentUser.username) {\n        CurrentUserStore.reload();\n      }\n    }, () => {\n      UserNotification.error('Could not update the user. Please check your logs for more information.', 'Updating user failed');\n    });\n  },\n\n  _updateField(name, value) {\n    const updatedUser = ObjectUtils.clone(this.state.user);\n    updatedUser[name] = value;\n    this.setState({ user: updatedUser });\n  },\n\n  _bindValue(event) {\n    this._updateField(event.target.name, FormsUtils.getValueFromInput(event.target));\n  },\n\n  _onFieldChange(name) {\n    return (value) => {\n      this._updateField(name, value);\n    };\n  },\n\n  _onPermissionsChange(entity, permission) {\n    return (entityIds) => {\n      const userPermissions = this.state.user.permissions.slice();\n      let newUserPermissions = userPermissions.filter(p => p.indexOf(`${entity}:${permission}`) !== 0);\n\n      const updatedPermissions = entityIds === '' ? [] : entityIds.split(',').map(id => `${entity}:${permission}:${id}`);\n      const previousPermissions = userPermissions.filter(p => p.indexOf(`${entity}:${permission}`) === 0);\n\n      // Remove edit permissions to entities without read permissions\n      if (permission === 'read') {\n        previousPermissions.forEach((previousPermission) => {\n          // Do nothing if permission is still there\n          if (updatedPermissions.some(p => p === previousPermission)) {\n            return;\n          }\n\n          // Remove edit permission\n          const entityId = previousPermission.split(':').pop();\n          newUserPermissions = newUserPermissions.filter(p => p !== `${entity}:edit:${entityId}`);\n        });\n      }\n\n      // Grant read permissions to entities with edit permissions\n      if (permission === 'edit') {\n        updatedPermissions.forEach((updatePermission) => {\n          // Do nothing if permission was there before\n          if (previousPermissions.some(p => p === updatePermission)) {\n            return;\n          }\n\n          // Grant read permission\n          const entityId = updatePermission.split(':').pop();\n          newUserPermissions.push(`${entity}:read:${entityId}`);\n        });\n      }\n\n      this._updateField('permissions', newUserPermissions.concat(updatedPermissions));\n    };\n  },\n\n  _onCancel() {\n    this.props.history.goBack();\n  },\n\n  render() {\n    if (!this.state.streams || !this.state.dashboards) {\n      return <Spinner />;\n    }\n\n    const user = this.state.user;\n    const permissions = this.state.currentUser.permissions;\n\n    let requiresOldPassword = true;\n    if (this.isPermitted(permissions, 'users:passwordchange:*')) {\n      // Ask for old password if user is editing their own account\n      requiresOldPassword = this.props.user.username === this.state.currentUser.username;\n    }\n\n    const streamReadOptions = this.formatSelectedOptions(this.state.user.permissions, 'streams:read', this.state.streams);\n    const streamEditOptions = this.formatSelectedOptions(this.state.user.permissions, 'streams:edit', this.state.streams);\n\n    const dashboardReadOptions = this.formatSelectedOptions(this.state.user.permissions, 'dashboards:read', this.state.dashboards);\n    const dashboardEditOptions = this.formatSelectedOptions(this.state.user.permissions, 'dashboards:edit', this.state.dashboards);\n\n    return (\n      <div>\n        <Row>\n          <Col lg={8}>\n            <h2>User information</h2>\n            <form className=\"form-horizontal user-form\" id=\"edit-user-form\" onSubmit={this._updateUser}>\n              {user.read_only &&\n                <span>\n                  <Col smOffset={3} sm={9}>\n                    <Alert bsStyle=\"warning\" role=\"alert\">\n                      The admin user can only be modified in your Graylog server configuration file.\n                    </Alert>\n                  </Col>\n                  <div className=\"clearfix\" />\n                  <br />\n                </span>\n              }\n              <fieldset disabled={user.read_only}>\n                <Input name=\"full_name\" id=\"full_name\" type=\"text\" maxLength={200} value={user.full_name}\n                       onChange={this._bindValue} labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\"\n                       label=\"Full Name\" help=\"Give a descriptive name for this account, e.g. the full name.\"\n                       required />\n\n                <Input ref=\"email\" name=\"email\" id=\"email\" type=\"email\" maxLength={254} value={user.email}\n                       onChange={this._bindValue} labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\"\n                       label=\"Email Address\" help=\"Give the contact email address.\" required />\n\n                <IfPermitted permissions=\"users:edit\">\n                  <span>\n                    <div className=\"form-group\">\n                      <Col sm={9} smOffset={3}>\n                        <Panel bsStyle=\"danger\" header=\"Setting individual permissions is deprecated, please consider migrating to roles instead.\">\n                          The permissions listed here are the result of combining all granted permissions by the roles assigned to a user,\n                          which you can edit at the bottom of this page, as well as legacy, individual permissions which were assigned to the user before.\n                        </Panel>\n                      </Col>\n                      <label className=\"col-sm-3 control-label\" htmlFor=\"streampermissions\">Streams Permissions</label>\n                      <Col sm={9}>\n                        <MultiSelect ref=\"streamReadOptions\" placeholder=\"Choose streams read permissions...\"\n                                     options={this.formatMultiselectOptions(this.state.streams)}\n                                     value={streamReadOptions}\n                                     onChange={this._onPermissionsChange('streams', 'read')} />\n                        <span className=\"help-block\">Choose streams the user can <strong>view</strong>\n                          . Removing read access will remove edit access, too.</span>\n                        <MultiSelect ref=\"streamEditOptions\" placeholder=\"Choose streams edit permissions...\"\n                                     options={this.formatMultiselectOptions(this.state.streams)}\n                                     value={streamEditOptions}\n                                     onChange={this._onPermissionsChange('streams', 'edit')} />\n                        <span className=\"help-block\">Choose the streams the user can <strong>edit</strong>\n                          . Values chosen here will enable read access, too.</span>\n                      </Col>\n                    </div>\n                    <div className=\"form-group\">\n                      <label className=\"col-sm-3 control-label\" htmlFor=\"dashboardpermissions\">Dashboard Permissions</label>\n                      <Col sm={9}>\n                        <MultiSelect ref=\"dashboardReadOptions\" placeholder=\"Choose dashboards read permissions...\"\n                                     options={this.formatMultiselectOptions(this.state.dashboards)}\n                                     value={dashboardReadOptions}\n                                     onChange={this._onPermissionsChange('dashboards', 'read')} />\n                        <span className=\"help-block\">Choose dashboards the user can <strong>view</strong>\n                          . Removing read access will remove edit access, too.</span>\n                        <MultiSelect ref=\"dashboardEditOptions\" placeholder=\"Choose dashboards edit permissions...\"\n                                     options={this.formatMultiselectOptions(this.state.dashboards)}\n                                     value={dashboardEditOptions}\n                                     onChange={this._onPermissionsChange('dashboards', 'edit')} />\n                        <span className=\"help-block\">Choose dashboards the user can <strong>edit</strong>\n                          . Values chosen here will enable read access, too.</span>\n                      </Col>\n                    </div>\n                  </span>\n                </IfPermitted>\n                <IfPermitted permissions=\"*\">\n                  <TimeoutInput ref=\"session_timeout_ms\" value={user.session_timeout_ms} labelSize={3} controlSize={9}\n                                onChange={this._onFieldChange('session_timeout_ms')} />\n                </IfPermitted>\n\n                <Input label=\"Time Zone\"\n                       help=\"Choose your local time zone or leave it as it is to use the system's default.\"\n                       labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\">\n                  <TimezoneSelect ref=\"timezone\" className=\"timezone-select\" value={user.timezone}\n                                  onChange={this._onFieldChange('timezone')} />\n                </Input>\n\n                <div className=\"form-group\">\n                  <Col smOffset={3} sm={9}>\n                    <Button type=\"submit\" bsStyle=\"primary\" className=\"create-user save-button-margin\">\n                      Update User\n                    </Button>\n                    <Button onClick={this._onCancel}>Cancel</Button>\n                  </Col>\n                </div>\n              </fieldset>\n            </form>\n          </Col>\n        </Row>\n        <Row>\n          <Col lg={8}>\n            <h2>Change password</h2>\n            {user.read_only ?\n              <Col smOffset={3} sm={9}>\n                <Alert bsStyle=\"warning\" role=\"alert\">\n                Please edit your Graylog server configuration file to change the admin password.\n              </Alert>\n              </Col>\n            :\n              user.external ?\n                <Col smOffset={3} sm={9}>\n                  <Alert bsStyle=\"warning\" role=\"alert\">\n                  This user was created from an external system and you can't change the password here.\n                  Please contact an administrator for more information.\n                </Alert>\n                </Col>\n              :\n                <form className=\"form-horizontal\" style={{ marginTop: 10 }} onSubmit={this._changePassword}>\n                  {requiresOldPassword &&\n                  <Input ref=\"old_password\" name=\"old_password\" id=\"old_password\" type=\"password\" maxLength={100}\n                         labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\"\n                         label=\"Old Password\" required />\n                }\n                  <Input ref=\"password\" name=\"password\" id=\"password\" type=\"password\" maxLength={100}\n                       labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\"\n                       label=\"New Password\" required minLength=\"6\"\n                       help=\"Passwords must be at least 6 characters long. We recommend using a strong password.\"\n                       onChange={this._onPasswordChange} />\n\n                  <Input ref=\"password_repeat\" name=\"password_repeat\" id=\"password_repeat\" type=\"password\" maxLength={100}\n                       labelClassName=\"col-sm-3\" wrapperClassName=\"col-sm-9\"\n                       label=\"Repeat Password\" required minLength=\"6\" onChange={this._onPasswordChange} />\n\n                  <div className=\"form-group\">\n                    <Col smOffset={3} sm={9}>\n                      <Button bsStyle=\"primary\" type=\"submit\" className=\"save-button-margin\">\n                      Update Password\n                    </Button>\n                      <Button onClick={this._onCancel}>Cancel</Button>\n                    </Col>\n                  </div>\n                </form>\n            }\n          </Col>\n        </Row>\n        <IfPermitted permissions=\"users:rolesedit\">\n          <EditRolesForm user={this.props.user} history={this.props.history} />\n        </IfPermitted>\n      </div>\n    );\n  },\n});\n\nexport default UserForm;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/UserForm.jsx","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport UserPreferencesModal from 'components/users/UserPreferencesModal';\n\nconst UserPreferencesButton = React.createClass({\n  propTypes: {\n    userName: React.PropTypes.string.isRequired,\n  },\n  onClick() {\n    this.refs.userPreferencesModal.openModal();\n  },\n  render() {\n    return (\n      <span>\n        <Button onClick={this.onClick} bsStyle=\"success\">User preferences</Button>\n        <UserPreferencesModal ref=\"userPreferencesModal\" userName={this.props.userName} />\n      </span>\n    );\n  },\n});\n\nexport default UserPreferencesButton;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/UserPreferencesButton.jsx","import React from 'react';\nimport { Input } from 'components/bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst PreferencesStore = StoreProvider.getStore('Preferences');\n\nimport BootstrapModalForm from 'components/bootstrap/BootstrapModalForm';\n\nconst UserPreferencesModal = React.createClass({\n  propTypes: {\n    userName: React.PropTypes.string.isRequired,\n  },\n  getInitialState() {\n    return { preferences: [] };\n  },\n  _onPreferenceChanged(event) {\n    const name = event.target.name;\n    const preferenceToChange = this.state.preferences.filter(preference => preference.name === name)[0];\n    // TODO: we need the type of the preference to set it properly\n    if (preferenceToChange) {\n      preferenceToChange.value = event.target.value;\n      this.setState({ preferences: this.state.preferences });\n    }\n  },\n  _save() {\n    PreferencesStore.saveUserPreferences(this.state.preferences, this.refs.modal.close);\n  },\n  openModal() {\n    PreferencesStore.loadUserPreferences(this.props.userName, (preferences) => {\n      this.setState({ preferences: preferences });\n      this.refs.modal.open();\n    });\n  },\n  render() {\n    let shouldAutoFocus = true;\n\n    const formattedPreferences = this.state.preferences.map((preference, index) => {\n      const formattedPreference = (\n        <div className=\"form-group\" key={`${preference.name}-${index}`}>\n          <Input type=\"text\"\n                 id={`${preference.name}-${index}`}\n                 name={preference.name}\n                 label={preference.name}\n                 onChange={this._onPreferenceChanged}\n                 value={preference.value}\n                 required\n                 autoFocus={shouldAutoFocus} />\n        </div>\n      );\n\n      if (shouldAutoFocus) {\n        shouldAutoFocus = false;\n      }\n\n      return formattedPreference;\n    });\n    return (\n      <BootstrapModalForm ref=\"modal\"\n                          title={`Preferences for user ${this.props.userName}`}\n                          onSubmitForm={this._save}\n                          submitButtonText=\"Save\">\n        <div>{formattedPreferences}</div>\n      </BootstrapModalForm>\n    );\n  },\n});\n\nexport default UserPreferencesModal;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/users/UserPreferencesModal.jsx","import React from 'react';\nimport { Button } from 'react-bootstrap';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst UsersStore = StoreProvider.getStore('Users');\nconst StartpageStore = StoreProvider.getStore('Startpage');\n\nimport { DocumentTitle, PageHeader, Spinner } from 'components/common';\nimport UserForm from 'components/users/UserForm';\n\nimport UserPreferencesButton from 'components/users/UserPreferencesButton';\n\nconst EditUsersPage = React.createClass({\n  propTypes: {\n    params: React.PropTypes.object.isRequired,\n    history: React.PropTypes.object,\n  },\n  getInitialState() {\n    return {\n      user: undefined,\n    };\n  },\n  componentDidMount() {\n    this._loadUser(this.props.params.username);\n  },\n\n  componentWillReceiveProps(nextProps) {\n    if (this.props.params.username !== nextProps.params.username) {\n      this._loadUser(nextProps.params.username);\n    }\n  },\n\n  _loadUser(username) {\n    UsersStore.load(username).then((user) => {\n      this.setState({ user: user });\n    });\n  },\n  _resetStartpage() {\n    if (window.confirm('Are you sure you want to reset the start page?')) {\n      const username = this.props.params.username;\n      StartpageStore.set(username).then(() => this._loadUser(username));\n    }\n  },\n  render() {\n    if (!this.state.user) {\n      return <Spinner />;\n    }\n\n    const user = this.state.user;\n    let resetStartpageButton;\n    if (!user.read_only && user.startpage !== null && Object.keys(user.startpage).length > 0) {\n      resetStartpageButton = <Button bsStyle=\"info\" onClick={this._resetStartpage}>Reset custom startpage</Button>;\n    }\n\n    const userPreferencesButton = !user.read_only ?\n      (<span id=\"react-user-preferences-button\" data-user-name={this.props.params.username}>\n        <UserPreferencesButton userName={user.username} />\n      </span>)\n      : null;\n\n    return (\n      <DocumentTitle title={`Edit user ${this.props.params.username}`}>\n        <span>\n          <PageHeader title={<span>Edit user <em>{this.props.params.username}</em></span>} subpage>\n            <span>You can either change the details of a user here or set a new password.</span>\n            {null}\n            <div>\n              {resetStartpageButton}{' '}\n              {userPreferencesButton}\n            </div>\n          </PageHeader>\n\n          <UserForm user={this.state.user} history={this.props.history} />\n        </span>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default EditUsersPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/EditUsersPage.jsx","exports = module.exports = require(\"../../../node_modules/css-loader/lib/css-base.js\")();\n// imports\n\n\n// module\nexports.push([module.id, \"._1JCP9xI-zM9iz_soNhwBa_{margin-top:-15px;margin-bottom:20px}\", \"\"]);\n\n// exports\nexports.locals = {\n\t\"rolesMissingAlert\": \"_1JCP9xI-zM9iz_soNhwBa_\"\n};\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/css-loader!./src/components/users/EditRolesForm.css\n// module id = 1429\n// module chunks = 28","// style-loader: Adds some css to the DOM by adding a <style> tag\n\n// load the styles\nvar content = require(\"!!../../../node_modules/css-loader/index.js!./EditRolesForm.css\");\nif(typeof content === 'string') content = [[module.id, content, '']];\n// add the styles to the DOM\nvar update = require(\"!../../../node_modules/style-loader/addStyles.js\")(content, {});\nif(content.locals) module.exports = content.locals;\n// Hot Module Replacement\nif(module.hot) {\n\t// When the styles change, update the <style> tags\n\tif(!content.locals) {\n\t\tmodule.hot.accept(\"!!../../../node_modules/css-loader/index.js!./EditRolesForm.css\", function() {\n\t\t\tvar newContent = require(\"!!../../../node_modules/css-loader/index.js!./EditRolesForm.css\");\n\t\t\tif(typeof newContent === 'string') newContent = [[module.id, newContent, '']];\n\t\t\tupdate(newContent);\n\t\t});\n\t}\n\t// When the module is disposed, remove the <style> tags\n\tmodule.hot.dispose(function() { update(); });\n}\n\n\n//////////////////\n// WEBPACK FOOTER\n// ./~/style-loader!./~/css-loader!./src/components/users/EditRolesForm.css\n// module id = 1496\n// module chunks = 28"],"sourceRoot":""}