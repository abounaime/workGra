{"version":3,"sources":["webpack:///36.200197dca04f05abe3f2.js","webpack:///./src/pages/AlertNotificationsPage.jsx","webpack:///./src/components/alertnotifications/index.jsx?57d3***","webpack:///./src/components/alertnotifications/AlertNotification.jsx?7cee***","webpack:///./src/components/alertnotifications/AlertNotificationsComponent.jsx?03b7***","webpack:///./src/components/alertnotifications/AlertNotificationsList.jsx?07ee***","webpack:///./src/components/alertnotifications/CreateAlertNotificationInput.jsx?8136***","webpack:///./src/components/alertnotifications/UnknownAlertNotification.jsx?ac15***"],"names":["webpackJsonp","1365","module","exports","__webpack_require__","_interopRequireDefault","obj","__esModule","default","Object","defineProperty","value","_react","_react2","_reflux","_reflux2","_reactBootstrap","_reactRouterBootstrap","_common","_alertnotifications","_Routes","_Routes2","_StoreProvider","_StoreProvider2","CurrentUserStore","getStore","AlertNotificationsPage","createClass","displayName","mixins","connect","render","createElement","DocumentTitle","title","PageHeader","LinkContainer","to","ALERTS","CONDITIONS","Button","bsStyle","href","target","className","Row","Col","md","AlertNotificationsComponent","956","_AlertNotification","enumerable","get","_AlertNotificationsComponent","_AlertNotificationsList","_CreateAlertNotificationInput","_UnknownAlertNotification","972","_PermissionsMixin","_PermissionsMixin2","_CombinedProvider","_CombinedProvider2","_configurationforms","_CombinedProvider$get","AlertNotificationsStore","_CombinedProvider$get2","AlarmCallbacksActions","_CombinedProvider$get3","AlertNotification","propTypes","alertNotification","PropTypes","object","isRequired","stream","onNotificationUpdate","func","onNotificationDelete","getInitialState","isTestingAlert","_onTestNotification","_this","this","setState","testAlert","props","id","finally","_onEdit","refs","configurationForm","open","_onSubmit","data","_this2","update","stream_id","then","_onDelete","_this3","window","confirm","delete","state","availableNotifications","Spinner","notification","typeDefinition","type","UnknownAlertNotification","onDelete","description","actions","isPermitted","currentUser","permissions","key","disabled","onClick","DropdownButton","pullRight","MenuItem","onSelect","divider","content","ConfigurationForm","ref","configFields","requested_configuration","typeName","titleValue","submitAction","values","configuration","ConfigurationWell","EntityListItem","titleSuffix","name","contentRow","973","_javascriptNaturalSort","_javascriptNaturalSort2","AlertNotificationsActions","StreamsStore","streams","undefined","componentDidMount","_loadData","listStreams","available","listAll","_isLoading","allNotifications","notifications","sort","a1","a2","t1","t2","toLowerCase","NEW_NOTIFICATION","AlertNotificationsList","alertNotifications","974","array","currentPage","PAGE_SIZE","_onChangePaginatedList","_paginatedNotifications","slice","_formatNotification","find","s","PaginatedList","totalItems","length","onChange","showPageSizeSelect","pageSize","EntityList","bsNoItemsStyle","noItemsText","items","map","975","_bootstrap","_UserNotification","_UserNotification2","_History","_History2","CreateAlertNotificationInput","selectedStream","PLACEHOLDER","_onChange","evt","_onStreamChange","nextStream","error","save","pushState","NOTIFICATIONS","_openForm","_resetForm","_formatNotificationForm","cancelAction","_formatOption","label","notificationForm","availableTypes","keys","formattedStreams","s1","s2","Input","help","Select","placeholder","options","onValueChange","976","Alert"],"mappings":"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","file":"36.200197dca04f05abe3f2.js","sourcesContent":["webpackJsonp([36],{\n\n/***/ 1365:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _common = __webpack_require__(48);\n\nvar _alertnotifications = __webpack_require__(956);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _StoreProvider = __webpack_require__(18);\n\nvar _StoreProvider2 = _interopRequireDefault(_StoreProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar CurrentUserStore = _StoreProvider2.default.getStore('CurrentUser');\n\nvar AlertNotificationsPage = _react2.default.createClass({\n  displayName: 'AlertNotificationsPage',\n\n  mixins: [_reflux2.default.connect(CurrentUserStore)],\n  render: function render() {\n    return _react2.default.createElement(\n      _common.DocumentTitle,\n      { title: 'Alert notifications' },\n      _react2.default.createElement(\n        'div',\n        null,\n        _react2.default.createElement(\n          _common.PageHeader,\n          { title: 'Manage alert notifications' },\n          _react2.default.createElement(\n            'span',\n            null,\n            'Notifications let you be aware of changes in your alert conditions status any time. Graylog can send notifications directly to you or to other systems you use for that purpose.'\n          ),\n          _react2.default.createElement(\n            'span',\n            null,\n            'Remember to assign the notifications to use in the alert conditions page.'\n          ),\n          _react2.default.createElement(\n            'span',\n            null,\n            _react2.default.createElement(\n              _reactRouterBootstrap.LinkContainer,\n              { to: _Routes2.default.ALERTS.CONDITIONS },\n              _react2.default.createElement(\n                _reactBootstrap.Button,\n                { bsStyle: 'info' },\n                'Manage conditions'\n              )\n            ),\n            '\\xA0',\n            _react2.default.createElement(\n              _reactBootstrap.Button,\n              { bsStyle: 'info', href: 'https://marketplace.graylog.org/', target: '_blank' },\n              _react2.default.createElement('i', { className: 'fa fa-external-link' }),\n              '\\xA0 Find more notifications'\n            )\n          )\n        ),\n        _react2.default.createElement(\n          _reactBootstrap.Row,\n          { className: 'content' },\n          _react2.default.createElement(\n            _reactBootstrap.Col,\n            { md: 12 },\n            _react2.default.createElement(_alertnotifications.AlertNotificationsComponent, null)\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = AlertNotificationsPage;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 956:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _AlertNotification = __webpack_require__(972);\n\nObject.defineProperty(exports, 'AlertNotification', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AlertNotification).default;\n  }\n});\n\nvar _AlertNotificationsComponent = __webpack_require__(973);\n\nObject.defineProperty(exports, 'AlertNotificationsComponent', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AlertNotificationsComponent).default;\n  }\n});\n\nvar _AlertNotificationsList = __webpack_require__(974);\n\nObject.defineProperty(exports, 'AlertNotificationsList', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_AlertNotificationsList).default;\n  }\n});\n\nvar _CreateAlertNotificationInput = __webpack_require__(975);\n\nObject.defineProperty(exports, 'CreateAlertNotificationInput', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_CreateAlertNotificationInput).default;\n  }\n});\n\nvar _UnknownAlertNotification = __webpack_require__(976);\n\nObject.defineProperty(exports, 'UnknownAlertNotification', {\n  enumerable: true,\n  get: function get() {\n    return _interopRequireDefault(_UnknownAlertNotification).default;\n  }\n});\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\n/***/ }),\n\n/***/ 972:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _PermissionsMixin = __webpack_require__(165);\n\nvar _PermissionsMixin2 = _interopRequireDefault(_PermissionsMixin);\n\nvar _CombinedProvider = __webpack_require__(86);\n\nvar _CombinedProvider2 = _interopRequireDefault(_CombinedProvider);\n\nvar _common = __webpack_require__(48);\n\nvar _alertnotifications = __webpack_require__(956);\n\nvar _configurationforms = __webpack_require__(953);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _CombinedProvider$get = _CombinedProvider2.default.get('AlertNotifications'),\n    AlertNotificationsStore = _CombinedProvider$get.AlertNotificationsStore;\n\nvar _CombinedProvider$get2 = _CombinedProvider2.default.get('AlarmCallbacks'),\n    AlarmCallbacksActions = _CombinedProvider$get2.AlarmCallbacksActions;\n\nvar _CombinedProvider$get3 = _CombinedProvider2.default.get('CurrentUser'),\n    CurrentUserStore = _CombinedProvider$get3.CurrentUserStore;\n\nvar AlertNotification = _react2.default.createClass({\n  displayName: 'AlertNotification',\n\n  propTypes: {\n    alertNotification: _react2.default.PropTypes.object.isRequired,\n    stream: _react2.default.PropTypes.object,\n    onNotificationUpdate: _react2.default.PropTypes.func,\n    onNotificationDelete: _react2.default.PropTypes.func\n  },\n  mixins: [_reflux2.default.connect(AlertNotificationsStore), _reflux2.default.connect(CurrentUserStore), _PermissionsMixin2.default],\n\n  getInitialState: function getInitialState() {\n    return {\n      isTestingAlert: false\n    };\n  },\n  _onTestNotification: function _onTestNotification() {\n    var _this = this;\n\n    this.setState({ isTestingAlert: true });\n    AlertNotificationsStore.testAlert(this.props.alertNotification.id).finally(function () {\n      return _this.setState({ isTestingAlert: false });\n    });\n  },\n  _onEdit: function _onEdit() {\n    this.refs.configurationForm.open();\n  },\n  _onSubmit: function _onSubmit(data) {\n    var _this2 = this;\n\n    AlarmCallbacksActions.update(this.props.alertNotification.stream_id, this.props.alertNotification.id, data).then(function () {\n      if (typeof _this2.props.onNotificationUpdate === 'function') {\n        _this2.props.onNotificationUpdate();\n      }\n    });\n  },\n  _onDelete: function _onDelete() {\n    var _this3 = this;\n\n    if (window.confirm('Really delete alert notification?')) {\n      AlarmCallbacksActions.delete(this.props.alertNotification.stream_id, this.props.alertNotification.id).then(function () {\n        if (typeof _this3.props.onNotificationUpdate === 'function') {\n          _this3.props.onNotificationUpdate();\n        }\n      });\n    }\n  },\n  render: function render() {\n    if (!this.state.availableNotifications) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var notification = this.props.alertNotification;\n    var stream = this.props.stream;\n    var typeDefinition = this.state.availableNotifications[notification.type];\n\n    if (!typeDefinition) {\n      return _react2.default.createElement(_alertnotifications.UnknownAlertNotification, { alertNotification: notification, onDelete: this._onDelete });\n    }\n\n    var description = stream ? _react2.default.createElement(\n      'span',\n      null,\n      'Executed once per triggered alert condition in stream ',\n      _react2.default.createElement(\n        'em',\n        null,\n        stream.title\n      )\n    ) : 'Not executed, as it is not connected to a stream';\n\n    var actions = this.isPermitted(this.state.currentUser.permissions, ['streams:edit:' + stream.id]) && [_react2.default.createElement(\n      _reactBootstrap.Button,\n      { key: 'test-button', bsStyle: 'info', disabled: this.state.isTestingAlert, onClick: this._onTestNotification },\n      this.state.isTestingAlert ? 'Testing...' : 'Test'\n    ), _react2.default.createElement(\n      _reactBootstrap.DropdownButton,\n      { key: 'more-actions-button', title: 'More actions', pullRight: true,\n        id: 'more-actions-dropdown-' + notification.id },\n      _react2.default.createElement(\n        _reactBootstrap.MenuItem,\n        { onSelect: this._onEdit },\n        'Edit'\n      ),\n      _react2.default.createElement(_reactBootstrap.MenuItem, { divider: true }),\n      _react2.default.createElement(\n        _reactBootstrap.MenuItem,\n        { onSelect: this._onDelete },\n        'Delete'\n      )\n    )];\n\n    var content = _react2.default.createElement(\n      _reactBootstrap.Col,\n      { md: 12 },\n      _react2.default.createElement(\n        'div',\n        { className: 'alert-callback alarm-callbacks' },\n        _react2.default.createElement(_configurationforms.ConfigurationForm, { ref: 'configurationForm',\n          key: 'configuration-form-notification-' + notification.id,\n          configFields: typeDefinition.requested_configuration,\n          title: 'Editing alert configuration ',\n          typeName: notification.type,\n          titleValue: notification.title,\n          submitAction: this._onSubmit,\n          values: notification.configuration }),\n        _react2.default.createElement(_configurationforms.ConfigurationWell, { configuration: notification.configuration, typeDefinition: typeDefinition })\n      )\n    );\n\n    return _react2.default.createElement(_common.EntityListItem, { key: 'entry-list-' + notification.id,\n      title: notification.title ? notification.title : 'Untitled',\n      titleSuffix: '(' + typeDefinition.name + ')',\n      description: description,\n      actions: actions,\n      contentRow: content });\n  }\n});\n\nexports.default = AlertNotification;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 973:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _reactRouterBootstrap = __webpack_require__(949);\n\nvar _javascriptNaturalSort = __webpack_require__(951);\n\nvar _javascriptNaturalSort2 = _interopRequireDefault(_javascriptNaturalSort);\n\nvar _common = __webpack_require__(48);\n\nvar _alertnotifications = __webpack_require__(956);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _CombinedProvider = __webpack_require__(86);\n\nvar _CombinedProvider2 = _interopRequireDefault(_CombinedProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _CombinedProvider$get = _CombinedProvider2.default.get('AlertNotifications'),\n    AlertNotificationsStore = _CombinedProvider$get.AlertNotificationsStore,\n    AlertNotificationsActions = _CombinedProvider$get.AlertNotificationsActions;\n\nvar _CombinedProvider$get2 = _CombinedProvider2.default.get('Streams'),\n    StreamsStore = _CombinedProvider$get2.StreamsStore;\n\nvar AlertNotificationsComponent = _react2.default.createClass({\n  displayName: 'AlertNotificationsComponent',\n\n  mixins: [_reflux2.default.connect(AlertNotificationsStore)],\n\n  getInitialState: function getInitialState() {\n    return {\n      streams: undefined\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    this._loadData();\n  },\n  _loadData: function _loadData() {\n    var _this = this;\n\n    StreamsStore.listStreams().then(function (streams) {\n      _this.setState({ streams: streams });\n    });\n\n    AlertNotificationsActions.available();\n    AlertNotificationsActions.listAll();\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.streams || !this.state.availableNotifications || !this.state.allNotifications;\n  },\n  render: function render() {\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var notifications = this.state.allNotifications.sort(function (a1, a2) {\n      var t1 = a1.title || 'Untitled';\n      var t2 = a2.title || 'Untitled';\n      return (0, _javascriptNaturalSort2.default)(t1.toLowerCase(), t2.toLowerCase());\n    });\n\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'div',\n        { className: 'pull-right' },\n        _react2.default.createElement(\n          _reactRouterBootstrap.LinkContainer,\n          { to: _Routes2.default.ALERTS.NEW_NOTIFICATION },\n          _react2.default.createElement(\n            _reactBootstrap.Button,\n            { bsStyle: 'success' },\n            'Add new notification'\n          )\n        )\n      ),\n      _react2.default.createElement(\n        'h2',\n        null,\n        'Notifications'\n      ),\n      _react2.default.createElement(\n        'p',\n        null,\n        'These are all configured alert notifications.'\n      ),\n      _react2.default.createElement(_alertnotifications.AlertNotificationsList, { alertNotifications: notifications, streams: this.state.streams,\n        onNotificationUpdate: this._loadData, onNotificationDelete: this._loadData })\n    );\n  }\n});\n\nexports.default = AlertNotificationsComponent;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 974:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _alertnotifications = __webpack_require__(956);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar AlertNotificationsList = _react2.default.createClass({\n  displayName: 'AlertNotificationsList',\n\n  propTypes: {\n    alertNotifications: _react2.default.PropTypes.array.isRequired,\n    streams: _react2.default.PropTypes.array.isRequired,\n    onNotificationUpdate: _react2.default.PropTypes.func,\n    onNotificationDelete: _react2.default.PropTypes.func\n  },\n\n  getInitialState: function getInitialState() {\n    return {\n      currentPage: 0\n    };\n  },\n\n\n  PAGE_SIZE: 10,\n\n  _onChangePaginatedList: function _onChangePaginatedList(currentPage) {\n    this.setState({ currentPage: currentPage - 1 });\n  },\n  _paginatedNotifications: function _paginatedNotifications() {\n    return this.props.alertNotifications.slice(this.state.currentPage * this.PAGE_SIZE, (this.state.currentPage + 1) * this.PAGE_SIZE);\n  },\n  _formatNotification: function _formatNotification(notification) {\n    var stream = this.props.streams.find(function (s) {\n      return s.id === notification.stream_id;\n    });\n    return _react2.default.createElement(_alertnotifications.AlertNotification, { key: notification.id, alertNotification: notification, stream: stream,\n      onNotificationUpdate: this.props.onNotificationUpdate,\n      onNotificationDelete: this.props.onNotificationDelete });\n  },\n  render: function render() {\n    var _this = this;\n\n    var notifications = this.props.alertNotifications;\n\n    return _react2.default.createElement(\n      _common.PaginatedList,\n      { totalItems: notifications.length, onChange: this._onChangePaginatedList,\n        showPageSizeSelect: false, pageSize: this.PAGE_SIZE },\n      _react2.default.createElement(_common.EntityList, { bsNoItemsStyle: 'info',\n        noItemsText: 'There are no configured notifications.',\n        items: this._paginatedNotifications().map(function (notification) {\n          return _this._formatNotification(notification);\n        }) })\n    );\n  }\n});\n\nexports.default = AlertNotificationsList;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 975:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reflux = __webpack_require__(1);\n\nvar _reflux2 = _interopRequireDefault(_reflux);\n\nvar _javascriptNaturalSort = __webpack_require__(951);\n\nvar _javascriptNaturalSort2 = _interopRequireDefault(_javascriptNaturalSort);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _bootstrap = __webpack_require__(43);\n\nvar _common = __webpack_require__(48);\n\nvar _configurationforms = __webpack_require__(953);\n\nvar _Routes = __webpack_require__(75);\n\nvar _Routes2 = _interopRequireDefault(_Routes);\n\nvar _UserNotification = __webpack_require__(5);\n\nvar _UserNotification2 = _interopRequireDefault(_UserNotification);\n\nvar _History = __webpack_require__(166);\n\nvar _History2 = _interopRequireDefault(_History);\n\nvar _CombinedProvider = __webpack_require__(86);\n\nvar _CombinedProvider2 = _interopRequireDefault(_CombinedProvider);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar _CombinedProvider$get = _CombinedProvider2.default.get('AlertNotifications'),\n    AlertNotificationsStore = _CombinedProvider$get.AlertNotificationsStore,\n    AlertNotificationsActions = _CombinedProvider$get.AlertNotificationsActions;\n\nvar _CombinedProvider$get2 = _CombinedProvider2.default.get('AlarmCallbacks'),\n    AlarmCallbacksActions = _CombinedProvider$get2.AlarmCallbacksActions;\n\nvar _CombinedProvider$get3 = _CombinedProvider2.default.get('Streams'),\n    StreamsStore = _CombinedProvider$get3.StreamsStore;\n\nvar CreateAlertNotificationInput = _react2.default.createClass({\n  displayName: 'CreateAlertNotificationInput',\n\n  mixins: [_reflux2.default.connect(AlertNotificationsStore)],\n  getInitialState: function getInitialState() {\n    return {\n      streams: undefined,\n      selectedStream: undefined,\n      type: this.PLACEHOLDER\n    };\n  },\n  componentDidMount: function componentDidMount() {\n    var _this = this;\n\n    StreamsStore.listStreams().then(function (streams) {\n      _this.setState({ streams: streams });\n    });\n    AlertNotificationsActions.available();\n  },\n\n\n  PLACEHOLDER: 'placeholder',\n\n  _onChange: function _onChange(evt) {\n    this.setState({ type: evt.target.value });\n  },\n  _onStreamChange: function _onStreamChange(nextStream) {\n    this.setState({ selectedStream: this.state.streams.find(function (s) {\n        return s.id === nextStream;\n      }) });\n  },\n  _onSubmit: function _onSubmit(data) {\n    var _this2 = this;\n\n    if (!this.state.selectedStream) {\n      _UserNotification2.default.error('Please select the stream that the condition should check.', 'Could not save condition');\n    }\n\n    AlarmCallbacksActions.save(this.state.selectedStream.id, data).then(function () {\n      _History2.default.pushState(null, _Routes2.default.ALERTS.NOTIFICATIONS);\n    }, function () {\n      return _this2.refs.configurationForm.open();\n    });\n  },\n  _openForm: function _openForm() {\n    this.refs.configurationForm.open();\n  },\n  _resetForm: function _resetForm() {\n    this.setState({ type: this.PLACEHOLDER });\n  },\n  _formatNotificationForm: function _formatNotificationForm(type) {\n    var typeDefinition = this.state.availableNotifications[type];\n    return _react2.default.createElement(_configurationforms.ConfigurationForm, { ref: 'configurationForm',\n      key: 'configuration-form-output',\n      configFields: typeDefinition.requested_configuration,\n      title: 'Create new ' + typeDefinition.name,\n      typeName: type,\n      submitAction: this._onSubmit,\n      cancelAction: this._resetForm });\n  },\n  _formatOption: function _formatOption(key, value) {\n    return { value: value, label: key };\n  },\n  _isLoading: function _isLoading() {\n    return !this.state.availableNotifications || !this.state.streams;\n  },\n  render: function render() {\n    var _this3 = this;\n\n    if (this._isLoading()) {\n      return _react2.default.createElement(_common.Spinner, null);\n    }\n\n    var notificationForm = this.state.type !== this.PLACEHOLDER ? this._formatNotificationForm(this.state.type) : null;\n    var availableTypes = Object.keys(this.state.availableNotifications).map(function (value) {\n      return _react2.default.createElement(\n        'option',\n        { key: 'type-option-' + value, value: value },\n        _this3.state.availableNotifications[value].name\n      );\n    });\n    var formattedStreams = this.state.streams.map(function (stream) {\n      return _this3._formatOption(stream.title, stream.id);\n    }).sort(function (s1, s2) {\n      return (0, _javascriptNaturalSort2.default)(s1.label.toLowerCase(), s2.label.toLowerCase());\n    });\n    return _react2.default.createElement(\n      'div',\n      null,\n      _react2.default.createElement(\n        'h2',\n        null,\n        'Notification'\n      ),\n      _react2.default.createElement(\n        'p',\n        { className: 'description' },\n        'Define the notification that will be triggered from the alert conditions in a stream.'\n      ),\n      _react2.default.createElement(\n        _reactBootstrap.Row,\n        null,\n        _react2.default.createElement(\n          _reactBootstrap.Col,\n          { md: 6 },\n          _react2.default.createElement(\n            'form',\n            null,\n            _react2.default.createElement(\n              _bootstrap.Input,\n              { label: 'Notify on stream',\n                help: 'Select the stream that should use this notification when its alert conditions are triggered.' },\n              _react2.default.createElement(_common.Select, { placeholder: 'Select a stream', options: formattedStreams, onValueChange: this._onStreamChange })\n            ),\n            _react2.default.createElement(\n              _bootstrap.Input,\n              { type: 'select', value: this.state.type, onChange: this._onChange,\n                disabled: !this.state.selectedStream,\n                label: 'Notification type', help: 'Select the notification type that will be used.' },\n              _react2.default.createElement(\n                'option',\n                { value: this.PLACEHOLDER, disabled: true },\n                'Select a notification type'\n              ),\n              availableTypes\n            ),\n            notificationForm,\n            ' ',\n            _react2.default.createElement(\n              _reactBootstrap.Button,\n              { onClick: this._openForm, disabled: this.state.type === this.PLACEHOLDER, bsStyle: 'success' },\n              'Add alert notification'\n            )\n          )\n        )\n      )\n    );\n  }\n});\n\nexports.default = CreateAlertNotificationInput;\nmodule.exports = exports['default'];\n\n/***/ }),\n\n/***/ 976:\n/***/ (function(module, exports, __webpack_require__) {\n\n\"use strict\";\n\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\n\nvar _react = __webpack_require__(2);\n\nvar _react2 = _interopRequireDefault(_react);\n\nvar _reactBootstrap = __webpack_require__(15);\n\nvar _common = __webpack_require__(48);\n\nfunction _interopRequireDefault(obj) { return obj && obj.__esModule ? obj : { default: obj }; }\n\nvar UnknownAlertNotification = _react2.default.createClass({\n  displayName: 'UnknownAlertNotification',\n\n  propTypes: {\n    alertNotification: _react2.default.PropTypes.object.isRequired,\n    onDelete: _react2.default.PropTypes.func.isRequired\n  },\n\n  render: function render() {\n    var notification = this.props.alertNotification;\n\n    var actions = [_react2.default.createElement(\n      _reactBootstrap.DropdownButton,\n      { key: 'actions-button', title: 'Actions', pullRight: true, id: 'more-actions-dropdown-' + notification.id },\n      _react2.default.createElement(\n        _reactBootstrap.MenuItem,\n        { onSelect: this.props.onDelete },\n        'Delete'\n      )\n    )];\n\n    var content = _react2.default.createElement(\n      _reactBootstrap.Col,\n      { md: 12 },\n      _react2.default.createElement(\n        _reactBootstrap.Alert,\n        { bsStyle: 'warning' },\n        'Could not resolve notification type. This is most likely caused by a missing plugin in your Graylog setup.'\n      )\n    );\n    return _react2.default.createElement(_common.EntityListItem, { key: 'entry-list-' + notification.id,\n      title: 'Unknown notification',\n      titleSuffix: '(' + notification.type + ')',\n      description: 'Cannot be executed while the notification type is unknown',\n      actions: actions,\n      contentRow: content });\n  }\n});\n\nexports.default = UnknownAlertNotification;\nmodule.exports = exports['default'];\n\n/***/ })\n\n});\n\n\n// WEBPACK FOOTER //\n// 36.200197dca04f05abe3f2.js","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button, Col, Row } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\n\nimport { DocumentTitle, PageHeader } from 'components/common';\nimport { AlertNotificationsComponent } from 'components/alertnotifications';\nimport Routes from 'routing/Routes';\n\nimport StoreProvider from 'injection/StoreProvider';\nconst CurrentUserStore = StoreProvider.getStore('CurrentUser');\n\nconst AlertNotificationsPage = React.createClass({\n  mixins: [Reflux.connect(CurrentUserStore)],\n  render() {\n    return (\n      <DocumentTitle title=\"Alert notifications\">\n        <div>\n          <PageHeader title=\"Manage alert notifications\">\n            <span>\n              Notifications let you be aware of changes in your alert conditions status any time. Graylog can send\n              notifications directly to you or to other systems you use for that purpose.\n            </span>\n\n            <span>\n              Remember to assign the notifications to use in the alert conditions page.\n            </span>\n\n            <span>\n              <LinkContainer to={Routes.ALERTS.CONDITIONS}>\n                <Button bsStyle=\"info\">Manage conditions</Button>\n              </LinkContainer>\n              &nbsp;\n              <Button bsStyle=\"info\" href=\"https://marketplace.graylog.org/\" target=\"_blank\">\n                <i className=\"fa fa-external-link\" />&nbsp; Find more notifications\n              </Button>\n            </span>\n          </PageHeader>\n\n          <Row className=\"content\">\n            <Col md={12}>\n              <AlertNotificationsComponent />\n            </Col>\n          </Row>\n        </div>\n      </DocumentTitle>\n    );\n  },\n});\n\nexport default AlertNotificationsPage;\n\n\n\n// WEBPACK FOOTER //\n// ./src/pages/AlertNotificationsPage.jsx","export { default as AlertNotification } from './AlertNotification';\nexport { default as AlertNotificationsComponent } from './AlertNotificationsComponent';\nexport { default as AlertNotificationsList } from './AlertNotificationsList';\nexport { default as CreateAlertNotificationInput } from './CreateAlertNotificationInput';\nexport { default as UnknownAlertNotification } from './UnknownAlertNotification';\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/index.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button, Col, DropdownButton, MenuItem } from 'react-bootstrap';\n\nimport PermissionsMixin from 'util/PermissionsMixin';\n\nimport CombinedProvider from 'injection/CombinedProvider';\nconst { AlertNotificationsStore } = CombinedProvider.get('AlertNotifications');\nconst { AlarmCallbacksActions } = CombinedProvider.get('AlarmCallbacks');\nconst { CurrentUserStore } = CombinedProvider.get('CurrentUser');\n\nimport { EntityListItem, Spinner } from 'components/common';\nimport { UnknownAlertNotification } from 'components/alertnotifications';\nimport { ConfigurationForm, ConfigurationWell } from 'components/configurationforms';\n\nconst AlertNotification = React.createClass({\n  propTypes: {\n    alertNotification: React.PropTypes.object.isRequired,\n    stream: React.PropTypes.object,\n    onNotificationUpdate: React.PropTypes.func,\n    onNotificationDelete: React.PropTypes.func,\n  },\n  mixins: [Reflux.connect(AlertNotificationsStore), Reflux.connect(CurrentUserStore), PermissionsMixin],\n\n  getInitialState() {\n    return {\n      isTestingAlert: false,\n    };\n  },\n\n  _onTestNotification() {\n    this.setState({ isTestingAlert: true });\n    AlertNotificationsStore.testAlert(this.props.alertNotification.id)\n      .finally(() => this.setState({ isTestingAlert: false }));\n  },\n\n  _onEdit() {\n    this.refs.configurationForm.open();\n  },\n\n  _onSubmit(data) {\n    AlarmCallbacksActions.update(this.props.alertNotification.stream_id, this.props.alertNotification.id, data)\n      .then(() => {\n        if (typeof this.props.onNotificationUpdate === 'function') {\n          this.props.onNotificationUpdate();\n        }\n      });\n  },\n\n  _onDelete() {\n    if (window.confirm('Really delete alert notification?')) {\n      AlarmCallbacksActions.delete(this.props.alertNotification.stream_id, this.props.alertNotification.id)\n        .then(() => {\n          if (typeof this.props.onNotificationUpdate === 'function') {\n            this.props.onNotificationUpdate();\n          }\n        });\n    }\n  },\n\n  render() {\n    if (!this.state.availableNotifications) {\n      return <Spinner />;\n    }\n\n    const notification = this.props.alertNotification;\n    const stream = this.props.stream;\n    const typeDefinition = this.state.availableNotifications[notification.type];\n\n    if (!typeDefinition) {\n      return <UnknownAlertNotification alertNotification={notification} onDelete={this._onDelete} />;\n    }\n\n    const description = (stream ?\n      <span>Executed once per triggered alert condition in stream <em>{stream.title}</em></span>\n      : 'Not executed, as it is not connected to a stream');\n\n    const actions = this.isPermitted(this.state.currentUser.permissions, [`streams:edit:${stream.id}`]) && [\n      <Button key=\"test-button\" bsStyle=\"info\" disabled={this.state.isTestingAlert} onClick={this._onTestNotification}>\n        {this.state.isTestingAlert ? 'Testing...' : 'Test'}\n      </Button>,\n      <DropdownButton key=\"more-actions-button\" title=\"More actions\" pullRight\n                      id={`more-actions-dropdown-${notification.id}`}>\n        <MenuItem onSelect={this._onEdit}>Edit</MenuItem>\n        <MenuItem divider />\n        <MenuItem onSelect={this._onDelete}>Delete</MenuItem>\n      </DropdownButton>,\n    ];\n\n    const content = (\n      <Col md={12}>\n        <div className=\"alert-callback alarm-callbacks\">\n          <ConfigurationForm ref=\"configurationForm\"\n                             key={`configuration-form-notification-${notification.id}`}\n                             configFields={typeDefinition.requested_configuration}\n                             title={'Editing alert configuration '}\n                             typeName={notification.type}\n                             titleValue={notification.title}\n                             submitAction={this._onSubmit}\n                             values={notification.configuration} />\n          <ConfigurationWell configuration={notification.configuration} typeDefinition={typeDefinition} />\n        </div>\n      </Col>\n    );\n\n    return (\n      <EntityListItem key={`entry-list-${notification.id}`}\n                      title={notification.title ? notification.title : 'Untitled'}\n                      titleSuffix={`(${typeDefinition.name})`}\n                      description={description}\n                      actions={actions}\n                      contentRow={content} />\n    );\n  },\n});\n\nexport default AlertNotification;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/AlertNotification.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport { Button } from 'react-bootstrap';\nimport { LinkContainer } from 'react-router-bootstrap';\nimport naturalSort from 'javascript-natural-sort';\n\nimport { Spinner } from 'components/common';\nimport { AlertNotificationsList } from 'components/alertnotifications';\n\nimport Routes from 'routing/Routes';\n\nimport CombinedProvider from 'injection/CombinedProvider';\nconst { AlertNotificationsStore, AlertNotificationsActions } = CombinedProvider.get('AlertNotifications');\nconst { StreamsStore } = CombinedProvider.get('Streams');\n\nconst AlertNotificationsComponent = React.createClass({\n  mixins: [Reflux.connect(AlertNotificationsStore)],\n\n  getInitialState() {\n    return {\n      streams: undefined,\n    };\n  },\n\n  componentDidMount() {\n    this._loadData();\n  },\n\n  _loadData() {\n    StreamsStore.listStreams().then((streams) => {\n      this.setState({ streams: streams });\n    });\n\n    AlertNotificationsActions.available();\n    AlertNotificationsActions.listAll();\n  },\n\n  _isLoading() {\n    return !this.state.streams || !this.state.availableNotifications || !this.state.allNotifications;\n  },\n\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    const notifications = this.state.allNotifications.sort((a1, a2) => {\n      const t1 = a1.title || 'Untitled';\n      const t2 = a2.title || 'Untitled';\n      return naturalSort(t1.toLowerCase(), t2.toLowerCase());\n    });\n\n    return (\n      <div>\n        <div className=\"pull-right\">\n          <LinkContainer to={Routes.ALERTS.NEW_NOTIFICATION}>\n            <Button bsStyle=\"success\">Add new notification</Button>\n          </LinkContainer>\n        </div>\n        <h2>Notifications</h2>\n        <p>These are all configured alert notifications.</p>\n        <AlertNotificationsList alertNotifications={notifications} streams={this.state.streams}\n                                onNotificationUpdate={this._loadData} onNotificationDelete={this._loadData} />\n      </div>\n    );\n  },\n});\n\nexport default AlertNotificationsComponent;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/AlertNotificationsComponent.jsx","import React from 'react';\n\nimport { AlertNotification } from 'components/alertnotifications';\nimport { EntityList, PaginatedList } from 'components/common';\n\nconst AlertNotificationsList = React.createClass({\n  propTypes: {\n    alertNotifications: React.PropTypes.array.isRequired,\n    streams: React.PropTypes.array.isRequired,\n    onNotificationUpdate: React.PropTypes.func,\n    onNotificationDelete: React.PropTypes.func,\n  },\n\n  getInitialState() {\n    return {\n      currentPage: 0,\n    };\n  },\n\n  PAGE_SIZE: 10,\n\n  _onChangePaginatedList(currentPage) {\n    this.setState({ currentPage: currentPage - 1 });\n  },\n\n  _paginatedNotifications() {\n    return this.props.alertNotifications.slice(this.state.currentPage * this.PAGE_SIZE, (this.state.currentPage + 1) * this.PAGE_SIZE);\n  },\n\n  _formatNotification(notification) {\n    const stream = this.props.streams.find(s => s.id === notification.stream_id);\n    return (\n      <AlertNotification key={notification.id} alertNotification={notification} stream={stream}\n                         onNotificationUpdate={this.props.onNotificationUpdate}\n                         onNotificationDelete={this.props.onNotificationDelete} />\n    );\n  },\n\n  render() {\n    const notifications = this.props.alertNotifications;\n\n    return (\n      <PaginatedList totalItems={notifications.length} onChange={this._onChangePaginatedList}\n                     showPageSizeSelect={false} pageSize={this.PAGE_SIZE}>\n        <EntityList bsNoItemsStyle=\"info\"\n                    noItemsText=\"There are no configured notifications.\"\n                    items={this._paginatedNotifications().map(notification => this._formatNotification(notification))} />\n      </PaginatedList>\n    );\n  },\n});\n\nexport default AlertNotificationsList;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/AlertNotificationsList.jsx","import React from 'react';\nimport Reflux from 'reflux';\nimport naturalSort from 'javascript-natural-sort';\nimport { Button, Col, Row } from 'react-bootstrap';\n\nimport { Input } from 'components/bootstrap';\nimport { Select, Spinner } from 'components/common';\nimport { ConfigurationForm } from 'components/configurationforms';\nimport Routes from 'routing/Routes';\nimport UserNotification from 'util/UserNotification';\nimport history from 'util/History';\n\nimport CombinedProvider from 'injection/CombinedProvider';\nconst { AlertNotificationsStore, AlertNotificationsActions } = CombinedProvider.get('AlertNotifications');\nconst { AlarmCallbacksActions } = CombinedProvider.get('AlarmCallbacks');\nconst { StreamsStore } = CombinedProvider.get('Streams');\n\nconst CreateAlertNotificationInput = React.createClass({\n  mixins: [Reflux.connect(AlertNotificationsStore)],\n  getInitialState() {\n    return {\n      streams: undefined,\n      selectedStream: undefined,\n      type: this.PLACEHOLDER,\n    };\n  },\n\n  componentDidMount() {\n    StreamsStore.listStreams().then((streams) => {\n      this.setState({ streams: streams });\n    });\n    AlertNotificationsActions.available();\n  },\n\n  PLACEHOLDER: 'placeholder',\n\n  _onChange(evt) {\n    this.setState({ type: evt.target.value });\n  },\n\n  _onStreamChange(nextStream) {\n    this.setState({ selectedStream: this.state.streams.find(s => s.id === nextStream) });\n  },\n\n  _onSubmit(data) {\n    if (!this.state.selectedStream) {\n      UserNotification.error('Please select the stream that the condition should check.', 'Could not save condition');\n    }\n\n    AlarmCallbacksActions.save(this.state.selectedStream.id, data).then(\n      () => {\n        history.pushState(null, Routes.ALERTS.NOTIFICATIONS);\n      },\n      () => this.refs.configurationForm.open(),\n    );\n  },\n  _openForm() {\n    this.refs.configurationForm.open();\n  },\n  _resetForm() {\n    this.setState({ type: this.PLACEHOLDER });\n  },\n  _formatNotificationForm(type) {\n    const typeDefinition = this.state.availableNotifications[type];\n    return (\n      <ConfigurationForm ref=\"configurationForm\"\n                         key=\"configuration-form-output\"\n                         configFields={typeDefinition.requested_configuration}\n                         title={`Create new ${typeDefinition.name}`}\n                         typeName={type}\n                         submitAction={this._onSubmit}\n                         cancelAction={this._resetForm} />\n    );\n  },\n\n  _formatOption(key, value) {\n    return { value: value, label: key };\n  },\n\n  _isLoading() {\n    return !this.state.availableNotifications || !this.state.streams;\n  },\n\n  render() {\n    if (this._isLoading()) {\n      return <Spinner />;\n    }\n\n    const notificationForm = (this.state.type !== this.PLACEHOLDER ? this._formatNotificationForm(this.state.type) : null);\n    const availableTypes = Object.keys(this.state.availableNotifications).map((value) => {\n      return (\n        <option key={`type-option-${value}`} value={value}>\n          {this.state.availableNotifications[value].name}\n        </option>\n      );\n    });\n    const formattedStreams = this.state.streams\n      .map(stream => this._formatOption(stream.title, stream.id))\n      .sort((s1, s2) => naturalSort(s1.label.toLowerCase(), s2.label.toLowerCase()));\n    return (\n      <div>\n        <h2>Notification</h2>\n        <p className=\"description\">\n          Define the notification that will be triggered from the alert conditions in a stream.\n        </p>\n\n        <Row>\n          <Col md={6}>\n            <form>\n              <Input label=\"Notify on stream\"\n                     help=\"Select the stream that should use this notification when its alert conditions are triggered.\">\n                <Select placeholder=\"Select a stream\" options={formattedStreams} onValueChange={this._onStreamChange} />\n              </Input>\n\n              <Input type=\"select\" value={this.state.type} onChange={this._onChange}\n                     disabled={!this.state.selectedStream}\n                     label=\"Notification type\" help=\"Select the notification type that will be used.\">\n                <option value={this.PLACEHOLDER} disabled>Select a notification type</option>\n                {availableTypes}\n              </Input>\n              {notificationForm}\n              {' '}\n              <Button onClick={this._openForm} disabled={this.state.type === this.PLACEHOLDER} bsStyle=\"success\">\n                Add alert notification\n              </Button>\n            </form>\n          </Col>\n        </Row>\n      </div>\n    );\n  },\n});\n\nexport default CreateAlertNotificationInput;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/CreateAlertNotificationInput.jsx","import React from 'react';\nimport { Alert, Col, DropdownButton, MenuItem } from 'react-bootstrap';\n\nimport { EntityListItem } from 'components/common';\n\nconst UnknownAlertNotification = React.createClass({\n  propTypes: {\n    alertNotification: React.PropTypes.object.isRequired,\n    onDelete: React.PropTypes.func.isRequired,\n  },\n\n  render() {\n    const notification = this.props.alertNotification;\n\n    const actions = [\n      <DropdownButton key=\"actions-button\" title=\"Actions\" pullRight id={`more-actions-dropdown-${notification.id}`}>\n        <MenuItem onSelect={this.props.onDelete}>Delete</MenuItem>\n      </DropdownButton>,\n    ];\n\n    const content = (\n      <Col md={12}>\n        <Alert bsStyle=\"warning\">\n          Could not resolve notification type. This is most likely caused by a missing plugin in your Graylog setup.\n        </Alert>\n      </Col>\n    );\n    return (\n      <EntityListItem key={`entry-list-${notification.id}`}\n                      title=\"Unknown notification\"\n                      titleSuffix={`(${notification.type})`}\n                      description=\"Cannot be executed while the notification type is unknown\"\n                      actions={actions}\n                      contentRow={content} />\n    );\n  },\n});\n\nexport default UnknownAlertNotification;\n\n\n\n// WEBPACK FOOTER //\n// ./src/components/alertnotifications/UnknownAlertNotification.jsx"],"sourceRoot":""}